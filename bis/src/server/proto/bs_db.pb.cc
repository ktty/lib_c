// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bs_db.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "bs_db.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace bs_czl {
class MsgNodeTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgNodeType> {
} _MsgNodeType_default_instance_;
class MsgLenTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgLenType> {
} _MsgLenType_default_instance_;
class MsgDbVersionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgDbVersion> {
} _MsgDbVersion_default_instance_;
class MsgDbDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgDb> {
} _MsgDb_default_instance_;
class MsgDbTableDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgDbTable> {
} _MsgDbTable_default_instance_;
class MsgDbKeyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgDbKey> {
} _MsgDbKey_default_instance_;

namespace protobuf_bs_5fdb_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[6];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgNodeType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgLenType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDbVersion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDbVersion, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDbVersion, auth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDbVersion, save_time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDb, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDb, num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDbTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDbTable, key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDbTable, length_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDbKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDbKey, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgDbKey, val_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(MsgNodeType)},
  { 4, -1, sizeof(MsgLenType)},
  { 8, -1, sizeof(MsgDbVersion)},
  { 15, -1, sizeof(MsgDb)},
  { 20, -1, sizeof(MsgDbTable)},
  { 26, -1, sizeof(MsgDbKey)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgNodeType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgLenType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgDbVersion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgDb_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgDbTable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgDbKey_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "bs_db.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

}  // namespace

void TableStruct::Shutdown() {
  _MsgNodeType_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _MsgLenType_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _MsgDbVersion_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _MsgDb_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _MsgDbTable_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _MsgDbKey_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _MsgNodeType_default_instance_.DefaultConstruct();
  _MsgLenType_default_instance_.DefaultConstruct();
  _MsgDbVersion_default_instance_.DefaultConstruct();
  _MsgDb_default_instance_.DefaultConstruct();
  _MsgDbTable_default_instance_.DefaultConstruct();
  _MsgDbKey_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\013bs_db.proto\022\006bs_czl\">\n\013MsgNodeType\"/\n\004"
      "Type\022\013\n\007VERSION\020\000\022\006\n\002DB\020\001\022\t\n\005TABLE\020\002\022\007\n\003"
      "KEY\020\003\"=\n\nMsgLenType\"/\n\004Type\022\013\n\007BS_6BIT\020\000"
      "\022\014\n\010BS_14BIT\020\001\022\014\n\010BS_32BIT\020\002\"@\n\014MsgDbVer"
      "sion\022\017\n\007version\030\001 \001(\014\022\014\n\004auth\030\002 \001(\014\022\021\n\ts"
      "ave_time\030\003 \001(\014\"\024\n\005MsgDb\022\013\n\003num\030\001 \001(\004\",\n\n"
      "MsgDbTable\022\016\n\006key_id\030\001 \001(\014\022\016\n\006length\030\002 \001"
      "(\004\"$\n\010MsgDbKey\022\013\n\003key\030\001 \003(\001\022\013\n\003val\030\002 \003(\014"
      "b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 328);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "bs_db.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_bs_5fdb_2eproto

const ::google::protobuf::EnumDescriptor* MsgNodeType_Type_descriptor() {
  protobuf_bs_5fdb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fdb_2eproto::file_level_enum_descriptors[0];
}
bool MsgNodeType_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MsgNodeType_Type MsgNodeType::VERSION;
const MsgNodeType_Type MsgNodeType::DB;
const MsgNodeType_Type MsgNodeType::TABLE;
const MsgNodeType_Type MsgNodeType::KEY;
const MsgNodeType_Type MsgNodeType::Type_MIN;
const MsgNodeType_Type MsgNodeType::Type_MAX;
const int MsgNodeType::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MsgLenType_Type_descriptor() {
  protobuf_bs_5fdb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fdb_2eproto::file_level_enum_descriptors[1];
}
bool MsgLenType_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MsgLenType_Type MsgLenType::BS_6BIT;
const MsgLenType_Type MsgLenType::BS_14BIT;
const MsgLenType_Type MsgLenType::BS_32BIT;
const MsgLenType_Type MsgLenType::Type_MIN;
const MsgLenType_Type MsgLenType::Type_MAX;
const int MsgLenType::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgNodeType::MsgNodeType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bs_5fdb_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bs_czl.MsgNodeType)
}
MsgNodeType::MsgNodeType(const MsgNodeType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bs_czl.MsgNodeType)
}

void MsgNodeType::SharedCtor() {
  _cached_size_ = 0;
}

MsgNodeType::~MsgNodeType() {
  // @@protoc_insertion_point(destructor:bs_czl.MsgNodeType)
  SharedDtor();
}

void MsgNodeType::SharedDtor() {
}

void MsgNodeType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgNodeType::descriptor() {
  protobuf_bs_5fdb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fdb_2eproto::file_level_metadata[0].descriptor;
}

const MsgNodeType& MsgNodeType::default_instance() {
  protobuf_bs_5fdb_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgNodeType* MsgNodeType::New(::google::protobuf::Arena* arena) const {
  MsgNodeType* n = new MsgNodeType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgNodeType::Clear() {
// @@protoc_insertion_point(message_clear_start:bs_czl.MsgNodeType)
}

bool MsgNodeType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bs_czl.MsgNodeType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:bs_czl.MsgNodeType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bs_czl.MsgNodeType)
  return false;
#undef DO_
}

void MsgNodeType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bs_czl.MsgNodeType)
  // @@protoc_insertion_point(serialize_end:bs_czl.MsgNodeType)
}

::google::protobuf::uint8* MsgNodeType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bs_czl.MsgNodeType)
  // @@protoc_insertion_point(serialize_to_array_end:bs_czl.MsgNodeType)
  return target;
}

size_t MsgNodeType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bs_czl.MsgNodeType)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgNodeType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bs_czl.MsgNodeType)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgNodeType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgNodeType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bs_czl.MsgNodeType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bs_czl.MsgNodeType)
    MergeFrom(*source);
  }
}

void MsgNodeType::MergeFrom(const MsgNodeType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bs_czl.MsgNodeType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void MsgNodeType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bs_czl.MsgNodeType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgNodeType::CopyFrom(const MsgNodeType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bs_czl.MsgNodeType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgNodeType::IsInitialized() const {
  return true;
}

void MsgNodeType::Swap(MsgNodeType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgNodeType::InternalSwap(MsgNodeType* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgNodeType::GetMetadata() const {
  protobuf_bs_5fdb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fdb_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgNodeType

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgLenType::MsgLenType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bs_5fdb_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bs_czl.MsgLenType)
}
MsgLenType::MsgLenType(const MsgLenType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bs_czl.MsgLenType)
}

void MsgLenType::SharedCtor() {
  _cached_size_ = 0;
}

MsgLenType::~MsgLenType() {
  // @@protoc_insertion_point(destructor:bs_czl.MsgLenType)
  SharedDtor();
}

void MsgLenType::SharedDtor() {
}

void MsgLenType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgLenType::descriptor() {
  protobuf_bs_5fdb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fdb_2eproto::file_level_metadata[1].descriptor;
}

const MsgLenType& MsgLenType::default_instance() {
  protobuf_bs_5fdb_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgLenType* MsgLenType::New(::google::protobuf::Arena* arena) const {
  MsgLenType* n = new MsgLenType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgLenType::Clear() {
// @@protoc_insertion_point(message_clear_start:bs_czl.MsgLenType)
}

bool MsgLenType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bs_czl.MsgLenType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:bs_czl.MsgLenType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bs_czl.MsgLenType)
  return false;
#undef DO_
}

void MsgLenType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bs_czl.MsgLenType)
  // @@protoc_insertion_point(serialize_end:bs_czl.MsgLenType)
}

::google::protobuf::uint8* MsgLenType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bs_czl.MsgLenType)
  // @@protoc_insertion_point(serialize_to_array_end:bs_czl.MsgLenType)
  return target;
}

size_t MsgLenType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bs_czl.MsgLenType)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgLenType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bs_czl.MsgLenType)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgLenType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgLenType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bs_czl.MsgLenType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bs_czl.MsgLenType)
    MergeFrom(*source);
  }
}

void MsgLenType::MergeFrom(const MsgLenType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bs_czl.MsgLenType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
}

void MsgLenType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bs_czl.MsgLenType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLenType::CopyFrom(const MsgLenType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bs_czl.MsgLenType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLenType::IsInitialized() const {
  return true;
}

void MsgLenType::Swap(MsgLenType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgLenType::InternalSwap(MsgLenType* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgLenType::GetMetadata() const {
  protobuf_bs_5fdb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fdb_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgLenType

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgDbVersion::kVersionFieldNumber;
const int MsgDbVersion::kAuthFieldNumber;
const int MsgDbVersion::kSaveTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgDbVersion::MsgDbVersion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bs_5fdb_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bs_czl.MsgDbVersion)
}
MsgDbVersion::MsgDbVersion(const MsgDbVersion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  auth_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.auth().size() > 0) {
    auth_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.auth_);
  }
  save_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.save_time().size() > 0) {
    save_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.save_time_);
  }
  // @@protoc_insertion_point(copy_constructor:bs_czl.MsgDbVersion)
}

void MsgDbVersion::SharedCtor() {
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  auth_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  save_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MsgDbVersion::~MsgDbVersion() {
  // @@protoc_insertion_point(destructor:bs_czl.MsgDbVersion)
  SharedDtor();
}

void MsgDbVersion::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  auth_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  save_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgDbVersion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDbVersion::descriptor() {
  protobuf_bs_5fdb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fdb_2eproto::file_level_metadata[2].descriptor;
}

const MsgDbVersion& MsgDbVersion::default_instance() {
  protobuf_bs_5fdb_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgDbVersion* MsgDbVersion::New(::google::protobuf::Arena* arena) const {
  MsgDbVersion* n = new MsgDbVersion;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgDbVersion::Clear() {
// @@protoc_insertion_point(message_clear_start:bs_czl.MsgDbVersion)
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  auth_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  save_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MsgDbVersion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bs_czl.MsgDbVersion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes auth = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_auth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes save_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_save_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bs_czl.MsgDbVersion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bs_czl.MsgDbVersion)
  return false;
#undef DO_
}

void MsgDbVersion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bs_czl.MsgDbVersion)
  // bytes version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->version(), output);
  }

  // bytes auth = 2;
  if (this->auth().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->auth(), output);
  }

  // bytes save_time = 3;
  if (this->save_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->save_time(), output);
  }

  // @@protoc_insertion_point(serialize_end:bs_czl.MsgDbVersion)
}

::google::protobuf::uint8* MsgDbVersion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bs_czl.MsgDbVersion)
  // bytes version = 1;
  if (this->version().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->version(), target);
  }

  // bytes auth = 2;
  if (this->auth().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->auth(), target);
  }

  // bytes save_time = 3;
  if (this->save_time().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->save_time(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bs_czl.MsgDbVersion)
  return target;
}

size_t MsgDbVersion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bs_czl.MsgDbVersion)
  size_t total_size = 0;

  // bytes version = 1;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->version());
  }

  // bytes auth = 2;
  if (this->auth().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->auth());
  }

  // bytes save_time = 3;
  if (this->save_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->save_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDbVersion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bs_czl.MsgDbVersion)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgDbVersion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgDbVersion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bs_czl.MsgDbVersion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bs_czl.MsgDbVersion)
    MergeFrom(*source);
  }
}

void MsgDbVersion::MergeFrom(const MsgDbVersion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bs_czl.MsgDbVersion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.auth().size() > 0) {

    auth_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.auth_);
  }
  if (from.save_time().size() > 0) {

    save_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.save_time_);
  }
}

void MsgDbVersion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bs_czl.MsgDbVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDbVersion::CopyFrom(const MsgDbVersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bs_czl.MsgDbVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDbVersion::IsInitialized() const {
  return true;
}

void MsgDbVersion::Swap(MsgDbVersion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgDbVersion::InternalSwap(MsgDbVersion* other) {
  version_.Swap(&other->version_);
  auth_.Swap(&other->auth_);
  save_time_.Swap(&other->save_time_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgDbVersion::GetMetadata() const {
  protobuf_bs_5fdb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fdb_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgDbVersion

// bytes version = 1;
void MsgDbVersion::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgDbVersion::version() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgDbVersion.version)
  return version_.GetNoArena();
}
void MsgDbVersion::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgDbVersion.version)
}
#if LANG_CXX11
void MsgDbVersion::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgDbVersion.version)
}
#endif
void MsgDbVersion::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgDbVersion.version)
}
void MsgDbVersion::set_version(const void* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgDbVersion.version)
}
::std::string* MsgDbVersion::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgDbVersion.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgDbVersion::release_version() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgDbVersion.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgDbVersion::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgDbVersion.version)
}

// bytes auth = 2;
void MsgDbVersion::clear_auth() {
  auth_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgDbVersion::auth() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgDbVersion.auth)
  return auth_.GetNoArena();
}
void MsgDbVersion::set_auth(const ::std::string& value) {
  
  auth_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgDbVersion.auth)
}
#if LANG_CXX11
void MsgDbVersion::set_auth(::std::string&& value) {
  
  auth_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgDbVersion.auth)
}
#endif
void MsgDbVersion::set_auth(const char* value) {
  
  auth_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgDbVersion.auth)
}
void MsgDbVersion::set_auth(const void* value, size_t size) {
  
  auth_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgDbVersion.auth)
}
::std::string* MsgDbVersion::mutable_auth() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgDbVersion.auth)
  return auth_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgDbVersion::release_auth() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgDbVersion.auth)
  
  return auth_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgDbVersion::set_allocated_auth(::std::string* auth) {
  if (auth != NULL) {
    
  } else {
    
  }
  auth_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), auth);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgDbVersion.auth)
}

// bytes save_time = 3;
void MsgDbVersion::clear_save_time() {
  save_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgDbVersion::save_time() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgDbVersion.save_time)
  return save_time_.GetNoArena();
}
void MsgDbVersion::set_save_time(const ::std::string& value) {
  
  save_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgDbVersion.save_time)
}
#if LANG_CXX11
void MsgDbVersion::set_save_time(::std::string&& value) {
  
  save_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgDbVersion.save_time)
}
#endif
void MsgDbVersion::set_save_time(const char* value) {
  
  save_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgDbVersion.save_time)
}
void MsgDbVersion::set_save_time(const void* value, size_t size) {
  
  save_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgDbVersion.save_time)
}
::std::string* MsgDbVersion::mutable_save_time() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgDbVersion.save_time)
  return save_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgDbVersion::release_save_time() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgDbVersion.save_time)
  
  return save_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgDbVersion::set_allocated_save_time(::std::string* save_time) {
  if (save_time != NULL) {
    
  } else {
    
  }
  save_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), save_time);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgDbVersion.save_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgDb::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgDb::MsgDb()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bs_5fdb_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bs_czl.MsgDb)
}
MsgDb::MsgDb(const MsgDb& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  num_ = from.num_;
  // @@protoc_insertion_point(copy_constructor:bs_czl.MsgDb)
}

void MsgDb::SharedCtor() {
  num_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

MsgDb::~MsgDb() {
  // @@protoc_insertion_point(destructor:bs_czl.MsgDb)
  SharedDtor();
}

void MsgDb::SharedDtor() {
}

void MsgDb::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDb::descriptor() {
  protobuf_bs_5fdb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fdb_2eproto::file_level_metadata[3].descriptor;
}

const MsgDb& MsgDb::default_instance() {
  protobuf_bs_5fdb_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgDb* MsgDb::New(::google::protobuf::Arena* arena) const {
  MsgDb* n = new MsgDb;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgDb::Clear() {
// @@protoc_insertion_point(message_clear_start:bs_czl.MsgDb)
  num_ = GOOGLE_ULONGLONG(0);
}

bool MsgDb::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bs_czl.MsgDb)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bs_czl.MsgDb)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bs_czl.MsgDb)
  return false;
#undef DO_
}

void MsgDb::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bs_czl.MsgDb)
  // uint64 num = 1;
  if (this->num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->num(), output);
  }

  // @@protoc_insertion_point(serialize_end:bs_czl.MsgDb)
}

::google::protobuf::uint8* MsgDb::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bs_czl.MsgDb)
  // uint64 num = 1;
  if (this->num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->num(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bs_czl.MsgDb)
  return target;
}

size_t MsgDb::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bs_czl.MsgDb)
  size_t total_size = 0;

  // uint64 num = 1;
  if (this->num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDb::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bs_czl.MsgDb)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgDb* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgDb>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bs_czl.MsgDb)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bs_czl.MsgDb)
    MergeFrom(*source);
  }
}

void MsgDb::MergeFrom(const MsgDb& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bs_czl.MsgDb)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.num() != 0) {
    set_num(from.num());
  }
}

void MsgDb::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bs_czl.MsgDb)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDb::CopyFrom(const MsgDb& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bs_czl.MsgDb)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDb::IsInitialized() const {
  return true;
}

void MsgDb::Swap(MsgDb* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgDb::InternalSwap(MsgDb* other) {
  std::swap(num_, other->num_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgDb::GetMetadata() const {
  protobuf_bs_5fdb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fdb_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgDb

// uint64 num = 1;
void MsgDb::clear_num() {
  num_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 MsgDb::num() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgDb.num)
  return num_;
}
void MsgDb::set_num(::google::protobuf::uint64 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgDb.num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgDbTable::kKeyIdFieldNumber;
const int MsgDbTable::kLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgDbTable::MsgDbTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bs_5fdb_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bs_czl.MsgDbTable)
}
MsgDbTable::MsgDbTable(const MsgDbTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key_id().size() > 0) {
    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
  length_ = from.length_;
  // @@protoc_insertion_point(copy_constructor:bs_czl.MsgDbTable)
}

void MsgDbTable::SharedCtor() {
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  length_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

MsgDbTable::~MsgDbTable() {
  // @@protoc_insertion_point(destructor:bs_czl.MsgDbTable)
  SharedDtor();
}

void MsgDbTable::SharedDtor() {
  key_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgDbTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDbTable::descriptor() {
  protobuf_bs_5fdb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fdb_2eproto::file_level_metadata[4].descriptor;
}

const MsgDbTable& MsgDbTable::default_instance() {
  protobuf_bs_5fdb_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgDbTable* MsgDbTable::New(::google::protobuf::Arena* arena) const {
  MsgDbTable* n = new MsgDbTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgDbTable::Clear() {
// @@protoc_insertion_point(message_clear_start:bs_czl.MsgDbTable)
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  length_ = GOOGLE_ULONGLONG(0);
}

bool MsgDbTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bs_czl.MsgDbTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes key_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 length = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bs_czl.MsgDbTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bs_czl.MsgDbTable)
  return false;
#undef DO_
}

void MsgDbTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bs_czl.MsgDbTable)
  // bytes key_id = 1;
  if (this->key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key_id(), output);
  }

  // uint64 length = 2;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->length(), output);
  }

  // @@protoc_insertion_point(serialize_end:bs_czl.MsgDbTable)
}

::google::protobuf::uint8* MsgDbTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bs_czl.MsgDbTable)
  // bytes key_id = 1;
  if (this->key_id().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key_id(), target);
  }

  // uint64 length = 2;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->length(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bs_czl.MsgDbTable)
  return target;
}

size_t MsgDbTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bs_czl.MsgDbTable)
  size_t total_size = 0;

  // bytes key_id = 1;
  if (this->key_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key_id());
  }

  // uint64 length = 2;
  if (this->length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->length());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDbTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bs_czl.MsgDbTable)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgDbTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgDbTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bs_czl.MsgDbTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bs_czl.MsgDbTable)
    MergeFrom(*source);
  }
}

void MsgDbTable::MergeFrom(const MsgDbTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bs_czl.MsgDbTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.key_id().size() > 0) {

    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
}

void MsgDbTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bs_czl.MsgDbTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDbTable::CopyFrom(const MsgDbTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bs_czl.MsgDbTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDbTable::IsInitialized() const {
  return true;
}

void MsgDbTable::Swap(MsgDbTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgDbTable::InternalSwap(MsgDbTable* other) {
  key_id_.Swap(&other->key_id_);
  std::swap(length_, other->length_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgDbTable::GetMetadata() const {
  protobuf_bs_5fdb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fdb_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgDbTable

// bytes key_id = 1;
void MsgDbTable::clear_key_id() {
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgDbTable::key_id() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgDbTable.key_id)
  return key_id_.GetNoArena();
}
void MsgDbTable::set_key_id(const ::std::string& value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgDbTable.key_id)
}
#if LANG_CXX11
void MsgDbTable::set_key_id(::std::string&& value) {
  
  key_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgDbTable.key_id)
}
#endif
void MsgDbTable::set_key_id(const char* value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgDbTable.key_id)
}
void MsgDbTable::set_key_id(const void* value, size_t size) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgDbTable.key_id)
}
::std::string* MsgDbTable::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgDbTable.key_id)
  return key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgDbTable::release_key_id() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgDbTable.key_id)
  
  return key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgDbTable::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgDbTable.key_id)
}

// uint64 length = 2;
void MsgDbTable::clear_length() {
  length_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 MsgDbTable::length() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgDbTable.length)
  return length_;
}
void MsgDbTable::set_length(::google::protobuf::uint64 value) {
  
  length_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgDbTable.length)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgDbKey::kKeyFieldNumber;
const int MsgDbKey::kValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgDbKey::MsgDbKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bs_5fdb_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bs_czl.MsgDbKey)
}
MsgDbKey::MsgDbKey(const MsgDbKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      key_(from.key_),
      val_(from.val_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bs_czl.MsgDbKey)
}

void MsgDbKey::SharedCtor() {
  _cached_size_ = 0;
}

MsgDbKey::~MsgDbKey() {
  // @@protoc_insertion_point(destructor:bs_czl.MsgDbKey)
  SharedDtor();
}

void MsgDbKey::SharedDtor() {
}

void MsgDbKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgDbKey::descriptor() {
  protobuf_bs_5fdb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fdb_2eproto::file_level_metadata[5].descriptor;
}

const MsgDbKey& MsgDbKey::default_instance() {
  protobuf_bs_5fdb_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgDbKey* MsgDbKey::New(::google::protobuf::Arena* arena) const {
  MsgDbKey* n = new MsgDbKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgDbKey::Clear() {
// @@protoc_insertion_point(message_clear_start:bs_czl.MsgDbKey)
  key_.Clear();
  val_.Clear();
}

bool MsgDbKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bs_czl.MsgDbKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_key())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(9u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10u, input, this->mutable_key())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes val = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_val()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bs_czl.MsgDbKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bs_czl.MsgDbKey)
  return false;
#undef DO_
}

void MsgDbKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bs_czl.MsgDbKey)
  // repeated double key = 1;
  if (this->key_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_key_cached_byte_size_);
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->key().data(), this->key_size(), output);
  }

  // repeated bytes val = 2;
  for (int i = 0, n = this->val_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->val(i), output);
  }

  // @@protoc_insertion_point(serialize_end:bs_czl.MsgDbKey)
}

::google::protobuf::uint8* MsgDbKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bs_czl.MsgDbKey)
  // repeated double key = 1;
  if (this->key_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _key_cached_byte_size_, target);
  }
  for (int i = 0, n = this->key_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->key(i), target);
  }

  // repeated bytes val = 2;
  for (int i = 0, n = this->val_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->val(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bs_czl.MsgDbKey)
  return target;
}

size_t MsgDbKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bs_czl.MsgDbKey)
  size_t total_size = 0;

  // repeated double key = 1;
  {
    unsigned int count = this->key_size();
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _key_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bytes val = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->val_size());
  for (int i = 0, n = this->val_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->val(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgDbKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bs_czl.MsgDbKey)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgDbKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgDbKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bs_czl.MsgDbKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bs_czl.MsgDbKey)
    MergeFrom(*source);
  }
}

void MsgDbKey::MergeFrom(const MsgDbKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bs_czl.MsgDbKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.MergeFrom(from.key_);
  val_.MergeFrom(from.val_);
}

void MsgDbKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bs_czl.MsgDbKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgDbKey::CopyFrom(const MsgDbKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bs_czl.MsgDbKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDbKey::IsInitialized() const {
  return true;
}

void MsgDbKey::Swap(MsgDbKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgDbKey::InternalSwap(MsgDbKey* other) {
  key_.UnsafeArenaSwap(&other->key_);
  val_.UnsafeArenaSwap(&other->val_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgDbKey::GetMetadata() const {
  protobuf_bs_5fdb_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fdb_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgDbKey

// repeated double key = 1;
int MsgDbKey::key_size() const {
  return key_.size();
}
void MsgDbKey::clear_key() {
  key_.Clear();
}
double MsgDbKey::key(int index) const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgDbKey.key)
  return key_.Get(index);
}
void MsgDbKey::set_key(int index, double value) {
  key_.Set(index, value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgDbKey.key)
}
void MsgDbKey::add_key(double value) {
  key_.Add(value);
  // @@protoc_insertion_point(field_add:bs_czl.MsgDbKey.key)
}
const ::google::protobuf::RepeatedField< double >&
MsgDbKey::key() const {
  // @@protoc_insertion_point(field_list:bs_czl.MsgDbKey.key)
  return key_;
}
::google::protobuf::RepeatedField< double >*
MsgDbKey::mutable_key() {
  // @@protoc_insertion_point(field_mutable_list:bs_czl.MsgDbKey.key)
  return &key_;
}

// repeated bytes val = 2;
int MsgDbKey::val_size() const {
  return val_.size();
}
void MsgDbKey::clear_val() {
  val_.Clear();
}
const ::std::string& MsgDbKey::val(int index) const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgDbKey.val)
  return val_.Get(index);
}
::std::string* MsgDbKey::mutable_val(int index) {
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgDbKey.val)
  return val_.Mutable(index);
}
void MsgDbKey::set_val(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:bs_czl.MsgDbKey.val)
  val_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void MsgDbKey::set_val(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:bs_czl.MsgDbKey.val)
  val_.Mutable(index)->assign(std::move(value));
}
#endif
void MsgDbKey::set_val(int index, const char* value) {
  val_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgDbKey.val)
}
void MsgDbKey::set_val(int index, const void* value, size_t size) {
  val_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgDbKey.val)
}
::std::string* MsgDbKey::add_val() {
  // @@protoc_insertion_point(field_add_mutable:bs_czl.MsgDbKey.val)
  return val_.Add();
}
void MsgDbKey::add_val(const ::std::string& value) {
  val_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:bs_czl.MsgDbKey.val)
}
#if LANG_CXX11
void MsgDbKey::add_val(::std::string&& value) {
  val_.Add()->assign(std::move(value));
  // @@protoc_insertion_point(field_add:bs_czl.MsgDbKey.val)
}
#endif
void MsgDbKey::add_val(const char* value) {
  val_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:bs_czl.MsgDbKey.val)
}
void MsgDbKey::add_val(const void* value, size_t size) {
  val_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:bs_czl.MsgDbKey.val)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
MsgDbKey::val() const {
  // @@protoc_insertion_point(field_list:bs_czl.MsgDbKey.val)
  return val_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
MsgDbKey::mutable_val() {
  // @@protoc_insertion_point(field_mutable_list:bs_czl.MsgDbKey.val)
  return &val_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace bs_czl

// @@protoc_insertion_point(global_scope)
