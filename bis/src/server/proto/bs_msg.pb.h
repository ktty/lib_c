// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bs_msg.proto

#ifndef PROTOBUF_bs_5fmsg_2eproto__INCLUDED
#define PROTOBUF_bs_5fmsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace bs_czl {
class MsgGetScoreBatchReq;
class MsgGetScoreBatchReqDefaultTypeInternal;
extern MsgGetScoreBatchReqDefaultTypeInternal _MsgGetScoreBatchReq_default_instance_;
class MsgGetScoreBatchRsp;
class MsgGetScoreBatchRspDefaultTypeInternal;
extern MsgGetScoreBatchRspDefaultTypeInternal _MsgGetScoreBatchRsp_default_instance_;
class MsgGetScoreReq;
class MsgGetScoreReqDefaultTypeInternal;
extern MsgGetScoreReqDefaultTypeInternal _MsgGetScoreReq_default_instance_;
class MsgGetScoreRsp;
class MsgGetScoreRspDefaultTypeInternal;
extern MsgGetScoreRspDefaultTypeInternal _MsgGetScoreRsp_default_instance_;
class MsgHead;
class MsgHeadDefaultTypeInternal;
extern MsgHeadDefaultTypeInternal _MsgHead_default_instance_;
class MsgRangeByScoreQueryReq;
class MsgRangeByScoreQueryReqDefaultTypeInternal;
extern MsgRangeByScoreQueryReqDefaultTypeInternal _MsgRangeByScoreQueryReq_default_instance_;
class MsgRangeByScoreQueryRsp;
class MsgRangeByScoreQueryRspDefaultTypeInternal;
extern MsgRangeByScoreQueryRspDefaultTypeInternal _MsgRangeByScoreQueryRsp_default_instance_;
class MsgRangeQueryReq;
class MsgRangeQueryReqDefaultTypeInternal;
extern MsgRangeQueryReqDefaultTypeInternal _MsgRangeQueryReq_default_instance_;
class MsgRangeQueryRsp;
class MsgRangeQueryRspDefaultTypeInternal;
extern MsgRangeQueryRspDefaultTypeInternal _MsgRangeQueryRsp_default_instance_;
class MsgRankBatchQueryReq;
class MsgRankBatchQueryReqDefaultTypeInternal;
extern MsgRankBatchQueryReqDefaultTypeInternal _MsgRankBatchQueryReq_default_instance_;
class MsgRankBatchQueryRsp;
class MsgRankBatchQueryRspDefaultTypeInternal;
extern MsgRankBatchQueryRspDefaultTypeInternal _MsgRankBatchQueryRsp_default_instance_;
class MsgRankInfo;
class MsgRankInfoDefaultTypeInternal;
extern MsgRankInfoDefaultTypeInternal _MsgRankInfo_default_instance_;
class MsgRankQueryReq;
class MsgRankQueryReqDefaultTypeInternal;
extern MsgRankQueryReqDefaultTypeInternal _MsgRankQueryReq_default_instance_;
class MsgRankQueryRsp;
class MsgRankQueryRspDefaultTypeInternal;
extern MsgRankQueryRspDefaultTypeInternal _MsgRankQueryRsp_default_instance_;
class MsgSetBatchReq;
class MsgSetBatchReqDefaultTypeInternal;
extern MsgSetBatchReqDefaultTypeInternal _MsgSetBatchReq_default_instance_;
class MsgSetBatchRsp;
class MsgSetBatchRspDefaultTypeInternal;
extern MsgSetBatchRspDefaultTypeInternal _MsgSetBatchRsp_default_instance_;
class MsgSetMemData;
class MsgSetMemDataDefaultTypeInternal;
extern MsgSetMemDataDefaultTypeInternal _MsgSetMemData_default_instance_;
class MsgSetReq;
class MsgSetReqDefaultTypeInternal;
extern MsgSetReqDefaultTypeInternal _MsgSetReq_default_instance_;
class MsgSetRsp;
class MsgSetRspDefaultTypeInternal;
extern MsgSetRspDefaultTypeInternal _MsgSetRsp_default_instance_;
class MsgTopQueryReq;
class MsgTopQueryReqDefaultTypeInternal;
extern MsgTopQueryReqDefaultTypeInternal _MsgTopQueryReq_default_instance_;
class MsgTopQueryRsp;
class MsgTopQueryRspDefaultTypeInternal;
extern MsgTopQueryRspDefaultTypeInternal _MsgTopQueryRsp_default_instance_;
class MsgTransApp;
class MsgTransAppDefaultTypeInternal;
extern MsgTransAppDefaultTypeInternal _MsgTransApp_default_instance_;
class Range;
class RangeDefaultTypeInternal;
extern RangeDefaultTypeInternal _Range_default_instance_;
}  // namespace bs_czl

namespace bs_czl {

namespace protobuf_bs_5fmsg_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_bs_5fmsg_2eproto

// ===================================================================

class MsgTransApp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bs_czl.MsgTransApp) */ {
 public:
  MsgTransApp();
  virtual ~MsgTransApp();

  MsgTransApp(const MsgTransApp& from);

  inline MsgTransApp& operator=(const MsgTransApp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTransApp& default_instance();

  static inline const MsgTransApp* internal_default_instance() {
    return reinterpret_cast<const MsgTransApp*>(
               &_MsgTransApp_default_instance_);
  }

  void Swap(MsgTransApp* other);

  // implements Message ----------------------------------------------

  inline MsgTransApp* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgTransApp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgTransApp& from);
  void MergeFrom(const MsgTransApp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgTransApp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes src = 3;
  void clear_src();
  static const int kSrcFieldNumber = 3;
  const ::std::string& src() const;
  void set_src(const ::std::string& value);
  #if LANG_CXX11
  void set_src(::std::string&& value);
  #endif
  void set_src(const char* value);
  void set_src(const void* value, size_t size);
  ::std::string* mutable_src();
  ::std::string* release_src();
  void set_allocated_src(::std::string* src);

  // bytes app_data = 4;
  void clear_app_data();
  static const int kAppDataFieldNumber = 4;
  const ::std::string& app_data() const;
  void set_app_data(const ::std::string& value);
  #if LANG_CXX11
  void set_app_data(::std::string&& value);
  #endif
  void set_app_data(const char* value);
  void set_app_data(const void* value, size_t size);
  ::std::string* mutable_app_data();
  ::std::string* release_app_data();
  void set_allocated_app_data(::std::string* app_data);

  // int32 cmd_id = 1;
  void clear_cmd_id();
  static const int kCmdIdFieldNumber = 1;
  ::google::protobuf::int32 cmd_id() const;
  void set_cmd_id(::google::protobuf::int32 value);

  // int32 client_pos = 2;
  void clear_client_pos();
  static const int kClientPosFieldNumber = 2;
  ::google::protobuf::int32 client_pos() const;
  void set_client_pos(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bs_czl.MsgTransApp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr src_;
  ::google::protobuf::internal::ArenaStringPtr app_data_;
  ::google::protobuf::int32 cmd_id_;
  ::google::protobuf::int32 client_pos_;
  mutable int _cached_size_;
  friend struct protobuf_bs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgHead : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bs_czl.MsgHead) */ {
 public:
  MsgHead();
  virtual ~MsgHead();

  MsgHead(const MsgHead& from);

  inline MsgHead& operator=(const MsgHead& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgHead& default_instance();

  static inline const MsgHead* internal_default_instance() {
    return reinterpret_cast<const MsgHead*>(
               &_MsgHead_default_instance_);
  }

  void Swap(MsgHead* other);

  // implements Message ----------------------------------------------

  inline MsgHead* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgHead* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgHead& from);
  void MergeFrom(const MsgHead& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgHead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 msg_len = 1;
  void clear_msg_len();
  static const int kMsgLenFieldNumber = 1;
  ::google::protobuf::int32 msg_len() const;
  void set_msg_len(::google::protobuf::int32 value);

  // int32 cmd_id = 2;
  void clear_cmd_id();
  static const int kCmdIdFieldNumber = 2;
  ::google::protobuf::int32 cmd_id() const;
  void set_cmd_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bs_czl.MsgHead)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 msg_len_;
  ::google::protobuf::int32 cmd_id_;
  mutable int _cached_size_;
  friend struct protobuf_bs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgSetMemData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bs_czl.MsgSetMemData) */ {
 public:
  MsgSetMemData();
  virtual ~MsgSetMemData();

  MsgSetMemData(const MsgSetMemData& from);

  inline MsgSetMemData& operator=(const MsgSetMemData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSetMemData& default_instance();

  static inline const MsgSetMemData* internal_default_instance() {
    return reinterpret_cast<const MsgSetMemData*>(
               &_MsgSetMemData_default_instance_);
  }

  void Swap(MsgSetMemData* other);

  // implements Message ----------------------------------------------

  inline MsgSetMemData* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgSetMemData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgSetMemData& from);
  void MergeFrom(const MsgSetMemData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgSetMemData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data = 2;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // double score = 1;
  void clear_score();
  static const int kScoreFieldNumber = 1;
  double score() const;
  void set_score(double value);

  // @@protoc_insertion_point(class_scope:bs_czl.MsgSetMemData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  double score_;
  mutable int _cached_size_;
  friend struct protobuf_bs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgSetReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bs_czl.MsgSetReq) */ {
 public:
  MsgSetReq();
  virtual ~MsgSetReq();

  MsgSetReq(const MsgSetReq& from);

  inline MsgSetReq& operator=(const MsgSetReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSetReq& default_instance();

  static inline const MsgSetReq* internal_default_instance() {
    return reinterpret_cast<const MsgSetReq*>(
               &_MsgSetReq_default_instance_);
  }

  void Swap(MsgSetReq* other);

  // implements Message ----------------------------------------------

  inline MsgSetReq* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgSetReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgSetReq& from);
  void MergeFrom(const MsgSetReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgSetReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes key_id = 1;
  void clear_key_id();
  static const int kKeyIdFieldNumber = 1;
  const ::std::string& key_id() const;
  void set_key_id(const ::std::string& value);
  #if LANG_CXX11
  void set_key_id(::std::string&& value);
  #endif
  void set_key_id(const char* value);
  void set_key_id(const void* value, size_t size);
  ::std::string* mutable_key_id();
  ::std::string* release_key_id();
  void set_allocated_key_id(::std::string* key_id);

  // .bs_czl.MsgSetMemData data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::bs_czl::MsgSetMemData& data() const;
  ::bs_czl::MsgSetMemData* mutable_data();
  ::bs_czl::MsgSetMemData* release_data();
  void set_allocated_data(::bs_czl::MsgSetMemData* data);

  // @@protoc_insertion_point(class_scope:bs_czl.MsgSetReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_id_;
  ::bs_czl::MsgSetMemData* data_;
  mutable int _cached_size_;
  friend struct protobuf_bs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgSetRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bs_czl.MsgSetRsp) */ {
 public:
  MsgSetRsp();
  virtual ~MsgSetRsp();

  MsgSetRsp(const MsgSetRsp& from);

  inline MsgSetRsp& operator=(const MsgSetRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSetRsp& default_instance();

  static inline const MsgSetRsp* internal_default_instance() {
    return reinterpret_cast<const MsgSetRsp*>(
               &_MsgSetRsp_default_instance_);
  }

  void Swap(MsgSetRsp* other);

  // implements Message ----------------------------------------------

  inline MsgSetRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgSetRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgSetRsp& from);
  void MergeFrom(const MsgSetRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgSetRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes err = 2;
  void clear_err();
  static const int kErrFieldNumber = 2;
  const ::std::string& err() const;
  void set_err(const ::std::string& value);
  #if LANG_CXX11
  void set_err(::std::string&& value);
  #endif
  void set_err(const char* value);
  void set_err(const void* value, size_t size);
  ::std::string* mutable_err();
  ::std::string* release_err();
  void set_allocated_err(::std::string* err);

  // int32 ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bs_czl.MsgSetRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  ::google::protobuf::int32 ret_;
  mutable int _cached_size_;
  friend struct protobuf_bs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgSetBatchReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bs_czl.MsgSetBatchReq) */ {
 public:
  MsgSetBatchReq();
  virtual ~MsgSetBatchReq();

  MsgSetBatchReq(const MsgSetBatchReq& from);

  inline MsgSetBatchReq& operator=(const MsgSetBatchReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSetBatchReq& default_instance();

  static inline const MsgSetBatchReq* internal_default_instance() {
    return reinterpret_cast<const MsgSetBatchReq*>(
               &_MsgSetBatchReq_default_instance_);
  }

  void Swap(MsgSetBatchReq* other);

  // implements Message ----------------------------------------------

  inline MsgSetBatchReq* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgSetBatchReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgSetBatchReq& from);
  void MergeFrom(const MsgSetBatchReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgSetBatchReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .bs_czl.MsgSetMemData data_list = 2;
  int data_list_size() const;
  void clear_data_list();
  static const int kDataListFieldNumber = 2;
  const ::bs_czl::MsgSetMemData& data_list(int index) const;
  ::bs_czl::MsgSetMemData* mutable_data_list(int index);
  ::bs_czl::MsgSetMemData* add_data_list();
  ::google::protobuf::RepeatedPtrField< ::bs_czl::MsgSetMemData >*
      mutable_data_list();
  const ::google::protobuf::RepeatedPtrField< ::bs_czl::MsgSetMemData >&
      data_list() const;

  // bytes key_id = 1;
  void clear_key_id();
  static const int kKeyIdFieldNumber = 1;
  const ::std::string& key_id() const;
  void set_key_id(const ::std::string& value);
  #if LANG_CXX11
  void set_key_id(::std::string&& value);
  #endif
  void set_key_id(const char* value);
  void set_key_id(const void* value, size_t size);
  ::std::string* mutable_key_id();
  ::std::string* release_key_id();
  void set_allocated_key_id(::std::string* key_id);

  // @@protoc_insertion_point(class_scope:bs_czl.MsgSetBatchReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::bs_czl::MsgSetMemData > data_list_;
  ::google::protobuf::internal::ArenaStringPtr key_id_;
  mutable int _cached_size_;
  friend struct protobuf_bs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgSetBatchRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bs_czl.MsgSetBatchRsp) */ {
 public:
  MsgSetBatchRsp();
  virtual ~MsgSetBatchRsp();

  MsgSetBatchRsp(const MsgSetBatchRsp& from);

  inline MsgSetBatchRsp& operator=(const MsgSetBatchRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSetBatchRsp& default_instance();

  static inline const MsgSetBatchRsp* internal_default_instance() {
    return reinterpret_cast<const MsgSetBatchRsp*>(
               &_MsgSetBatchRsp_default_instance_);
  }

  void Swap(MsgSetBatchRsp* other);

  // implements Message ----------------------------------------------

  inline MsgSetBatchRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgSetBatchRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgSetBatchRsp& from);
  void MergeFrom(const MsgSetBatchRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgSetBatchRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes err = 2;
  void clear_err();
  static const int kErrFieldNumber = 2;
  const ::std::string& err() const;
  void set_err(const ::std::string& value);
  #if LANG_CXX11
  void set_err(::std::string&& value);
  #endif
  void set_err(const char* value);
  void set_err(const void* value, size_t size);
  ::std::string* mutable_err();
  ::std::string* release_err();
  void set_allocated_err(::std::string* err);

  // int32 ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // int32 succ_num = 3;
  void clear_succ_num();
  static const int kSuccNumFieldNumber = 3;
  ::google::protobuf::int32 succ_num() const;
  void set_succ_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bs_czl.MsgSetBatchRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::int32 succ_num_;
  mutable int _cached_size_;
  friend struct protobuf_bs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgGetScoreReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bs_czl.MsgGetScoreReq) */ {
 public:
  MsgGetScoreReq();
  virtual ~MsgGetScoreReq();

  MsgGetScoreReq(const MsgGetScoreReq& from);

  inline MsgGetScoreReq& operator=(const MsgGetScoreReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgGetScoreReq& default_instance();

  static inline const MsgGetScoreReq* internal_default_instance() {
    return reinterpret_cast<const MsgGetScoreReq*>(
               &_MsgGetScoreReq_default_instance_);
  }

  void Swap(MsgGetScoreReq* other);

  // implements Message ----------------------------------------------

  inline MsgGetScoreReq* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgGetScoreReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgGetScoreReq& from);
  void MergeFrom(const MsgGetScoreReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgGetScoreReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes key_id = 1;
  void clear_key_id();
  static const int kKeyIdFieldNumber = 1;
  const ::std::string& key_id() const;
  void set_key_id(const ::std::string& value);
  #if LANG_CXX11
  void set_key_id(::std::string&& value);
  #endif
  void set_key_id(const char* value);
  void set_key_id(const void* value, size_t size);
  ::std::string* mutable_key_id();
  ::std::string* release_key_id();
  void set_allocated_key_id(::std::string* key_id);

  // bytes mem_info = 2;
  void clear_mem_info();
  static const int kMemInfoFieldNumber = 2;
  const ::std::string& mem_info() const;
  void set_mem_info(const ::std::string& value);
  #if LANG_CXX11
  void set_mem_info(::std::string&& value);
  #endif
  void set_mem_info(const char* value);
  void set_mem_info(const void* value, size_t size);
  ::std::string* mutable_mem_info();
  ::std::string* release_mem_info();
  void set_allocated_mem_info(::std::string* mem_info);

  // @@protoc_insertion_point(class_scope:bs_czl.MsgGetScoreReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_id_;
  ::google::protobuf::internal::ArenaStringPtr mem_info_;
  mutable int _cached_size_;
  friend struct protobuf_bs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgGetScoreRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bs_czl.MsgGetScoreRsp) */ {
 public:
  MsgGetScoreRsp();
  virtual ~MsgGetScoreRsp();

  MsgGetScoreRsp(const MsgGetScoreRsp& from);

  inline MsgGetScoreRsp& operator=(const MsgGetScoreRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgGetScoreRsp& default_instance();

  static inline const MsgGetScoreRsp* internal_default_instance() {
    return reinterpret_cast<const MsgGetScoreRsp*>(
               &_MsgGetScoreRsp_default_instance_);
  }

  void Swap(MsgGetScoreRsp* other);

  // implements Message ----------------------------------------------

  inline MsgGetScoreRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgGetScoreRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgGetScoreRsp& from);
  void MergeFrom(const MsgGetScoreRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgGetScoreRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes err = 2;
  void clear_err();
  static const int kErrFieldNumber = 2;
  const ::std::string& err() const;
  void set_err(const ::std::string& value);
  #if LANG_CXX11
  void set_err(::std::string&& value);
  #endif
  void set_err(const char* value);
  void set_err(const void* value, size_t size);
  ::std::string* mutable_err();
  ::std::string* release_err();
  void set_allocated_err(::std::string* err);

  // .bs_czl.MsgSetMemData mem_data = 3;
  bool has_mem_data() const;
  void clear_mem_data();
  static const int kMemDataFieldNumber = 3;
  const ::bs_czl::MsgSetMemData& mem_data() const;
  ::bs_czl::MsgSetMemData* mutable_mem_data();
  ::bs_czl::MsgSetMemData* release_mem_data();
  void set_allocated_mem_data(::bs_czl::MsgSetMemData* mem_data);

  // int32 ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bs_czl.MsgGetScoreRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  ::bs_czl::MsgSetMemData* mem_data_;
  ::google::protobuf::int32 ret_;
  mutable int _cached_size_;
  friend struct protobuf_bs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgGetScoreBatchReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bs_czl.MsgGetScoreBatchReq) */ {
 public:
  MsgGetScoreBatchReq();
  virtual ~MsgGetScoreBatchReq();

  MsgGetScoreBatchReq(const MsgGetScoreBatchReq& from);

  inline MsgGetScoreBatchReq& operator=(const MsgGetScoreBatchReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgGetScoreBatchReq& default_instance();

  static inline const MsgGetScoreBatchReq* internal_default_instance() {
    return reinterpret_cast<const MsgGetScoreBatchReq*>(
               &_MsgGetScoreBatchReq_default_instance_);
  }

  void Swap(MsgGetScoreBatchReq* other);

  // implements Message ----------------------------------------------

  inline MsgGetScoreBatchReq* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgGetScoreBatchReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgGetScoreBatchReq& from);
  void MergeFrom(const MsgGetScoreBatchReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgGetScoreBatchReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes mem_data_list = 2;
  int mem_data_list_size() const;
  void clear_mem_data_list();
  static const int kMemDataListFieldNumber = 2;
  const ::std::string& mem_data_list(int index) const;
  ::std::string* mutable_mem_data_list(int index);
  void set_mem_data_list(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_mem_data_list(int index, ::std::string&& value);
  #endif
  void set_mem_data_list(int index, const char* value);
  void set_mem_data_list(int index, const void* value, size_t size);
  ::std::string* add_mem_data_list();
  void add_mem_data_list(const ::std::string& value);
  #if LANG_CXX11
  void add_mem_data_list(::std::string&& value);
  #endif
  void add_mem_data_list(const char* value);
  void add_mem_data_list(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& mem_data_list() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_mem_data_list();

  // bytes key_id = 1;
  void clear_key_id();
  static const int kKeyIdFieldNumber = 1;
  const ::std::string& key_id() const;
  void set_key_id(const ::std::string& value);
  #if LANG_CXX11
  void set_key_id(::std::string&& value);
  #endif
  void set_key_id(const char* value);
  void set_key_id(const void* value, size_t size);
  ::std::string* mutable_key_id();
  ::std::string* release_key_id();
  void set_allocated_key_id(::std::string* key_id);

  // @@protoc_insertion_point(class_scope:bs_czl.MsgGetScoreBatchReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> mem_data_list_;
  ::google::protobuf::internal::ArenaStringPtr key_id_;
  mutable int _cached_size_;
  friend struct protobuf_bs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgGetScoreBatchRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bs_czl.MsgGetScoreBatchRsp) */ {
 public:
  MsgGetScoreBatchRsp();
  virtual ~MsgGetScoreBatchRsp();

  MsgGetScoreBatchRsp(const MsgGetScoreBatchRsp& from);

  inline MsgGetScoreBatchRsp& operator=(const MsgGetScoreBatchRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgGetScoreBatchRsp& default_instance();

  static inline const MsgGetScoreBatchRsp* internal_default_instance() {
    return reinterpret_cast<const MsgGetScoreBatchRsp*>(
               &_MsgGetScoreBatchRsp_default_instance_);
  }

  void Swap(MsgGetScoreBatchRsp* other);

  // implements Message ----------------------------------------------

  inline MsgGetScoreBatchRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgGetScoreBatchRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgGetScoreBatchRsp& from);
  void MergeFrom(const MsgGetScoreBatchRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgGetScoreBatchRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .bs_czl.MsgSetMemData mem_data_list = 3;
  int mem_data_list_size() const;
  void clear_mem_data_list();
  static const int kMemDataListFieldNumber = 3;
  const ::bs_czl::MsgSetMemData& mem_data_list(int index) const;
  ::bs_czl::MsgSetMemData* mutable_mem_data_list(int index);
  ::bs_czl::MsgSetMemData* add_mem_data_list();
  ::google::protobuf::RepeatedPtrField< ::bs_czl::MsgSetMemData >*
      mutable_mem_data_list();
  const ::google::protobuf::RepeatedPtrField< ::bs_czl::MsgSetMemData >&
      mem_data_list() const;

  // bytes err = 2;
  void clear_err();
  static const int kErrFieldNumber = 2;
  const ::std::string& err() const;
  void set_err(const ::std::string& value);
  #if LANG_CXX11
  void set_err(::std::string&& value);
  #endif
  void set_err(const char* value);
  void set_err(const void* value, size_t size);
  ::std::string* mutable_err();
  ::std::string* release_err();
  void set_allocated_err(::std::string* err);

  // int32 ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bs_czl.MsgGetScoreBatchRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::bs_czl::MsgSetMemData > mem_data_list_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  ::google::protobuf::int32 ret_;
  mutable int _cached_size_;
  friend struct protobuf_bs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgRankInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bs_czl.MsgRankInfo) */ {
 public:
  MsgRankInfo();
  virtual ~MsgRankInfo();

  MsgRankInfo(const MsgRankInfo& from);

  inline MsgRankInfo& operator=(const MsgRankInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRankInfo& default_instance();

  static inline const MsgRankInfo* internal_default_instance() {
    return reinterpret_cast<const MsgRankInfo*>(
               &_MsgRankInfo_default_instance_);
  }

  void Swap(MsgRankInfo* other);

  // implements Message ----------------------------------------------

  inline MsgRankInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgRankInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgRankInfo& from);
  void MergeFrom(const MsgRankInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgRankInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .bs_czl.MsgSetMemData data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::bs_czl::MsgSetMemData& data() const;
  ::bs_czl::MsgSetMemData* mutable_data();
  ::bs_czl::MsgSetMemData* release_data();
  void set_allocated_data(::bs_czl::MsgSetMemData* data);

  // uint64 rank = 1;
  void clear_rank();
  static const int kRankFieldNumber = 1;
  ::google::protobuf::uint64 rank() const;
  void set_rank(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bs_czl.MsgRankInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::bs_czl::MsgSetMemData* data_;
  ::google::protobuf::uint64 rank_;
  mutable int _cached_size_;
  friend struct protobuf_bs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgRankQueryReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bs_czl.MsgRankQueryReq) */ {
 public:
  MsgRankQueryReq();
  virtual ~MsgRankQueryReq();

  MsgRankQueryReq(const MsgRankQueryReq& from);

  inline MsgRankQueryReq& operator=(const MsgRankQueryReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRankQueryReq& default_instance();

  static inline const MsgRankQueryReq* internal_default_instance() {
    return reinterpret_cast<const MsgRankQueryReq*>(
               &_MsgRankQueryReq_default_instance_);
  }

  void Swap(MsgRankQueryReq* other);

  // implements Message ----------------------------------------------

  inline MsgRankQueryReq* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgRankQueryReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgRankQueryReq& from);
  void MergeFrom(const MsgRankQueryReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgRankQueryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes key_id = 1;
  void clear_key_id();
  static const int kKeyIdFieldNumber = 1;
  const ::std::string& key_id() const;
  void set_key_id(const ::std::string& value);
  #if LANG_CXX11
  void set_key_id(::std::string&& value);
  #endif
  void set_key_id(const char* value);
  void set_key_id(const void* value, size_t size);
  ::std::string* mutable_key_id();
  ::std::string* release_key_id();
  void set_allocated_key_id(::std::string* key_id);

  // bytes mem_info = 2;
  void clear_mem_info();
  static const int kMemInfoFieldNumber = 2;
  const ::std::string& mem_info() const;
  void set_mem_info(const ::std::string& value);
  #if LANG_CXX11
  void set_mem_info(::std::string&& value);
  #endif
  void set_mem_info(const char* value);
  void set_mem_info(const void* value, size_t size);
  ::std::string* mutable_mem_info();
  ::std::string* release_mem_info();
  void set_allocated_mem_info(::std::string* mem_info);

  // @@protoc_insertion_point(class_scope:bs_czl.MsgRankQueryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_id_;
  ::google::protobuf::internal::ArenaStringPtr mem_info_;
  mutable int _cached_size_;
  friend struct protobuf_bs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgRankQueryRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bs_czl.MsgRankQueryRsp) */ {
 public:
  MsgRankQueryRsp();
  virtual ~MsgRankQueryRsp();

  MsgRankQueryRsp(const MsgRankQueryRsp& from);

  inline MsgRankQueryRsp& operator=(const MsgRankQueryRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRankQueryRsp& default_instance();

  static inline const MsgRankQueryRsp* internal_default_instance() {
    return reinterpret_cast<const MsgRankQueryRsp*>(
               &_MsgRankQueryRsp_default_instance_);
  }

  void Swap(MsgRankQueryRsp* other);

  // implements Message ----------------------------------------------

  inline MsgRankQueryRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgRankQueryRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgRankQueryRsp& from);
  void MergeFrom(const MsgRankQueryRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgRankQueryRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes err = 2;
  void clear_err();
  static const int kErrFieldNumber = 2;
  const ::std::string& err() const;
  void set_err(const ::std::string& value);
  #if LANG_CXX11
  void set_err(::std::string&& value);
  #endif
  void set_err(const char* value);
  void set_err(const void* value, size_t size);
  ::std::string* mutable_err();
  ::std::string* release_err();
  void set_allocated_err(::std::string* err);

  // .bs_czl.MsgRankInfo rank_info = 3;
  bool has_rank_info() const;
  void clear_rank_info();
  static const int kRankInfoFieldNumber = 3;
  const ::bs_czl::MsgRankInfo& rank_info() const;
  ::bs_czl::MsgRankInfo* mutable_rank_info();
  ::bs_czl::MsgRankInfo* release_rank_info();
  void set_allocated_rank_info(::bs_czl::MsgRankInfo* rank_info);

  // int32 ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bs_czl.MsgRankQueryRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  ::bs_czl::MsgRankInfo* rank_info_;
  ::google::protobuf::int32 ret_;
  mutable int _cached_size_;
  friend struct protobuf_bs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgRankBatchQueryReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bs_czl.MsgRankBatchQueryReq) */ {
 public:
  MsgRankBatchQueryReq();
  virtual ~MsgRankBatchQueryReq();

  MsgRankBatchQueryReq(const MsgRankBatchQueryReq& from);

  inline MsgRankBatchQueryReq& operator=(const MsgRankBatchQueryReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRankBatchQueryReq& default_instance();

  static inline const MsgRankBatchQueryReq* internal_default_instance() {
    return reinterpret_cast<const MsgRankBatchQueryReq*>(
               &_MsgRankBatchQueryReq_default_instance_);
  }

  void Swap(MsgRankBatchQueryReq* other);

  // implements Message ----------------------------------------------

  inline MsgRankBatchQueryReq* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgRankBatchQueryReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgRankBatchQueryReq& from);
  void MergeFrom(const MsgRankBatchQueryReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgRankBatchQueryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes mem_info_list = 2;
  int mem_info_list_size() const;
  void clear_mem_info_list();
  static const int kMemInfoListFieldNumber = 2;
  const ::std::string& mem_info_list(int index) const;
  ::std::string* mutable_mem_info_list(int index);
  void set_mem_info_list(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_mem_info_list(int index, ::std::string&& value);
  #endif
  void set_mem_info_list(int index, const char* value);
  void set_mem_info_list(int index, const void* value, size_t size);
  ::std::string* add_mem_info_list();
  void add_mem_info_list(const ::std::string& value);
  #if LANG_CXX11
  void add_mem_info_list(::std::string&& value);
  #endif
  void add_mem_info_list(const char* value);
  void add_mem_info_list(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& mem_info_list() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_mem_info_list();

  // bytes key_id = 1;
  void clear_key_id();
  static const int kKeyIdFieldNumber = 1;
  const ::std::string& key_id() const;
  void set_key_id(const ::std::string& value);
  #if LANG_CXX11
  void set_key_id(::std::string&& value);
  #endif
  void set_key_id(const char* value);
  void set_key_id(const void* value, size_t size);
  ::std::string* mutable_key_id();
  ::std::string* release_key_id();
  void set_allocated_key_id(::std::string* key_id);

  // @@protoc_insertion_point(class_scope:bs_czl.MsgRankBatchQueryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> mem_info_list_;
  ::google::protobuf::internal::ArenaStringPtr key_id_;
  mutable int _cached_size_;
  friend struct protobuf_bs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgRankBatchQueryRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bs_czl.MsgRankBatchQueryRsp) */ {
 public:
  MsgRankBatchQueryRsp();
  virtual ~MsgRankBatchQueryRsp();

  MsgRankBatchQueryRsp(const MsgRankBatchQueryRsp& from);

  inline MsgRankBatchQueryRsp& operator=(const MsgRankBatchQueryRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRankBatchQueryRsp& default_instance();

  static inline const MsgRankBatchQueryRsp* internal_default_instance() {
    return reinterpret_cast<const MsgRankBatchQueryRsp*>(
               &_MsgRankBatchQueryRsp_default_instance_);
  }

  void Swap(MsgRankBatchQueryRsp* other);

  // implements Message ----------------------------------------------

  inline MsgRankBatchQueryRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgRankBatchQueryRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgRankBatchQueryRsp& from);
  void MergeFrom(const MsgRankBatchQueryRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgRankBatchQueryRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .bs_czl.MsgRankInfo rank_info = 3;
  int rank_info_size() const;
  void clear_rank_info();
  static const int kRankInfoFieldNumber = 3;
  const ::bs_czl::MsgRankInfo& rank_info(int index) const;
  ::bs_czl::MsgRankInfo* mutable_rank_info(int index);
  ::bs_czl::MsgRankInfo* add_rank_info();
  ::google::protobuf::RepeatedPtrField< ::bs_czl::MsgRankInfo >*
      mutable_rank_info();
  const ::google::protobuf::RepeatedPtrField< ::bs_czl::MsgRankInfo >&
      rank_info() const;

  // bytes err = 2;
  void clear_err();
  static const int kErrFieldNumber = 2;
  const ::std::string& err() const;
  void set_err(const ::std::string& value);
  #if LANG_CXX11
  void set_err(::std::string&& value);
  #endif
  void set_err(const char* value);
  void set_err(const void* value, size_t size);
  ::std::string* mutable_err();
  ::std::string* release_err();
  void set_allocated_err(::std::string* err);

  // int32 ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bs_czl.MsgRankBatchQueryRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::bs_czl::MsgRankInfo > rank_info_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  ::google::protobuf::int32 ret_;
  mutable int _cached_size_;
  friend struct protobuf_bs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Range : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bs_czl.Range) */ {
 public:
  Range();
  virtual ~Range();

  Range(const Range& from);

  inline Range& operator=(const Range& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Range& default_instance();

  static inline const Range* internal_default_instance() {
    return reinterpret_cast<const Range*>(
               &_Range_default_instance_);
  }

  void Swap(Range* other);

  // implements Message ----------------------------------------------

  inline Range* New() const PROTOBUF_FINAL { return New(NULL); }

  Range* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Range& from);
  void MergeFrom(const Range& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Range* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 min = 1;
  void clear_min();
  static const int kMinFieldNumber = 1;
  ::google::protobuf::uint64 min() const;
  void set_min(::google::protobuf::uint64 value);

  // uint64 max = 2;
  void clear_max();
  static const int kMaxFieldNumber = 2;
  ::google::protobuf::uint64 max() const;
  void set_max(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bs_czl.Range)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 min_;
  ::google::protobuf::uint64 max_;
  mutable int _cached_size_;
  friend struct protobuf_bs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgRangeQueryReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bs_czl.MsgRangeQueryReq) */ {
 public:
  MsgRangeQueryReq();
  virtual ~MsgRangeQueryReq();

  MsgRangeQueryReq(const MsgRangeQueryReq& from);

  inline MsgRangeQueryReq& operator=(const MsgRangeQueryReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRangeQueryReq& default_instance();

  static inline const MsgRangeQueryReq* internal_default_instance() {
    return reinterpret_cast<const MsgRangeQueryReq*>(
               &_MsgRangeQueryReq_default_instance_);
  }

  void Swap(MsgRangeQueryReq* other);

  // implements Message ----------------------------------------------

  inline MsgRangeQueryReq* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgRangeQueryReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgRangeQueryReq& from);
  void MergeFrom(const MsgRangeQueryReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgRangeQueryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes key_id = 1;
  void clear_key_id();
  static const int kKeyIdFieldNumber = 1;
  const ::std::string& key_id() const;
  void set_key_id(const ::std::string& value);
  #if LANG_CXX11
  void set_key_id(::std::string&& value);
  #endif
  void set_key_id(const char* value);
  void set_key_id(const void* value, size_t size);
  ::std::string* mutable_key_id();
  ::std::string* release_key_id();
  void set_allocated_key_id(::std::string* key_id);

  // .bs_czl.Range range = 2;
  bool has_range() const;
  void clear_range();
  static const int kRangeFieldNumber = 2;
  const ::bs_czl::Range& range() const;
  ::bs_czl::Range* mutable_range();
  ::bs_czl::Range* release_range();
  void set_allocated_range(::bs_czl::Range* range);

  // @@protoc_insertion_point(class_scope:bs_czl.MsgRangeQueryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_id_;
  ::bs_czl::Range* range_;
  mutable int _cached_size_;
  friend struct protobuf_bs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgRangeQueryRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bs_czl.MsgRangeQueryRsp) */ {
 public:
  MsgRangeQueryRsp();
  virtual ~MsgRangeQueryRsp();

  MsgRangeQueryRsp(const MsgRangeQueryRsp& from);

  inline MsgRangeQueryRsp& operator=(const MsgRangeQueryRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRangeQueryRsp& default_instance();

  static inline const MsgRangeQueryRsp* internal_default_instance() {
    return reinterpret_cast<const MsgRangeQueryRsp*>(
               &_MsgRangeQueryRsp_default_instance_);
  }

  void Swap(MsgRangeQueryRsp* other);

  // implements Message ----------------------------------------------

  inline MsgRangeQueryRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgRangeQueryRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgRangeQueryRsp& from);
  void MergeFrom(const MsgRangeQueryRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgRangeQueryRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .bs_czl.MsgRankInfo rank_info = 3;
  int rank_info_size() const;
  void clear_rank_info();
  static const int kRankInfoFieldNumber = 3;
  const ::bs_czl::MsgRankInfo& rank_info(int index) const;
  ::bs_czl::MsgRankInfo* mutable_rank_info(int index);
  ::bs_czl::MsgRankInfo* add_rank_info();
  ::google::protobuf::RepeatedPtrField< ::bs_czl::MsgRankInfo >*
      mutable_rank_info();
  const ::google::protobuf::RepeatedPtrField< ::bs_czl::MsgRankInfo >&
      rank_info() const;

  // bytes err = 2;
  void clear_err();
  static const int kErrFieldNumber = 2;
  const ::std::string& err() const;
  void set_err(const ::std::string& value);
  #if LANG_CXX11
  void set_err(::std::string&& value);
  #endif
  void set_err(const char* value);
  void set_err(const void* value, size_t size);
  ::std::string* mutable_err();
  ::std::string* release_err();
  void set_allocated_err(::std::string* err);

  // int32 ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bs_czl.MsgRangeQueryRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::bs_czl::MsgRankInfo > rank_info_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  ::google::protobuf::int32 ret_;
  mutable int _cached_size_;
  friend struct protobuf_bs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgRangeByScoreQueryReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bs_czl.MsgRangeByScoreQueryReq) */ {
 public:
  MsgRangeByScoreQueryReq();
  virtual ~MsgRangeByScoreQueryReq();

  MsgRangeByScoreQueryReq(const MsgRangeByScoreQueryReq& from);

  inline MsgRangeByScoreQueryReq& operator=(const MsgRangeByScoreQueryReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRangeByScoreQueryReq& default_instance();

  static inline const MsgRangeByScoreQueryReq* internal_default_instance() {
    return reinterpret_cast<const MsgRangeByScoreQueryReq*>(
               &_MsgRangeByScoreQueryReq_default_instance_);
  }

  void Swap(MsgRangeByScoreQueryReq* other);

  // implements Message ----------------------------------------------

  inline MsgRangeByScoreQueryReq* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgRangeByScoreQueryReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgRangeByScoreQueryReq& from);
  void MergeFrom(const MsgRangeByScoreQueryReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgRangeByScoreQueryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes key_id = 1;
  void clear_key_id();
  static const int kKeyIdFieldNumber = 1;
  const ::std::string& key_id() const;
  void set_key_id(const ::std::string& value);
  #if LANG_CXX11
  void set_key_id(::std::string&& value);
  #endif
  void set_key_id(const char* value);
  void set_key_id(const void* value, size_t size);
  ::std::string* mutable_key_id();
  ::std::string* release_key_id();
  void set_allocated_key_id(::std::string* key_id);

  // .bs_czl.Range range = 2;
  bool has_range() const;
  void clear_range();
  static const int kRangeFieldNumber = 2;
  const ::bs_czl::Range& range() const;
  ::bs_czl::Range* mutable_range();
  ::bs_czl::Range* release_range();
  void set_allocated_range(::bs_czl::Range* range);

  // @@protoc_insertion_point(class_scope:bs_czl.MsgRangeByScoreQueryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_id_;
  ::bs_czl::Range* range_;
  mutable int _cached_size_;
  friend struct protobuf_bs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgRangeByScoreQueryRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bs_czl.MsgRangeByScoreQueryRsp) */ {
 public:
  MsgRangeByScoreQueryRsp();
  virtual ~MsgRangeByScoreQueryRsp();

  MsgRangeByScoreQueryRsp(const MsgRangeByScoreQueryRsp& from);

  inline MsgRangeByScoreQueryRsp& operator=(const MsgRangeByScoreQueryRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRangeByScoreQueryRsp& default_instance();

  static inline const MsgRangeByScoreQueryRsp* internal_default_instance() {
    return reinterpret_cast<const MsgRangeByScoreQueryRsp*>(
               &_MsgRangeByScoreQueryRsp_default_instance_);
  }

  void Swap(MsgRangeByScoreQueryRsp* other);

  // implements Message ----------------------------------------------

  inline MsgRangeByScoreQueryRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgRangeByScoreQueryRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgRangeByScoreQueryRsp& from);
  void MergeFrom(const MsgRangeByScoreQueryRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgRangeByScoreQueryRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .bs_czl.MsgRankInfo rank_info = 3;
  int rank_info_size() const;
  void clear_rank_info();
  static const int kRankInfoFieldNumber = 3;
  const ::bs_czl::MsgRankInfo& rank_info(int index) const;
  ::bs_czl::MsgRankInfo* mutable_rank_info(int index);
  ::bs_czl::MsgRankInfo* add_rank_info();
  ::google::protobuf::RepeatedPtrField< ::bs_czl::MsgRankInfo >*
      mutable_rank_info();
  const ::google::protobuf::RepeatedPtrField< ::bs_czl::MsgRankInfo >&
      rank_info() const;

  // bytes err = 2;
  void clear_err();
  static const int kErrFieldNumber = 2;
  const ::std::string& err() const;
  void set_err(const ::std::string& value);
  #if LANG_CXX11
  void set_err(::std::string&& value);
  #endif
  void set_err(const char* value);
  void set_err(const void* value, size_t size);
  ::std::string* mutable_err();
  ::std::string* release_err();
  void set_allocated_err(::std::string* err);

  // int32 ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bs_czl.MsgRangeByScoreQueryRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::bs_czl::MsgRankInfo > rank_info_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  ::google::protobuf::int32 ret_;
  mutable int _cached_size_;
  friend struct protobuf_bs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgTopQueryReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bs_czl.MsgTopQueryReq) */ {
 public:
  MsgTopQueryReq();
  virtual ~MsgTopQueryReq();

  MsgTopQueryReq(const MsgTopQueryReq& from);

  inline MsgTopQueryReq& operator=(const MsgTopQueryReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTopQueryReq& default_instance();

  static inline const MsgTopQueryReq* internal_default_instance() {
    return reinterpret_cast<const MsgTopQueryReq*>(
               &_MsgTopQueryReq_default_instance_);
  }

  void Swap(MsgTopQueryReq* other);

  // implements Message ----------------------------------------------

  inline MsgTopQueryReq* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgTopQueryReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgTopQueryReq& from);
  void MergeFrom(const MsgTopQueryReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgTopQueryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes key_id = 1;
  void clear_key_id();
  static const int kKeyIdFieldNumber = 1;
  const ::std::string& key_id() const;
  void set_key_id(const ::std::string& value);
  #if LANG_CXX11
  void set_key_id(::std::string&& value);
  #endif
  void set_key_id(const char* value);
  void set_key_id(const void* value, size_t size);
  ::std::string* mutable_key_id();
  ::std::string* release_key_id();
  void set_allocated_key_id(::std::string* key_id);

  // uint64 top = 2;
  void clear_top();
  static const int kTopFieldNumber = 2;
  ::google::protobuf::uint64 top() const;
  void set_top(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bs_czl.MsgTopQueryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_id_;
  ::google::protobuf::uint64 top_;
  mutable int _cached_size_;
  friend struct protobuf_bs_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgTopQueryRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bs_czl.MsgTopQueryRsp) */ {
 public:
  MsgTopQueryRsp();
  virtual ~MsgTopQueryRsp();

  MsgTopQueryRsp(const MsgTopQueryRsp& from);

  inline MsgTopQueryRsp& operator=(const MsgTopQueryRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTopQueryRsp& default_instance();

  static inline const MsgTopQueryRsp* internal_default_instance() {
    return reinterpret_cast<const MsgTopQueryRsp*>(
               &_MsgTopQueryRsp_default_instance_);
  }

  void Swap(MsgTopQueryRsp* other);

  // implements Message ----------------------------------------------

  inline MsgTopQueryRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgTopQueryRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgTopQueryRsp& from);
  void MergeFrom(const MsgTopQueryRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgTopQueryRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes err = 2;
  void clear_err();
  static const int kErrFieldNumber = 2;
  const ::std::string& err() const;
  void set_err(const ::std::string& value);
  #if LANG_CXX11
  void set_err(::std::string&& value);
  #endif
  void set_err(const char* value);
  void set_err(const void* value, size_t size);
  ::std::string* mutable_err();
  ::std::string* release_err();
  void set_allocated_err(::std::string* err);

  // .bs_czl.MsgSetMemData mem_data = 3;
  bool has_mem_data() const;
  void clear_mem_data();
  static const int kMemDataFieldNumber = 3;
  const ::bs_czl::MsgSetMemData& mem_data() const;
  ::bs_czl::MsgSetMemData* mutable_mem_data();
  ::bs_czl::MsgSetMemData* release_mem_data();
  void set_allocated_mem_data(::bs_czl::MsgSetMemData* mem_data);

  // int32 ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bs_czl.MsgTopQueryRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  ::bs_czl::MsgSetMemData* mem_data_;
  ::google::protobuf::int32 ret_;
  mutable int _cached_size_;
  friend struct protobuf_bs_5fmsg_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgTransApp

// int32 cmd_id = 1;
inline void MsgTransApp::clear_cmd_id() {
  cmd_id_ = 0;
}
inline ::google::protobuf::int32 MsgTransApp::cmd_id() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgTransApp.cmd_id)
  return cmd_id_;
}
inline void MsgTransApp::set_cmd_id(::google::protobuf::int32 value) {
  
  cmd_id_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgTransApp.cmd_id)
}

// int32 client_pos = 2;
inline void MsgTransApp::clear_client_pos() {
  client_pos_ = 0;
}
inline ::google::protobuf::int32 MsgTransApp::client_pos() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgTransApp.client_pos)
  return client_pos_;
}
inline void MsgTransApp::set_client_pos(::google::protobuf::int32 value) {
  
  client_pos_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgTransApp.client_pos)
}

// bytes src = 3;
inline void MsgTransApp::clear_src() {
  src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgTransApp::src() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgTransApp.src)
  return src_.GetNoArena();
}
inline void MsgTransApp::set_src(const ::std::string& value) {
  
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgTransApp.src)
}
#if LANG_CXX11
inline void MsgTransApp::set_src(::std::string&& value) {
  
  src_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgTransApp.src)
}
#endif
inline void MsgTransApp::set_src(const char* value) {
  
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgTransApp.src)
}
inline void MsgTransApp::set_src(const void* value, size_t size) {
  
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgTransApp.src)
}
inline ::std::string* MsgTransApp::mutable_src() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgTransApp.src)
  return src_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgTransApp::release_src() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgTransApp.src)
  
  return src_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgTransApp::set_allocated_src(::std::string* src) {
  if (src != NULL) {
    
  } else {
    
  }
  src_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), src);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgTransApp.src)
}

// bytes app_data = 4;
inline void MsgTransApp::clear_app_data() {
  app_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgTransApp::app_data() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgTransApp.app_data)
  return app_data_.GetNoArena();
}
inline void MsgTransApp::set_app_data(const ::std::string& value) {
  
  app_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgTransApp.app_data)
}
#if LANG_CXX11
inline void MsgTransApp::set_app_data(::std::string&& value) {
  
  app_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgTransApp.app_data)
}
#endif
inline void MsgTransApp::set_app_data(const char* value) {
  
  app_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgTransApp.app_data)
}
inline void MsgTransApp::set_app_data(const void* value, size_t size) {
  
  app_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgTransApp.app_data)
}
inline ::std::string* MsgTransApp::mutable_app_data() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgTransApp.app_data)
  return app_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgTransApp::release_app_data() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgTransApp.app_data)
  
  return app_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgTransApp::set_allocated_app_data(::std::string* app_data) {
  if (app_data != NULL) {
    
  } else {
    
  }
  app_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_data);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgTransApp.app_data)
}

// -------------------------------------------------------------------

// MsgHead

// int32 msg_len = 1;
inline void MsgHead::clear_msg_len() {
  msg_len_ = 0;
}
inline ::google::protobuf::int32 MsgHead::msg_len() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgHead.msg_len)
  return msg_len_;
}
inline void MsgHead::set_msg_len(::google::protobuf::int32 value) {
  
  msg_len_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgHead.msg_len)
}

// int32 cmd_id = 2;
inline void MsgHead::clear_cmd_id() {
  cmd_id_ = 0;
}
inline ::google::protobuf::int32 MsgHead::cmd_id() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgHead.cmd_id)
  return cmd_id_;
}
inline void MsgHead::set_cmd_id(::google::protobuf::int32 value) {
  
  cmd_id_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgHead.cmd_id)
}

// -------------------------------------------------------------------

// MsgSetMemData

// double score = 1;
inline void MsgSetMemData::clear_score() {
  score_ = 0;
}
inline double MsgSetMemData::score() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgSetMemData.score)
  return score_;
}
inline void MsgSetMemData::set_score(double value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgSetMemData.score)
}

// bytes data = 2;
inline void MsgSetMemData::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSetMemData::data() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgSetMemData.data)
  return data_.GetNoArena();
}
inline void MsgSetMemData::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgSetMemData.data)
}
#if LANG_CXX11
inline void MsgSetMemData::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgSetMemData.data)
}
#endif
inline void MsgSetMemData::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgSetMemData.data)
}
inline void MsgSetMemData::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgSetMemData.data)
}
inline ::std::string* MsgSetMemData::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgSetMemData.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSetMemData::release_data() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgSetMemData.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSetMemData::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgSetMemData.data)
}

// -------------------------------------------------------------------

// MsgSetReq

// bytes key_id = 1;
inline void MsgSetReq::clear_key_id() {
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSetReq::key_id() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgSetReq.key_id)
  return key_id_.GetNoArena();
}
inline void MsgSetReq::set_key_id(const ::std::string& value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgSetReq.key_id)
}
#if LANG_CXX11
inline void MsgSetReq::set_key_id(::std::string&& value) {
  
  key_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgSetReq.key_id)
}
#endif
inline void MsgSetReq::set_key_id(const char* value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgSetReq.key_id)
}
inline void MsgSetReq::set_key_id(const void* value, size_t size) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgSetReq.key_id)
}
inline ::std::string* MsgSetReq::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgSetReq.key_id)
  return key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSetReq::release_key_id() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgSetReq.key_id)
  
  return key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSetReq::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgSetReq.key_id)
}

// .bs_czl.MsgSetMemData data = 2;
inline bool MsgSetReq::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline void MsgSetReq::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
inline const ::bs_czl::MsgSetMemData& MsgSetReq::data() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgSetReq.data)
  return data_ != NULL ? *data_
                         : *::bs_czl::MsgSetMemData::internal_default_instance();
}
inline ::bs_czl::MsgSetMemData* MsgSetReq::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::bs_czl::MsgSetMemData;
  }
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgSetReq.data)
  return data_;
}
inline ::bs_czl::MsgSetMemData* MsgSetReq::release_data() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgSetReq.data)
  
  ::bs_czl::MsgSetMemData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void MsgSetReq::set_allocated_data(::bs_czl::MsgSetMemData* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgSetReq.data)
}

// -------------------------------------------------------------------

// MsgSetRsp

// int32 ret = 1;
inline void MsgSetRsp::clear_ret() {
  ret_ = 0;
}
inline ::google::protobuf::int32 MsgSetRsp::ret() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgSetRsp.ret)
  return ret_;
}
inline void MsgSetRsp::set_ret(::google::protobuf::int32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgSetRsp.ret)
}

// bytes err = 2;
inline void MsgSetRsp::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSetRsp::err() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgSetRsp.err)
  return err_.GetNoArena();
}
inline void MsgSetRsp::set_err(const ::std::string& value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgSetRsp.err)
}
#if LANG_CXX11
inline void MsgSetRsp::set_err(::std::string&& value) {
  
  err_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgSetRsp.err)
}
#endif
inline void MsgSetRsp::set_err(const char* value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgSetRsp.err)
}
inline void MsgSetRsp::set_err(const void* value, size_t size) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgSetRsp.err)
}
inline ::std::string* MsgSetRsp::mutable_err() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgSetRsp.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSetRsp::release_err() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgSetRsp.err)
  
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSetRsp::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    
  } else {
    
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgSetRsp.err)
}

// -------------------------------------------------------------------

// MsgSetBatchReq

// bytes key_id = 1;
inline void MsgSetBatchReq::clear_key_id() {
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSetBatchReq::key_id() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgSetBatchReq.key_id)
  return key_id_.GetNoArena();
}
inline void MsgSetBatchReq::set_key_id(const ::std::string& value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgSetBatchReq.key_id)
}
#if LANG_CXX11
inline void MsgSetBatchReq::set_key_id(::std::string&& value) {
  
  key_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgSetBatchReq.key_id)
}
#endif
inline void MsgSetBatchReq::set_key_id(const char* value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgSetBatchReq.key_id)
}
inline void MsgSetBatchReq::set_key_id(const void* value, size_t size) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgSetBatchReq.key_id)
}
inline ::std::string* MsgSetBatchReq::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgSetBatchReq.key_id)
  return key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSetBatchReq::release_key_id() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgSetBatchReq.key_id)
  
  return key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSetBatchReq::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgSetBatchReq.key_id)
}

// repeated .bs_czl.MsgSetMemData data_list = 2;
inline int MsgSetBatchReq::data_list_size() const {
  return data_list_.size();
}
inline void MsgSetBatchReq::clear_data_list() {
  data_list_.Clear();
}
inline const ::bs_czl::MsgSetMemData& MsgSetBatchReq::data_list(int index) const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgSetBatchReq.data_list)
  return data_list_.Get(index);
}
inline ::bs_czl::MsgSetMemData* MsgSetBatchReq::mutable_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgSetBatchReq.data_list)
  return data_list_.Mutable(index);
}
inline ::bs_czl::MsgSetMemData* MsgSetBatchReq::add_data_list() {
  // @@protoc_insertion_point(field_add:bs_czl.MsgSetBatchReq.data_list)
  return data_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::bs_czl::MsgSetMemData >*
MsgSetBatchReq::mutable_data_list() {
  // @@protoc_insertion_point(field_mutable_list:bs_czl.MsgSetBatchReq.data_list)
  return &data_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::bs_czl::MsgSetMemData >&
MsgSetBatchReq::data_list() const {
  // @@protoc_insertion_point(field_list:bs_czl.MsgSetBatchReq.data_list)
  return data_list_;
}

// -------------------------------------------------------------------

// MsgSetBatchRsp

// int32 ret = 1;
inline void MsgSetBatchRsp::clear_ret() {
  ret_ = 0;
}
inline ::google::protobuf::int32 MsgSetBatchRsp::ret() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgSetBatchRsp.ret)
  return ret_;
}
inline void MsgSetBatchRsp::set_ret(::google::protobuf::int32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgSetBatchRsp.ret)
}

// bytes err = 2;
inline void MsgSetBatchRsp::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSetBatchRsp::err() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgSetBatchRsp.err)
  return err_.GetNoArena();
}
inline void MsgSetBatchRsp::set_err(const ::std::string& value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgSetBatchRsp.err)
}
#if LANG_CXX11
inline void MsgSetBatchRsp::set_err(::std::string&& value) {
  
  err_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgSetBatchRsp.err)
}
#endif
inline void MsgSetBatchRsp::set_err(const char* value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgSetBatchRsp.err)
}
inline void MsgSetBatchRsp::set_err(const void* value, size_t size) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgSetBatchRsp.err)
}
inline ::std::string* MsgSetBatchRsp::mutable_err() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgSetBatchRsp.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSetBatchRsp::release_err() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgSetBatchRsp.err)
  
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSetBatchRsp::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    
  } else {
    
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgSetBatchRsp.err)
}

// int32 succ_num = 3;
inline void MsgSetBatchRsp::clear_succ_num() {
  succ_num_ = 0;
}
inline ::google::protobuf::int32 MsgSetBatchRsp::succ_num() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgSetBatchRsp.succ_num)
  return succ_num_;
}
inline void MsgSetBatchRsp::set_succ_num(::google::protobuf::int32 value) {
  
  succ_num_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgSetBatchRsp.succ_num)
}

// -------------------------------------------------------------------

// MsgGetScoreReq

// bytes key_id = 1;
inline void MsgGetScoreReq::clear_key_id() {
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgGetScoreReq::key_id() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgGetScoreReq.key_id)
  return key_id_.GetNoArena();
}
inline void MsgGetScoreReq::set_key_id(const ::std::string& value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgGetScoreReq.key_id)
}
#if LANG_CXX11
inline void MsgGetScoreReq::set_key_id(::std::string&& value) {
  
  key_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgGetScoreReq.key_id)
}
#endif
inline void MsgGetScoreReq::set_key_id(const char* value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgGetScoreReq.key_id)
}
inline void MsgGetScoreReq::set_key_id(const void* value, size_t size) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgGetScoreReq.key_id)
}
inline ::std::string* MsgGetScoreReq::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgGetScoreReq.key_id)
  return key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgGetScoreReq::release_key_id() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgGetScoreReq.key_id)
  
  return key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgGetScoreReq::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgGetScoreReq.key_id)
}

// bytes mem_info = 2;
inline void MsgGetScoreReq::clear_mem_info() {
  mem_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgGetScoreReq::mem_info() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgGetScoreReq.mem_info)
  return mem_info_.GetNoArena();
}
inline void MsgGetScoreReq::set_mem_info(const ::std::string& value) {
  
  mem_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgGetScoreReq.mem_info)
}
#if LANG_CXX11
inline void MsgGetScoreReq::set_mem_info(::std::string&& value) {
  
  mem_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgGetScoreReq.mem_info)
}
#endif
inline void MsgGetScoreReq::set_mem_info(const char* value) {
  
  mem_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgGetScoreReq.mem_info)
}
inline void MsgGetScoreReq::set_mem_info(const void* value, size_t size) {
  
  mem_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgGetScoreReq.mem_info)
}
inline ::std::string* MsgGetScoreReq::mutable_mem_info() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgGetScoreReq.mem_info)
  return mem_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgGetScoreReq::release_mem_info() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgGetScoreReq.mem_info)
  
  return mem_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgGetScoreReq::set_allocated_mem_info(::std::string* mem_info) {
  if (mem_info != NULL) {
    
  } else {
    
  }
  mem_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mem_info);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgGetScoreReq.mem_info)
}

// -------------------------------------------------------------------

// MsgGetScoreRsp

// int32 ret = 1;
inline void MsgGetScoreRsp::clear_ret() {
  ret_ = 0;
}
inline ::google::protobuf::int32 MsgGetScoreRsp::ret() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgGetScoreRsp.ret)
  return ret_;
}
inline void MsgGetScoreRsp::set_ret(::google::protobuf::int32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgGetScoreRsp.ret)
}

// bytes err = 2;
inline void MsgGetScoreRsp::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgGetScoreRsp::err() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgGetScoreRsp.err)
  return err_.GetNoArena();
}
inline void MsgGetScoreRsp::set_err(const ::std::string& value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgGetScoreRsp.err)
}
#if LANG_CXX11
inline void MsgGetScoreRsp::set_err(::std::string&& value) {
  
  err_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgGetScoreRsp.err)
}
#endif
inline void MsgGetScoreRsp::set_err(const char* value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgGetScoreRsp.err)
}
inline void MsgGetScoreRsp::set_err(const void* value, size_t size) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgGetScoreRsp.err)
}
inline ::std::string* MsgGetScoreRsp::mutable_err() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgGetScoreRsp.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgGetScoreRsp::release_err() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgGetScoreRsp.err)
  
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgGetScoreRsp::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    
  } else {
    
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgGetScoreRsp.err)
}

// .bs_czl.MsgSetMemData mem_data = 3;
inline bool MsgGetScoreRsp::has_mem_data() const {
  return this != internal_default_instance() && mem_data_ != NULL;
}
inline void MsgGetScoreRsp::clear_mem_data() {
  if (GetArenaNoVirtual() == NULL && mem_data_ != NULL) delete mem_data_;
  mem_data_ = NULL;
}
inline const ::bs_czl::MsgSetMemData& MsgGetScoreRsp::mem_data() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgGetScoreRsp.mem_data)
  return mem_data_ != NULL ? *mem_data_
                         : *::bs_czl::MsgSetMemData::internal_default_instance();
}
inline ::bs_czl::MsgSetMemData* MsgGetScoreRsp::mutable_mem_data() {
  
  if (mem_data_ == NULL) {
    mem_data_ = new ::bs_czl::MsgSetMemData;
  }
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgGetScoreRsp.mem_data)
  return mem_data_;
}
inline ::bs_czl::MsgSetMemData* MsgGetScoreRsp::release_mem_data() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgGetScoreRsp.mem_data)
  
  ::bs_czl::MsgSetMemData* temp = mem_data_;
  mem_data_ = NULL;
  return temp;
}
inline void MsgGetScoreRsp::set_allocated_mem_data(::bs_czl::MsgSetMemData* mem_data) {
  delete mem_data_;
  mem_data_ = mem_data;
  if (mem_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgGetScoreRsp.mem_data)
}

// -------------------------------------------------------------------

// MsgGetScoreBatchReq

// bytes key_id = 1;
inline void MsgGetScoreBatchReq::clear_key_id() {
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgGetScoreBatchReq::key_id() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgGetScoreBatchReq.key_id)
  return key_id_.GetNoArena();
}
inline void MsgGetScoreBatchReq::set_key_id(const ::std::string& value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgGetScoreBatchReq.key_id)
}
#if LANG_CXX11
inline void MsgGetScoreBatchReq::set_key_id(::std::string&& value) {
  
  key_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgGetScoreBatchReq.key_id)
}
#endif
inline void MsgGetScoreBatchReq::set_key_id(const char* value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgGetScoreBatchReq.key_id)
}
inline void MsgGetScoreBatchReq::set_key_id(const void* value, size_t size) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgGetScoreBatchReq.key_id)
}
inline ::std::string* MsgGetScoreBatchReq::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgGetScoreBatchReq.key_id)
  return key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgGetScoreBatchReq::release_key_id() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgGetScoreBatchReq.key_id)
  
  return key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgGetScoreBatchReq::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgGetScoreBatchReq.key_id)
}

// repeated bytes mem_data_list = 2;
inline int MsgGetScoreBatchReq::mem_data_list_size() const {
  return mem_data_list_.size();
}
inline void MsgGetScoreBatchReq::clear_mem_data_list() {
  mem_data_list_.Clear();
}
inline const ::std::string& MsgGetScoreBatchReq::mem_data_list(int index) const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgGetScoreBatchReq.mem_data_list)
  return mem_data_list_.Get(index);
}
inline ::std::string* MsgGetScoreBatchReq::mutable_mem_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgGetScoreBatchReq.mem_data_list)
  return mem_data_list_.Mutable(index);
}
inline void MsgGetScoreBatchReq::set_mem_data_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:bs_czl.MsgGetScoreBatchReq.mem_data_list)
  mem_data_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MsgGetScoreBatchReq::set_mem_data_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:bs_czl.MsgGetScoreBatchReq.mem_data_list)
  mem_data_list_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MsgGetScoreBatchReq::set_mem_data_list(int index, const char* value) {
  mem_data_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgGetScoreBatchReq.mem_data_list)
}
inline void MsgGetScoreBatchReq::set_mem_data_list(int index, const void* value, size_t size) {
  mem_data_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgGetScoreBatchReq.mem_data_list)
}
inline ::std::string* MsgGetScoreBatchReq::add_mem_data_list() {
  // @@protoc_insertion_point(field_add_mutable:bs_czl.MsgGetScoreBatchReq.mem_data_list)
  return mem_data_list_.Add();
}
inline void MsgGetScoreBatchReq::add_mem_data_list(const ::std::string& value) {
  mem_data_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:bs_czl.MsgGetScoreBatchReq.mem_data_list)
}
#if LANG_CXX11
inline void MsgGetScoreBatchReq::add_mem_data_list(::std::string&& value) {
  mem_data_list_.Add()->assign(std::move(value));
  // @@protoc_insertion_point(field_add:bs_czl.MsgGetScoreBatchReq.mem_data_list)
}
#endif
inline void MsgGetScoreBatchReq::add_mem_data_list(const char* value) {
  mem_data_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:bs_czl.MsgGetScoreBatchReq.mem_data_list)
}
inline void MsgGetScoreBatchReq::add_mem_data_list(const void* value, size_t size) {
  mem_data_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:bs_czl.MsgGetScoreBatchReq.mem_data_list)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MsgGetScoreBatchReq::mem_data_list() const {
  // @@protoc_insertion_point(field_list:bs_czl.MsgGetScoreBatchReq.mem_data_list)
  return mem_data_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MsgGetScoreBatchReq::mutable_mem_data_list() {
  // @@protoc_insertion_point(field_mutable_list:bs_czl.MsgGetScoreBatchReq.mem_data_list)
  return &mem_data_list_;
}

// -------------------------------------------------------------------

// MsgGetScoreBatchRsp

// int32 ret = 1;
inline void MsgGetScoreBatchRsp::clear_ret() {
  ret_ = 0;
}
inline ::google::protobuf::int32 MsgGetScoreBatchRsp::ret() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgGetScoreBatchRsp.ret)
  return ret_;
}
inline void MsgGetScoreBatchRsp::set_ret(::google::protobuf::int32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgGetScoreBatchRsp.ret)
}

// bytes err = 2;
inline void MsgGetScoreBatchRsp::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgGetScoreBatchRsp::err() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgGetScoreBatchRsp.err)
  return err_.GetNoArena();
}
inline void MsgGetScoreBatchRsp::set_err(const ::std::string& value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgGetScoreBatchRsp.err)
}
#if LANG_CXX11
inline void MsgGetScoreBatchRsp::set_err(::std::string&& value) {
  
  err_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgGetScoreBatchRsp.err)
}
#endif
inline void MsgGetScoreBatchRsp::set_err(const char* value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgGetScoreBatchRsp.err)
}
inline void MsgGetScoreBatchRsp::set_err(const void* value, size_t size) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgGetScoreBatchRsp.err)
}
inline ::std::string* MsgGetScoreBatchRsp::mutable_err() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgGetScoreBatchRsp.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgGetScoreBatchRsp::release_err() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgGetScoreBatchRsp.err)
  
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgGetScoreBatchRsp::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    
  } else {
    
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgGetScoreBatchRsp.err)
}

// repeated .bs_czl.MsgSetMemData mem_data_list = 3;
inline int MsgGetScoreBatchRsp::mem_data_list_size() const {
  return mem_data_list_.size();
}
inline void MsgGetScoreBatchRsp::clear_mem_data_list() {
  mem_data_list_.Clear();
}
inline const ::bs_czl::MsgSetMemData& MsgGetScoreBatchRsp::mem_data_list(int index) const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgGetScoreBatchRsp.mem_data_list)
  return mem_data_list_.Get(index);
}
inline ::bs_czl::MsgSetMemData* MsgGetScoreBatchRsp::mutable_mem_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgGetScoreBatchRsp.mem_data_list)
  return mem_data_list_.Mutable(index);
}
inline ::bs_czl::MsgSetMemData* MsgGetScoreBatchRsp::add_mem_data_list() {
  // @@protoc_insertion_point(field_add:bs_czl.MsgGetScoreBatchRsp.mem_data_list)
  return mem_data_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::bs_czl::MsgSetMemData >*
MsgGetScoreBatchRsp::mutable_mem_data_list() {
  // @@protoc_insertion_point(field_mutable_list:bs_czl.MsgGetScoreBatchRsp.mem_data_list)
  return &mem_data_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::bs_czl::MsgSetMemData >&
MsgGetScoreBatchRsp::mem_data_list() const {
  // @@protoc_insertion_point(field_list:bs_czl.MsgGetScoreBatchRsp.mem_data_list)
  return mem_data_list_;
}

// -------------------------------------------------------------------

// MsgRankInfo

// uint64 rank = 1;
inline void MsgRankInfo::clear_rank() {
  rank_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgRankInfo::rank() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRankInfo.rank)
  return rank_;
}
inline void MsgRankInfo::set_rank(::google::protobuf::uint64 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgRankInfo.rank)
}

// .bs_czl.MsgSetMemData data = 2;
inline bool MsgRankInfo::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline void MsgRankInfo::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
inline const ::bs_czl::MsgSetMemData& MsgRankInfo::data() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRankInfo.data)
  return data_ != NULL ? *data_
                         : *::bs_czl::MsgSetMemData::internal_default_instance();
}
inline ::bs_czl::MsgSetMemData* MsgRankInfo::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::bs_czl::MsgSetMemData;
  }
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRankInfo.data)
  return data_;
}
inline ::bs_czl::MsgSetMemData* MsgRankInfo::release_data() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgRankInfo.data)
  
  ::bs_czl::MsgSetMemData* temp = data_;
  data_ = NULL;
  return temp;
}
inline void MsgRankInfo::set_allocated_data(::bs_czl::MsgSetMemData* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgRankInfo.data)
}

// -------------------------------------------------------------------

// MsgRankQueryReq

// bytes key_id = 1;
inline void MsgRankQueryReq::clear_key_id() {
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgRankQueryReq::key_id() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRankQueryReq.key_id)
  return key_id_.GetNoArena();
}
inline void MsgRankQueryReq::set_key_id(const ::std::string& value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgRankQueryReq.key_id)
}
#if LANG_CXX11
inline void MsgRankQueryReq::set_key_id(::std::string&& value) {
  
  key_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgRankQueryReq.key_id)
}
#endif
inline void MsgRankQueryReq::set_key_id(const char* value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgRankQueryReq.key_id)
}
inline void MsgRankQueryReq::set_key_id(const void* value, size_t size) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgRankQueryReq.key_id)
}
inline ::std::string* MsgRankQueryReq::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRankQueryReq.key_id)
  return key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgRankQueryReq::release_key_id() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgRankQueryReq.key_id)
  
  return key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgRankQueryReq::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgRankQueryReq.key_id)
}

// bytes mem_info = 2;
inline void MsgRankQueryReq::clear_mem_info() {
  mem_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgRankQueryReq::mem_info() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRankQueryReq.mem_info)
  return mem_info_.GetNoArena();
}
inline void MsgRankQueryReq::set_mem_info(const ::std::string& value) {
  
  mem_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgRankQueryReq.mem_info)
}
#if LANG_CXX11
inline void MsgRankQueryReq::set_mem_info(::std::string&& value) {
  
  mem_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgRankQueryReq.mem_info)
}
#endif
inline void MsgRankQueryReq::set_mem_info(const char* value) {
  
  mem_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgRankQueryReq.mem_info)
}
inline void MsgRankQueryReq::set_mem_info(const void* value, size_t size) {
  
  mem_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgRankQueryReq.mem_info)
}
inline ::std::string* MsgRankQueryReq::mutable_mem_info() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRankQueryReq.mem_info)
  return mem_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgRankQueryReq::release_mem_info() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgRankQueryReq.mem_info)
  
  return mem_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgRankQueryReq::set_allocated_mem_info(::std::string* mem_info) {
  if (mem_info != NULL) {
    
  } else {
    
  }
  mem_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mem_info);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgRankQueryReq.mem_info)
}

// -------------------------------------------------------------------

// MsgRankQueryRsp

// int32 ret = 1;
inline void MsgRankQueryRsp::clear_ret() {
  ret_ = 0;
}
inline ::google::protobuf::int32 MsgRankQueryRsp::ret() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRankQueryRsp.ret)
  return ret_;
}
inline void MsgRankQueryRsp::set_ret(::google::protobuf::int32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgRankQueryRsp.ret)
}

// bytes err = 2;
inline void MsgRankQueryRsp::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgRankQueryRsp::err() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRankQueryRsp.err)
  return err_.GetNoArena();
}
inline void MsgRankQueryRsp::set_err(const ::std::string& value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgRankQueryRsp.err)
}
#if LANG_CXX11
inline void MsgRankQueryRsp::set_err(::std::string&& value) {
  
  err_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgRankQueryRsp.err)
}
#endif
inline void MsgRankQueryRsp::set_err(const char* value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgRankQueryRsp.err)
}
inline void MsgRankQueryRsp::set_err(const void* value, size_t size) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgRankQueryRsp.err)
}
inline ::std::string* MsgRankQueryRsp::mutable_err() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRankQueryRsp.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgRankQueryRsp::release_err() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgRankQueryRsp.err)
  
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgRankQueryRsp::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    
  } else {
    
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgRankQueryRsp.err)
}

// .bs_czl.MsgRankInfo rank_info = 3;
inline bool MsgRankQueryRsp::has_rank_info() const {
  return this != internal_default_instance() && rank_info_ != NULL;
}
inline void MsgRankQueryRsp::clear_rank_info() {
  if (GetArenaNoVirtual() == NULL && rank_info_ != NULL) delete rank_info_;
  rank_info_ = NULL;
}
inline const ::bs_czl::MsgRankInfo& MsgRankQueryRsp::rank_info() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRankQueryRsp.rank_info)
  return rank_info_ != NULL ? *rank_info_
                         : *::bs_czl::MsgRankInfo::internal_default_instance();
}
inline ::bs_czl::MsgRankInfo* MsgRankQueryRsp::mutable_rank_info() {
  
  if (rank_info_ == NULL) {
    rank_info_ = new ::bs_czl::MsgRankInfo;
  }
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRankQueryRsp.rank_info)
  return rank_info_;
}
inline ::bs_czl::MsgRankInfo* MsgRankQueryRsp::release_rank_info() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgRankQueryRsp.rank_info)
  
  ::bs_czl::MsgRankInfo* temp = rank_info_;
  rank_info_ = NULL;
  return temp;
}
inline void MsgRankQueryRsp::set_allocated_rank_info(::bs_czl::MsgRankInfo* rank_info) {
  delete rank_info_;
  rank_info_ = rank_info;
  if (rank_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgRankQueryRsp.rank_info)
}

// -------------------------------------------------------------------

// MsgRankBatchQueryReq

// bytes key_id = 1;
inline void MsgRankBatchQueryReq::clear_key_id() {
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgRankBatchQueryReq::key_id() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRankBatchQueryReq.key_id)
  return key_id_.GetNoArena();
}
inline void MsgRankBatchQueryReq::set_key_id(const ::std::string& value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgRankBatchQueryReq.key_id)
}
#if LANG_CXX11
inline void MsgRankBatchQueryReq::set_key_id(::std::string&& value) {
  
  key_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgRankBatchQueryReq.key_id)
}
#endif
inline void MsgRankBatchQueryReq::set_key_id(const char* value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgRankBatchQueryReq.key_id)
}
inline void MsgRankBatchQueryReq::set_key_id(const void* value, size_t size) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgRankBatchQueryReq.key_id)
}
inline ::std::string* MsgRankBatchQueryReq::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRankBatchQueryReq.key_id)
  return key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgRankBatchQueryReq::release_key_id() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgRankBatchQueryReq.key_id)
  
  return key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgRankBatchQueryReq::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgRankBatchQueryReq.key_id)
}

// repeated bytes mem_info_list = 2;
inline int MsgRankBatchQueryReq::mem_info_list_size() const {
  return mem_info_list_.size();
}
inline void MsgRankBatchQueryReq::clear_mem_info_list() {
  mem_info_list_.Clear();
}
inline const ::std::string& MsgRankBatchQueryReq::mem_info_list(int index) const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRankBatchQueryReq.mem_info_list)
  return mem_info_list_.Get(index);
}
inline ::std::string* MsgRankBatchQueryReq::mutable_mem_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRankBatchQueryReq.mem_info_list)
  return mem_info_list_.Mutable(index);
}
inline void MsgRankBatchQueryReq::set_mem_info_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:bs_czl.MsgRankBatchQueryReq.mem_info_list)
  mem_info_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MsgRankBatchQueryReq::set_mem_info_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:bs_czl.MsgRankBatchQueryReq.mem_info_list)
  mem_info_list_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MsgRankBatchQueryReq::set_mem_info_list(int index, const char* value) {
  mem_info_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgRankBatchQueryReq.mem_info_list)
}
inline void MsgRankBatchQueryReq::set_mem_info_list(int index, const void* value, size_t size) {
  mem_info_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgRankBatchQueryReq.mem_info_list)
}
inline ::std::string* MsgRankBatchQueryReq::add_mem_info_list() {
  // @@protoc_insertion_point(field_add_mutable:bs_czl.MsgRankBatchQueryReq.mem_info_list)
  return mem_info_list_.Add();
}
inline void MsgRankBatchQueryReq::add_mem_info_list(const ::std::string& value) {
  mem_info_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:bs_czl.MsgRankBatchQueryReq.mem_info_list)
}
#if LANG_CXX11
inline void MsgRankBatchQueryReq::add_mem_info_list(::std::string&& value) {
  mem_info_list_.Add()->assign(std::move(value));
  // @@protoc_insertion_point(field_add:bs_czl.MsgRankBatchQueryReq.mem_info_list)
}
#endif
inline void MsgRankBatchQueryReq::add_mem_info_list(const char* value) {
  mem_info_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:bs_czl.MsgRankBatchQueryReq.mem_info_list)
}
inline void MsgRankBatchQueryReq::add_mem_info_list(const void* value, size_t size) {
  mem_info_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:bs_czl.MsgRankBatchQueryReq.mem_info_list)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MsgRankBatchQueryReq::mem_info_list() const {
  // @@protoc_insertion_point(field_list:bs_czl.MsgRankBatchQueryReq.mem_info_list)
  return mem_info_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MsgRankBatchQueryReq::mutable_mem_info_list() {
  // @@protoc_insertion_point(field_mutable_list:bs_czl.MsgRankBatchQueryReq.mem_info_list)
  return &mem_info_list_;
}

// -------------------------------------------------------------------

// MsgRankBatchQueryRsp

// int32 ret = 1;
inline void MsgRankBatchQueryRsp::clear_ret() {
  ret_ = 0;
}
inline ::google::protobuf::int32 MsgRankBatchQueryRsp::ret() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRankBatchQueryRsp.ret)
  return ret_;
}
inline void MsgRankBatchQueryRsp::set_ret(::google::protobuf::int32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgRankBatchQueryRsp.ret)
}

// bytes err = 2;
inline void MsgRankBatchQueryRsp::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgRankBatchQueryRsp::err() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRankBatchQueryRsp.err)
  return err_.GetNoArena();
}
inline void MsgRankBatchQueryRsp::set_err(const ::std::string& value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgRankBatchQueryRsp.err)
}
#if LANG_CXX11
inline void MsgRankBatchQueryRsp::set_err(::std::string&& value) {
  
  err_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgRankBatchQueryRsp.err)
}
#endif
inline void MsgRankBatchQueryRsp::set_err(const char* value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgRankBatchQueryRsp.err)
}
inline void MsgRankBatchQueryRsp::set_err(const void* value, size_t size) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgRankBatchQueryRsp.err)
}
inline ::std::string* MsgRankBatchQueryRsp::mutable_err() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRankBatchQueryRsp.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgRankBatchQueryRsp::release_err() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgRankBatchQueryRsp.err)
  
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgRankBatchQueryRsp::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    
  } else {
    
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgRankBatchQueryRsp.err)
}

// repeated .bs_czl.MsgRankInfo rank_info = 3;
inline int MsgRankBatchQueryRsp::rank_info_size() const {
  return rank_info_.size();
}
inline void MsgRankBatchQueryRsp::clear_rank_info() {
  rank_info_.Clear();
}
inline const ::bs_czl::MsgRankInfo& MsgRankBatchQueryRsp::rank_info(int index) const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRankBatchQueryRsp.rank_info)
  return rank_info_.Get(index);
}
inline ::bs_czl::MsgRankInfo* MsgRankBatchQueryRsp::mutable_rank_info(int index) {
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRankBatchQueryRsp.rank_info)
  return rank_info_.Mutable(index);
}
inline ::bs_czl::MsgRankInfo* MsgRankBatchQueryRsp::add_rank_info() {
  // @@protoc_insertion_point(field_add:bs_czl.MsgRankBatchQueryRsp.rank_info)
  return rank_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::bs_czl::MsgRankInfo >*
MsgRankBatchQueryRsp::mutable_rank_info() {
  // @@protoc_insertion_point(field_mutable_list:bs_czl.MsgRankBatchQueryRsp.rank_info)
  return &rank_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::bs_czl::MsgRankInfo >&
MsgRankBatchQueryRsp::rank_info() const {
  // @@protoc_insertion_point(field_list:bs_czl.MsgRankBatchQueryRsp.rank_info)
  return rank_info_;
}

// -------------------------------------------------------------------

// Range

// uint64 min = 1;
inline void Range::clear_min() {
  min_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Range::min() const {
  // @@protoc_insertion_point(field_get:bs_czl.Range.min)
  return min_;
}
inline void Range::set_min(::google::protobuf::uint64 value) {
  
  min_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.Range.min)
}

// uint64 max = 2;
inline void Range::clear_max() {
  max_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Range::max() const {
  // @@protoc_insertion_point(field_get:bs_czl.Range.max)
  return max_;
}
inline void Range::set_max(::google::protobuf::uint64 value) {
  
  max_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.Range.max)
}

// -------------------------------------------------------------------

// MsgRangeQueryReq

// bytes key_id = 1;
inline void MsgRangeQueryReq::clear_key_id() {
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgRangeQueryReq::key_id() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRangeQueryReq.key_id)
  return key_id_.GetNoArena();
}
inline void MsgRangeQueryReq::set_key_id(const ::std::string& value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgRangeQueryReq.key_id)
}
#if LANG_CXX11
inline void MsgRangeQueryReq::set_key_id(::std::string&& value) {
  
  key_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgRangeQueryReq.key_id)
}
#endif
inline void MsgRangeQueryReq::set_key_id(const char* value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgRangeQueryReq.key_id)
}
inline void MsgRangeQueryReq::set_key_id(const void* value, size_t size) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgRangeQueryReq.key_id)
}
inline ::std::string* MsgRangeQueryReq::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRangeQueryReq.key_id)
  return key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgRangeQueryReq::release_key_id() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgRangeQueryReq.key_id)
  
  return key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgRangeQueryReq::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgRangeQueryReq.key_id)
}

// .bs_czl.Range range = 2;
inline bool MsgRangeQueryReq::has_range() const {
  return this != internal_default_instance() && range_ != NULL;
}
inline void MsgRangeQueryReq::clear_range() {
  if (GetArenaNoVirtual() == NULL && range_ != NULL) delete range_;
  range_ = NULL;
}
inline const ::bs_czl::Range& MsgRangeQueryReq::range() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRangeQueryReq.range)
  return range_ != NULL ? *range_
                         : *::bs_czl::Range::internal_default_instance();
}
inline ::bs_czl::Range* MsgRangeQueryReq::mutable_range() {
  
  if (range_ == NULL) {
    range_ = new ::bs_czl::Range;
  }
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRangeQueryReq.range)
  return range_;
}
inline ::bs_czl::Range* MsgRangeQueryReq::release_range() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgRangeQueryReq.range)
  
  ::bs_czl::Range* temp = range_;
  range_ = NULL;
  return temp;
}
inline void MsgRangeQueryReq::set_allocated_range(::bs_czl::Range* range) {
  delete range_;
  range_ = range;
  if (range) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgRangeQueryReq.range)
}

// -------------------------------------------------------------------

// MsgRangeQueryRsp

// int32 ret = 1;
inline void MsgRangeQueryRsp::clear_ret() {
  ret_ = 0;
}
inline ::google::protobuf::int32 MsgRangeQueryRsp::ret() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRangeQueryRsp.ret)
  return ret_;
}
inline void MsgRangeQueryRsp::set_ret(::google::protobuf::int32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgRangeQueryRsp.ret)
}

// bytes err = 2;
inline void MsgRangeQueryRsp::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgRangeQueryRsp::err() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRangeQueryRsp.err)
  return err_.GetNoArena();
}
inline void MsgRangeQueryRsp::set_err(const ::std::string& value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgRangeQueryRsp.err)
}
#if LANG_CXX11
inline void MsgRangeQueryRsp::set_err(::std::string&& value) {
  
  err_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgRangeQueryRsp.err)
}
#endif
inline void MsgRangeQueryRsp::set_err(const char* value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgRangeQueryRsp.err)
}
inline void MsgRangeQueryRsp::set_err(const void* value, size_t size) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgRangeQueryRsp.err)
}
inline ::std::string* MsgRangeQueryRsp::mutable_err() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRangeQueryRsp.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgRangeQueryRsp::release_err() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgRangeQueryRsp.err)
  
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgRangeQueryRsp::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    
  } else {
    
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgRangeQueryRsp.err)
}

// repeated .bs_czl.MsgRankInfo rank_info = 3;
inline int MsgRangeQueryRsp::rank_info_size() const {
  return rank_info_.size();
}
inline void MsgRangeQueryRsp::clear_rank_info() {
  rank_info_.Clear();
}
inline const ::bs_czl::MsgRankInfo& MsgRangeQueryRsp::rank_info(int index) const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRangeQueryRsp.rank_info)
  return rank_info_.Get(index);
}
inline ::bs_czl::MsgRankInfo* MsgRangeQueryRsp::mutable_rank_info(int index) {
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRangeQueryRsp.rank_info)
  return rank_info_.Mutable(index);
}
inline ::bs_czl::MsgRankInfo* MsgRangeQueryRsp::add_rank_info() {
  // @@protoc_insertion_point(field_add:bs_czl.MsgRangeQueryRsp.rank_info)
  return rank_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::bs_czl::MsgRankInfo >*
MsgRangeQueryRsp::mutable_rank_info() {
  // @@protoc_insertion_point(field_mutable_list:bs_czl.MsgRangeQueryRsp.rank_info)
  return &rank_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::bs_czl::MsgRankInfo >&
MsgRangeQueryRsp::rank_info() const {
  // @@protoc_insertion_point(field_list:bs_czl.MsgRangeQueryRsp.rank_info)
  return rank_info_;
}

// -------------------------------------------------------------------

// MsgRangeByScoreQueryReq

// bytes key_id = 1;
inline void MsgRangeByScoreQueryReq::clear_key_id() {
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgRangeByScoreQueryReq::key_id() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRangeByScoreQueryReq.key_id)
  return key_id_.GetNoArena();
}
inline void MsgRangeByScoreQueryReq::set_key_id(const ::std::string& value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgRangeByScoreQueryReq.key_id)
}
#if LANG_CXX11
inline void MsgRangeByScoreQueryReq::set_key_id(::std::string&& value) {
  
  key_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgRangeByScoreQueryReq.key_id)
}
#endif
inline void MsgRangeByScoreQueryReq::set_key_id(const char* value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgRangeByScoreQueryReq.key_id)
}
inline void MsgRangeByScoreQueryReq::set_key_id(const void* value, size_t size) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgRangeByScoreQueryReq.key_id)
}
inline ::std::string* MsgRangeByScoreQueryReq::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRangeByScoreQueryReq.key_id)
  return key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgRangeByScoreQueryReq::release_key_id() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgRangeByScoreQueryReq.key_id)
  
  return key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgRangeByScoreQueryReq::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgRangeByScoreQueryReq.key_id)
}

// .bs_czl.Range range = 2;
inline bool MsgRangeByScoreQueryReq::has_range() const {
  return this != internal_default_instance() && range_ != NULL;
}
inline void MsgRangeByScoreQueryReq::clear_range() {
  if (GetArenaNoVirtual() == NULL && range_ != NULL) delete range_;
  range_ = NULL;
}
inline const ::bs_czl::Range& MsgRangeByScoreQueryReq::range() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRangeByScoreQueryReq.range)
  return range_ != NULL ? *range_
                         : *::bs_czl::Range::internal_default_instance();
}
inline ::bs_czl::Range* MsgRangeByScoreQueryReq::mutable_range() {
  
  if (range_ == NULL) {
    range_ = new ::bs_czl::Range;
  }
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRangeByScoreQueryReq.range)
  return range_;
}
inline ::bs_czl::Range* MsgRangeByScoreQueryReq::release_range() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgRangeByScoreQueryReq.range)
  
  ::bs_czl::Range* temp = range_;
  range_ = NULL;
  return temp;
}
inline void MsgRangeByScoreQueryReq::set_allocated_range(::bs_czl::Range* range) {
  delete range_;
  range_ = range;
  if (range) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgRangeByScoreQueryReq.range)
}

// -------------------------------------------------------------------

// MsgRangeByScoreQueryRsp

// int32 ret = 1;
inline void MsgRangeByScoreQueryRsp::clear_ret() {
  ret_ = 0;
}
inline ::google::protobuf::int32 MsgRangeByScoreQueryRsp::ret() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRangeByScoreQueryRsp.ret)
  return ret_;
}
inline void MsgRangeByScoreQueryRsp::set_ret(::google::protobuf::int32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgRangeByScoreQueryRsp.ret)
}

// bytes err = 2;
inline void MsgRangeByScoreQueryRsp::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgRangeByScoreQueryRsp::err() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRangeByScoreQueryRsp.err)
  return err_.GetNoArena();
}
inline void MsgRangeByScoreQueryRsp::set_err(const ::std::string& value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgRangeByScoreQueryRsp.err)
}
#if LANG_CXX11
inline void MsgRangeByScoreQueryRsp::set_err(::std::string&& value) {
  
  err_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgRangeByScoreQueryRsp.err)
}
#endif
inline void MsgRangeByScoreQueryRsp::set_err(const char* value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgRangeByScoreQueryRsp.err)
}
inline void MsgRangeByScoreQueryRsp::set_err(const void* value, size_t size) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgRangeByScoreQueryRsp.err)
}
inline ::std::string* MsgRangeByScoreQueryRsp::mutable_err() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRangeByScoreQueryRsp.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgRangeByScoreQueryRsp::release_err() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgRangeByScoreQueryRsp.err)
  
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgRangeByScoreQueryRsp::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    
  } else {
    
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgRangeByScoreQueryRsp.err)
}

// repeated .bs_czl.MsgRankInfo rank_info = 3;
inline int MsgRangeByScoreQueryRsp::rank_info_size() const {
  return rank_info_.size();
}
inline void MsgRangeByScoreQueryRsp::clear_rank_info() {
  rank_info_.Clear();
}
inline const ::bs_czl::MsgRankInfo& MsgRangeByScoreQueryRsp::rank_info(int index) const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRangeByScoreQueryRsp.rank_info)
  return rank_info_.Get(index);
}
inline ::bs_czl::MsgRankInfo* MsgRangeByScoreQueryRsp::mutable_rank_info(int index) {
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRangeByScoreQueryRsp.rank_info)
  return rank_info_.Mutable(index);
}
inline ::bs_czl::MsgRankInfo* MsgRangeByScoreQueryRsp::add_rank_info() {
  // @@protoc_insertion_point(field_add:bs_czl.MsgRangeByScoreQueryRsp.rank_info)
  return rank_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::bs_czl::MsgRankInfo >*
MsgRangeByScoreQueryRsp::mutable_rank_info() {
  // @@protoc_insertion_point(field_mutable_list:bs_czl.MsgRangeByScoreQueryRsp.rank_info)
  return &rank_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::bs_czl::MsgRankInfo >&
MsgRangeByScoreQueryRsp::rank_info() const {
  // @@protoc_insertion_point(field_list:bs_czl.MsgRangeByScoreQueryRsp.rank_info)
  return rank_info_;
}

// -------------------------------------------------------------------

// MsgTopQueryReq

// bytes key_id = 1;
inline void MsgTopQueryReq::clear_key_id() {
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgTopQueryReq::key_id() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgTopQueryReq.key_id)
  return key_id_.GetNoArena();
}
inline void MsgTopQueryReq::set_key_id(const ::std::string& value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgTopQueryReq.key_id)
}
#if LANG_CXX11
inline void MsgTopQueryReq::set_key_id(::std::string&& value) {
  
  key_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgTopQueryReq.key_id)
}
#endif
inline void MsgTopQueryReq::set_key_id(const char* value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgTopQueryReq.key_id)
}
inline void MsgTopQueryReq::set_key_id(const void* value, size_t size) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgTopQueryReq.key_id)
}
inline ::std::string* MsgTopQueryReq::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgTopQueryReq.key_id)
  return key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgTopQueryReq::release_key_id() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgTopQueryReq.key_id)
  
  return key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgTopQueryReq::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgTopQueryReq.key_id)
}

// uint64 top = 2;
inline void MsgTopQueryReq::clear_top() {
  top_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgTopQueryReq::top() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgTopQueryReq.top)
  return top_;
}
inline void MsgTopQueryReq::set_top(::google::protobuf::uint64 value) {
  
  top_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgTopQueryReq.top)
}

// -------------------------------------------------------------------

// MsgTopQueryRsp

// int32 ret = 1;
inline void MsgTopQueryRsp::clear_ret() {
  ret_ = 0;
}
inline ::google::protobuf::int32 MsgTopQueryRsp::ret() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgTopQueryRsp.ret)
  return ret_;
}
inline void MsgTopQueryRsp::set_ret(::google::protobuf::int32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgTopQueryRsp.ret)
}

// bytes err = 2;
inline void MsgTopQueryRsp::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgTopQueryRsp::err() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgTopQueryRsp.err)
  return err_.GetNoArena();
}
inline void MsgTopQueryRsp::set_err(const ::std::string& value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgTopQueryRsp.err)
}
#if LANG_CXX11
inline void MsgTopQueryRsp::set_err(::std::string&& value) {
  
  err_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgTopQueryRsp.err)
}
#endif
inline void MsgTopQueryRsp::set_err(const char* value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgTopQueryRsp.err)
}
inline void MsgTopQueryRsp::set_err(const void* value, size_t size) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgTopQueryRsp.err)
}
inline ::std::string* MsgTopQueryRsp::mutable_err() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgTopQueryRsp.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgTopQueryRsp::release_err() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgTopQueryRsp.err)
  
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgTopQueryRsp::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    
  } else {
    
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgTopQueryRsp.err)
}

// .bs_czl.MsgSetMemData mem_data = 3;
inline bool MsgTopQueryRsp::has_mem_data() const {
  return this != internal_default_instance() && mem_data_ != NULL;
}
inline void MsgTopQueryRsp::clear_mem_data() {
  if (GetArenaNoVirtual() == NULL && mem_data_ != NULL) delete mem_data_;
  mem_data_ = NULL;
}
inline const ::bs_czl::MsgSetMemData& MsgTopQueryRsp::mem_data() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgTopQueryRsp.mem_data)
  return mem_data_ != NULL ? *mem_data_
                         : *::bs_czl::MsgSetMemData::internal_default_instance();
}
inline ::bs_czl::MsgSetMemData* MsgTopQueryRsp::mutable_mem_data() {
  
  if (mem_data_ == NULL) {
    mem_data_ = new ::bs_czl::MsgSetMemData;
  }
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgTopQueryRsp.mem_data)
  return mem_data_;
}
inline ::bs_czl::MsgSetMemData* MsgTopQueryRsp::release_mem_data() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgTopQueryRsp.mem_data)
  
  ::bs_czl::MsgSetMemData* temp = mem_data_;
  mem_data_ = NULL;
  return temp;
}
inline void MsgTopQueryRsp::set_allocated_mem_data(::bs_czl::MsgSetMemData* mem_data) {
  delete mem_data_;
  mem_data_ = mem_data;
  if (mem_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgTopQueryRsp.mem_data)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace bs_czl

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_bs_5fmsg_2eproto__INCLUDED
