// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bs_msg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "bs_msg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace bs_czl {
class MsgTransAppDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgTransApp> {
} _MsgTransApp_default_instance_;
class MsgHeadDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgHead> {
} _MsgHead_default_instance_;
class MsgSetMemDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgSetMemData> {
} _MsgSetMemData_default_instance_;
class MsgSetReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgSetReq> {
} _MsgSetReq_default_instance_;
class MsgSetRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgSetRsp> {
} _MsgSetRsp_default_instance_;
class MsgSetBatchReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgSetBatchReq> {
} _MsgSetBatchReq_default_instance_;
class MsgSetBatchRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgSetBatchRsp> {
} _MsgSetBatchRsp_default_instance_;
class MsgGetScoreReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgGetScoreReq> {
} _MsgGetScoreReq_default_instance_;
class MsgGetScoreRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgGetScoreRsp> {
} _MsgGetScoreRsp_default_instance_;
class MsgGetScoreBatchReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgGetScoreBatchReq> {
} _MsgGetScoreBatchReq_default_instance_;
class MsgGetScoreBatchRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgGetScoreBatchRsp> {
} _MsgGetScoreBatchRsp_default_instance_;
class MsgRankInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgRankInfo> {
} _MsgRankInfo_default_instance_;
class MsgRankQueryReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgRankQueryReq> {
} _MsgRankQueryReq_default_instance_;
class MsgRankQueryRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgRankQueryRsp> {
} _MsgRankQueryRsp_default_instance_;
class MsgRankBatchQueryReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgRankBatchQueryReq> {
} _MsgRankBatchQueryReq_default_instance_;
class MsgRankBatchQueryRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgRankBatchQueryRsp> {
} _MsgRankBatchQueryRsp_default_instance_;
class RangeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Range> {
} _Range_default_instance_;
class MsgRangeQueryReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgRangeQueryReq> {
} _MsgRangeQueryReq_default_instance_;
class MsgRangeQueryRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgRangeQueryRsp> {
} _MsgRangeQueryRsp_default_instance_;
class MsgRangeByScoreQueryReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgRangeByScoreQueryReq> {
} _MsgRangeByScoreQueryReq_default_instance_;
class MsgRangeByScoreQueryRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgRangeByScoreQueryRsp> {
} _MsgRangeByScoreQueryRsp_default_instance_;
class MsgTopQueryReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgTopQueryReq> {
} _MsgTopQueryReq_default_instance_;
class MsgTopQueryRspDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MsgTopQueryRsp> {
} _MsgTopQueryRsp_default_instance_;

namespace protobuf_bs_5fmsg_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[23];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTransApp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTransApp, cmd_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTransApp, client_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTransApp, src_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTransApp, app_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHead, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHead, msg_len_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgHead, cmd_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetMemData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetMemData, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetMemData, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetReq, key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetReq, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetRsp, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetRsp, err_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetBatchReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetBatchReq, key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetBatchReq, data_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetBatchRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetBatchRsp, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetBatchRsp, err_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgSetBatchRsp, succ_num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGetScoreReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGetScoreReq, key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGetScoreReq, mem_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGetScoreRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGetScoreRsp, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGetScoreRsp, err_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGetScoreRsp, mem_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGetScoreBatchReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGetScoreBatchReq, key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGetScoreBatchReq, mem_data_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGetScoreBatchRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGetScoreBatchRsp, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGetScoreBatchRsp, err_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgGetScoreBatchRsp, mem_data_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRankInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRankInfo, rank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRankInfo, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRankQueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRankQueryReq, key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRankQueryReq, mem_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRankQueryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRankQueryRsp, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRankQueryRsp, err_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRankQueryRsp, rank_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRankBatchQueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRankBatchQueryReq, key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRankBatchQueryReq, mem_info_list_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRankBatchQueryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRankBatchQueryRsp, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRankBatchQueryRsp, err_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRankBatchQueryRsp, rank_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Range, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Range, min_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Range, max_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRangeQueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRangeQueryReq, key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRangeQueryReq, range_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRangeQueryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRangeQueryRsp, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRangeQueryRsp, err_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRangeQueryRsp, rank_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRangeByScoreQueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRangeByScoreQueryReq, key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRangeByScoreQueryReq, range_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRangeByScoreQueryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRangeByScoreQueryRsp, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRangeByScoreQueryRsp, err_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgRangeByScoreQueryRsp, rank_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTopQueryReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTopQueryReq, key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTopQueryReq, top_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTopQueryRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTopQueryRsp, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTopQueryRsp, err_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MsgTopQueryRsp, mem_data_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(MsgTransApp)},
  { 8, -1, sizeof(MsgHead)},
  { 14, -1, sizeof(MsgSetMemData)},
  { 20, -1, sizeof(MsgSetReq)},
  { 26, -1, sizeof(MsgSetRsp)},
  { 32, -1, sizeof(MsgSetBatchReq)},
  { 38, -1, sizeof(MsgSetBatchRsp)},
  { 45, -1, sizeof(MsgGetScoreReq)},
  { 51, -1, sizeof(MsgGetScoreRsp)},
  { 58, -1, sizeof(MsgGetScoreBatchReq)},
  { 64, -1, sizeof(MsgGetScoreBatchRsp)},
  { 71, -1, sizeof(MsgRankInfo)},
  { 77, -1, sizeof(MsgRankQueryReq)},
  { 83, -1, sizeof(MsgRankQueryRsp)},
  { 90, -1, sizeof(MsgRankBatchQueryReq)},
  { 96, -1, sizeof(MsgRankBatchQueryRsp)},
  { 103, -1, sizeof(Range)},
  { 109, -1, sizeof(MsgRangeQueryReq)},
  { 115, -1, sizeof(MsgRangeQueryRsp)},
  { 122, -1, sizeof(MsgRangeByScoreQueryReq)},
  { 128, -1, sizeof(MsgRangeByScoreQueryRsp)},
  { 135, -1, sizeof(MsgTopQueryReq)},
  { 141, -1, sizeof(MsgTopQueryRsp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgTransApp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgHead_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgSetMemData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgSetReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgSetRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgSetBatchReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgSetBatchRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgGetScoreReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgGetScoreRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgGetScoreBatchReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgGetScoreBatchRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgRankInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgRankQueryReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgRankQueryRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgRankBatchQueryReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgRankBatchQueryRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Range_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgRangeQueryReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgRangeQueryRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgRangeByScoreQueryReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgRangeByScoreQueryRsp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgTopQueryReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MsgTopQueryRsp_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "bs_msg.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 23);
}

}  // namespace

void TableStruct::Shutdown() {
  _MsgTransApp_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _MsgHead_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _MsgSetMemData_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _MsgSetReq_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _MsgSetRsp_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _MsgSetBatchReq_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _MsgSetBatchRsp_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _MsgGetScoreReq_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _MsgGetScoreRsp_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _MsgGetScoreBatchReq_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _MsgGetScoreBatchRsp_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _MsgRankInfo_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _MsgRankQueryReq_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _MsgRankQueryRsp_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _MsgRankBatchQueryReq_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _MsgRankBatchQueryRsp_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _Range_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _MsgRangeQueryReq_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _MsgRangeQueryRsp_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _MsgRangeByScoreQueryReq_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _MsgRangeByScoreQueryRsp_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _MsgTopQueryReq_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _MsgTopQueryRsp_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _MsgTransApp_default_instance_.DefaultConstruct();
  _MsgHead_default_instance_.DefaultConstruct();
  _MsgSetMemData_default_instance_.DefaultConstruct();
  _MsgSetReq_default_instance_.DefaultConstruct();
  _MsgSetRsp_default_instance_.DefaultConstruct();
  _MsgSetBatchReq_default_instance_.DefaultConstruct();
  _MsgSetBatchRsp_default_instance_.DefaultConstruct();
  _MsgGetScoreReq_default_instance_.DefaultConstruct();
  _MsgGetScoreRsp_default_instance_.DefaultConstruct();
  _MsgGetScoreBatchReq_default_instance_.DefaultConstruct();
  _MsgGetScoreBatchRsp_default_instance_.DefaultConstruct();
  _MsgRankInfo_default_instance_.DefaultConstruct();
  _MsgRankQueryReq_default_instance_.DefaultConstruct();
  _MsgRankQueryRsp_default_instance_.DefaultConstruct();
  _MsgRankBatchQueryReq_default_instance_.DefaultConstruct();
  _MsgRankBatchQueryRsp_default_instance_.DefaultConstruct();
  _Range_default_instance_.DefaultConstruct();
  _MsgRangeQueryReq_default_instance_.DefaultConstruct();
  _MsgRangeQueryRsp_default_instance_.DefaultConstruct();
  _MsgRangeByScoreQueryReq_default_instance_.DefaultConstruct();
  _MsgRangeByScoreQueryRsp_default_instance_.DefaultConstruct();
  _MsgTopQueryReq_default_instance_.DefaultConstruct();
  _MsgTopQueryRsp_default_instance_.DefaultConstruct();
  _MsgSetReq_default_instance_.get_mutable()->data_ = const_cast< ::bs_czl::MsgSetMemData*>(
      ::bs_czl::MsgSetMemData::internal_default_instance());
  _MsgGetScoreRsp_default_instance_.get_mutable()->mem_data_ = const_cast< ::bs_czl::MsgSetMemData*>(
      ::bs_czl::MsgSetMemData::internal_default_instance());
  _MsgRankInfo_default_instance_.get_mutable()->data_ = const_cast< ::bs_czl::MsgSetMemData*>(
      ::bs_czl::MsgSetMemData::internal_default_instance());
  _MsgRankQueryRsp_default_instance_.get_mutable()->rank_info_ = const_cast< ::bs_czl::MsgRankInfo*>(
      ::bs_czl::MsgRankInfo::internal_default_instance());
  _MsgRangeQueryReq_default_instance_.get_mutable()->range_ = const_cast< ::bs_czl::Range*>(
      ::bs_czl::Range::internal_default_instance());
  _MsgRangeByScoreQueryReq_default_instance_.get_mutable()->range_ = const_cast< ::bs_czl::Range*>(
      ::bs_czl::Range::internal_default_instance());
  _MsgTopQueryRsp_default_instance_.get_mutable()->mem_data_ = const_cast< ::bs_czl::MsgSetMemData*>(
      ::bs_czl::MsgSetMemData::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\014bs_msg.proto\022\006bs_czl\"P\n\013MsgTransApp\022\016\n"
      "\006cmd_id\030\001 \001(\005\022\022\n\nclient_pos\030\002 \001(\005\022\013\n\003src"
      "\030\003 \001(\014\022\020\n\010app_data\030\004 \001(\014\"*\n\007MsgHead\022\017\n\007m"
      "sg_len\030\001 \001(\005\022\016\n\006cmd_id\030\002 \001(\005\",\n\rMsgSetMe"
      "mData\022\r\n\005score\030\001 \001(\001\022\014\n\004data\030\002 \001(\014\"@\n\tMs"
      "gSetReq\022\016\n\006key_id\030\001 \001(\014\022#\n\004data\030\002 \001(\0132\025."
      "bs_czl.MsgSetMemData\"%\n\tMsgSetRsp\022\013\n\003ret"
      "\030\001 \001(\005\022\013\n\003err\030\002 \001(\014\"J\n\016MsgSetBatchReq\022\016\n"
      "\006key_id\030\001 \001(\014\022(\n\tdata_list\030\002 \003(\0132\025.bs_cz"
      "l.MsgSetMemData\"<\n\016MsgSetBatchRsp\022\013\n\003ret"
      "\030\001 \001(\005\022\013\n\003err\030\002 \001(\014\022\020\n\010succ_num\030\003 \001(\005\"2\n"
      "\016MsgGetScoreReq\022\016\n\006key_id\030\001 \001(\014\022\020\n\010mem_i"
      "nfo\030\002 \001(\014\"S\n\016MsgGetScoreRsp\022\013\n\003ret\030\001 \001(\005"
      "\022\013\n\003err\030\002 \001(\014\022\'\n\010mem_data\030\003 \001(\0132\025.bs_czl"
      ".MsgSetMemData\"<\n\023MsgGetScoreBatchReq\022\016\n"
      "\006key_id\030\001 \001(\014\022\025\n\rmem_data_list\030\002 \003(\014\"]\n\023"
      "MsgGetScoreBatchRsp\022\013\n\003ret\030\001 \001(\005\022\013\n\003err\030"
      "\002 \001(\014\022,\n\rmem_data_list\030\003 \003(\0132\025.bs_czl.Ms"
      "gSetMemData\"@\n\013MsgRankInfo\022\014\n\004rank\030\001 \001(\004"
      "\022#\n\004data\030\002 \001(\0132\025.bs_czl.MsgSetMemData\"3\n"
      "\017MsgRankQueryReq\022\016\n\006key_id\030\001 \001(\014\022\020\n\010mem_"
      "info\030\002 \001(\014\"S\n\017MsgRankQueryRsp\022\013\n\003ret\030\001 \001"
      "(\005\022\013\n\003err\030\002 \001(\014\022&\n\trank_info\030\003 \001(\0132\023.bs_"
      "czl.MsgRankInfo\"=\n\024MsgRankBatchQueryReq\022"
      "\016\n\006key_id\030\001 \001(\014\022\025\n\rmem_info_list\030\002 \003(\014\"X"
      "\n\024MsgRankBatchQueryRsp\022\013\n\003ret\030\001 \001(\005\022\013\n\003e"
      "rr\030\002 \001(\014\022&\n\trank_info\030\003 \003(\0132\023.bs_czl.Msg"
      "RankInfo\"!\n\005Range\022\013\n\003min\030\001 \001(\004\022\013\n\003max\030\002 "
      "\001(\004\"@\n\020MsgRangeQueryReq\022\016\n\006key_id\030\001 \001(\014\022"
      "\034\n\005range\030\002 \001(\0132\r.bs_czl.Range\"T\n\020MsgRang"
      "eQueryRsp\022\013\n\003ret\030\001 \001(\005\022\013\n\003err\030\002 \001(\014\022&\n\tr"
      "ank_info\030\003 \003(\0132\023.bs_czl.MsgRankInfo\"G\n\027M"
      "sgRangeByScoreQueryReq\022\016\n\006key_id\030\001 \001(\014\022\034"
      "\n\005range\030\002 \001(\0132\r.bs_czl.Range\"[\n\027MsgRange"
      "ByScoreQueryRsp\022\013\n\003ret\030\001 \001(\005\022\013\n\003err\030\002 \001("
      "\014\022&\n\trank_info\030\003 \003(\0132\023.bs_czl.MsgRankInf"
      "o\"-\n\016MsgTopQueryReq\022\016\n\006key_id\030\001 \001(\014\022\013\n\003t"
      "op\030\002 \001(\004\"S\n\016MsgTopQueryRsp\022\013\n\003ret\030\001 \001(\005\022"
      "\013\n\003err\030\002 \001(\014\022\'\n\010mem_data\030\003 \001(\0132\025.bs_czl."
      "MsgSetMemDatab\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1581);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "bs_msg.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_bs_5fmsg_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgTransApp::kCmdIdFieldNumber;
const int MsgTransApp::kClientPosFieldNumber;
const int MsgTransApp::kSrcFieldNumber;
const int MsgTransApp::kAppDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgTransApp::MsgTransApp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bs_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bs_czl.MsgTransApp)
}
MsgTransApp::MsgTransApp(const MsgTransApp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.src().size() > 0) {
    src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_);
  }
  app_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.app_data().size() > 0) {
    app_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_data_);
  }
  ::memcpy(&cmd_id_, &from.cmd_id_,
    reinterpret_cast<char*>(&client_pos_) -
    reinterpret_cast<char*>(&cmd_id_) + sizeof(client_pos_));
  // @@protoc_insertion_point(copy_constructor:bs_czl.MsgTransApp)
}

void MsgTransApp::SharedCtor() {
  src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cmd_id_, 0, reinterpret_cast<char*>(&client_pos_) -
    reinterpret_cast<char*>(&cmd_id_) + sizeof(client_pos_));
  _cached_size_ = 0;
}

MsgTransApp::~MsgTransApp() {
  // @@protoc_insertion_point(destructor:bs_czl.MsgTransApp)
  SharedDtor();
}

void MsgTransApp::SharedDtor() {
  src_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgTransApp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgTransApp::descriptor() {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[0].descriptor;
}

const MsgTransApp& MsgTransApp::default_instance() {
  protobuf_bs_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgTransApp* MsgTransApp::New(::google::protobuf::Arena* arena) const {
  MsgTransApp* n = new MsgTransApp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgTransApp::Clear() {
// @@protoc_insertion_point(message_clear_start:bs_czl.MsgTransApp)
  src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cmd_id_, 0, reinterpret_cast<char*>(&client_pos_) -
    reinterpret_cast<char*>(&cmd_id_) + sizeof(client_pos_));
}

bool MsgTransApp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bs_czl.MsgTransApp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 cmd_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cmd_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 client_pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &client_pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes src = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_src()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes app_data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_app_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bs_czl.MsgTransApp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bs_czl.MsgTransApp)
  return false;
#undef DO_
}

void MsgTransApp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bs_czl.MsgTransApp)
  // int32 cmd_id = 1;
  if (this->cmd_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cmd_id(), output);
  }

  // int32 client_pos = 2;
  if (this->client_pos() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->client_pos(), output);
  }

  // bytes src = 3;
  if (this->src().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->src(), output);
  }

  // bytes app_data = 4;
  if (this->app_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->app_data(), output);
  }

  // @@protoc_insertion_point(serialize_end:bs_czl.MsgTransApp)
}

::google::protobuf::uint8* MsgTransApp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bs_czl.MsgTransApp)
  // int32 cmd_id = 1;
  if (this->cmd_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cmd_id(), target);
  }

  // int32 client_pos = 2;
  if (this->client_pos() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->client_pos(), target);
  }

  // bytes src = 3;
  if (this->src().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->src(), target);
  }

  // bytes app_data = 4;
  if (this->app_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->app_data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bs_czl.MsgTransApp)
  return target;
}

size_t MsgTransApp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bs_czl.MsgTransApp)
  size_t total_size = 0;

  // bytes src = 3;
  if (this->src().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->src());
  }

  // bytes app_data = 4;
  if (this->app_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->app_data());
  }

  // int32 cmd_id = 1;
  if (this->cmd_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cmd_id());
  }

  // int32 client_pos = 2;
  if (this->client_pos() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->client_pos());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgTransApp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bs_czl.MsgTransApp)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgTransApp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgTransApp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bs_czl.MsgTransApp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bs_czl.MsgTransApp)
    MergeFrom(*source);
  }
}

void MsgTransApp::MergeFrom(const MsgTransApp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bs_czl.MsgTransApp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.src().size() > 0) {

    src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_);
  }
  if (from.app_data().size() > 0) {

    app_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_data_);
  }
  if (from.cmd_id() != 0) {
    set_cmd_id(from.cmd_id());
  }
  if (from.client_pos() != 0) {
    set_client_pos(from.client_pos());
  }
}

void MsgTransApp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bs_czl.MsgTransApp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgTransApp::CopyFrom(const MsgTransApp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bs_czl.MsgTransApp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgTransApp::IsInitialized() const {
  return true;
}

void MsgTransApp::Swap(MsgTransApp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgTransApp::InternalSwap(MsgTransApp* other) {
  src_.Swap(&other->src_);
  app_data_.Swap(&other->app_data_);
  std::swap(cmd_id_, other->cmd_id_);
  std::swap(client_pos_, other->client_pos_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgTransApp::GetMetadata() const {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgTransApp

// int32 cmd_id = 1;
void MsgTransApp::clear_cmd_id() {
  cmd_id_ = 0;
}
::google::protobuf::int32 MsgTransApp::cmd_id() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgTransApp.cmd_id)
  return cmd_id_;
}
void MsgTransApp::set_cmd_id(::google::protobuf::int32 value) {
  
  cmd_id_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgTransApp.cmd_id)
}

// int32 client_pos = 2;
void MsgTransApp::clear_client_pos() {
  client_pos_ = 0;
}
::google::protobuf::int32 MsgTransApp::client_pos() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgTransApp.client_pos)
  return client_pos_;
}
void MsgTransApp::set_client_pos(::google::protobuf::int32 value) {
  
  client_pos_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgTransApp.client_pos)
}

// bytes src = 3;
void MsgTransApp::clear_src() {
  src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgTransApp::src() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgTransApp.src)
  return src_.GetNoArena();
}
void MsgTransApp::set_src(const ::std::string& value) {
  
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgTransApp.src)
}
#if LANG_CXX11
void MsgTransApp::set_src(::std::string&& value) {
  
  src_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgTransApp.src)
}
#endif
void MsgTransApp::set_src(const char* value) {
  
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgTransApp.src)
}
void MsgTransApp::set_src(const void* value, size_t size) {
  
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgTransApp.src)
}
::std::string* MsgTransApp::mutable_src() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgTransApp.src)
  return src_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgTransApp::release_src() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgTransApp.src)
  
  return src_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgTransApp::set_allocated_src(::std::string* src) {
  if (src != NULL) {
    
  } else {
    
  }
  src_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), src);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgTransApp.src)
}

// bytes app_data = 4;
void MsgTransApp::clear_app_data() {
  app_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgTransApp::app_data() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgTransApp.app_data)
  return app_data_.GetNoArena();
}
void MsgTransApp::set_app_data(const ::std::string& value) {
  
  app_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgTransApp.app_data)
}
#if LANG_CXX11
void MsgTransApp::set_app_data(::std::string&& value) {
  
  app_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgTransApp.app_data)
}
#endif
void MsgTransApp::set_app_data(const char* value) {
  
  app_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgTransApp.app_data)
}
void MsgTransApp::set_app_data(const void* value, size_t size) {
  
  app_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgTransApp.app_data)
}
::std::string* MsgTransApp::mutable_app_data() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgTransApp.app_data)
  return app_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgTransApp::release_app_data() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgTransApp.app_data)
  
  return app_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgTransApp::set_allocated_app_data(::std::string* app_data) {
  if (app_data != NULL) {
    
  } else {
    
  }
  app_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_data);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgTransApp.app_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgHead::kMsgLenFieldNumber;
const int MsgHead::kCmdIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgHead::MsgHead()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bs_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bs_czl.MsgHead)
}
MsgHead::MsgHead(const MsgHead& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&msg_len_, &from.msg_len_,
    reinterpret_cast<char*>(&cmd_id_) -
    reinterpret_cast<char*>(&msg_len_) + sizeof(cmd_id_));
  // @@protoc_insertion_point(copy_constructor:bs_czl.MsgHead)
}

void MsgHead::SharedCtor() {
  ::memset(&msg_len_, 0, reinterpret_cast<char*>(&cmd_id_) -
    reinterpret_cast<char*>(&msg_len_) + sizeof(cmd_id_));
  _cached_size_ = 0;
}

MsgHead::~MsgHead() {
  // @@protoc_insertion_point(destructor:bs_czl.MsgHead)
  SharedDtor();
}

void MsgHead::SharedDtor() {
}

void MsgHead::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgHead::descriptor() {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[1].descriptor;
}

const MsgHead& MsgHead::default_instance() {
  protobuf_bs_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgHead* MsgHead::New(::google::protobuf::Arena* arena) const {
  MsgHead* n = new MsgHead;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgHead::Clear() {
// @@protoc_insertion_point(message_clear_start:bs_czl.MsgHead)
  ::memset(&msg_len_, 0, reinterpret_cast<char*>(&cmd_id_) -
    reinterpret_cast<char*>(&msg_len_) + sizeof(cmd_id_));
}

bool MsgHead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bs_czl.MsgHead)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 msg_len = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msg_len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 cmd_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cmd_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bs_czl.MsgHead)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bs_czl.MsgHead)
  return false;
#undef DO_
}

void MsgHead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bs_czl.MsgHead)
  // int32 msg_len = 1;
  if (this->msg_len() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->msg_len(), output);
  }

  // int32 cmd_id = 2;
  if (this->cmd_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cmd_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:bs_czl.MsgHead)
}

::google::protobuf::uint8* MsgHead::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bs_czl.MsgHead)
  // int32 msg_len = 1;
  if (this->msg_len() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->msg_len(), target);
  }

  // int32 cmd_id = 2;
  if (this->cmd_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cmd_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bs_czl.MsgHead)
  return target;
}

size_t MsgHead::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bs_czl.MsgHead)
  size_t total_size = 0;

  // int32 msg_len = 1;
  if (this->msg_len() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msg_len());
  }

  // int32 cmd_id = 2;
  if (this->cmd_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cmd_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgHead::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bs_czl.MsgHead)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgHead* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgHead>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bs_czl.MsgHead)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bs_czl.MsgHead)
    MergeFrom(*source);
  }
}

void MsgHead::MergeFrom(const MsgHead& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bs_czl.MsgHead)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.msg_len() != 0) {
    set_msg_len(from.msg_len());
  }
  if (from.cmd_id() != 0) {
    set_cmd_id(from.cmd_id());
  }
}

void MsgHead::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bs_czl.MsgHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgHead::CopyFrom(const MsgHead& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bs_czl.MsgHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgHead::IsInitialized() const {
  return true;
}

void MsgHead::Swap(MsgHead* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgHead::InternalSwap(MsgHead* other) {
  std::swap(msg_len_, other->msg_len_);
  std::swap(cmd_id_, other->cmd_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgHead::GetMetadata() const {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgHead

// int32 msg_len = 1;
void MsgHead::clear_msg_len() {
  msg_len_ = 0;
}
::google::protobuf::int32 MsgHead::msg_len() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgHead.msg_len)
  return msg_len_;
}
void MsgHead::set_msg_len(::google::protobuf::int32 value) {
  
  msg_len_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgHead.msg_len)
}

// int32 cmd_id = 2;
void MsgHead::clear_cmd_id() {
  cmd_id_ = 0;
}
::google::protobuf::int32 MsgHead::cmd_id() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgHead.cmd_id)
  return cmd_id_;
}
void MsgHead::set_cmd_id(::google::protobuf::int32 value) {
  
  cmd_id_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgHead.cmd_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgSetMemData::kScoreFieldNumber;
const int MsgSetMemData::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgSetMemData::MsgSetMemData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bs_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bs_czl.MsgSetMemData)
}
MsgSetMemData::MsgSetMemData(const MsgSetMemData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  score_ = from.score_;
  // @@protoc_insertion_point(copy_constructor:bs_czl.MsgSetMemData)
}

void MsgSetMemData::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  score_ = 0;
  _cached_size_ = 0;
}

MsgSetMemData::~MsgSetMemData() {
  // @@protoc_insertion_point(destructor:bs_czl.MsgSetMemData)
  SharedDtor();
}

void MsgSetMemData::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgSetMemData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSetMemData::descriptor() {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[2].descriptor;
}

const MsgSetMemData& MsgSetMemData::default_instance() {
  protobuf_bs_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgSetMemData* MsgSetMemData::New(::google::protobuf::Arena* arena) const {
  MsgSetMemData* n = new MsgSetMemData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgSetMemData::Clear() {
// @@protoc_insertion_point(message_clear_start:bs_czl.MsgSetMemData)
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  score_ = 0;
}

bool MsgSetMemData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bs_czl.MsgSetMemData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double score = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bs_czl.MsgSetMemData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bs_czl.MsgSetMemData)
  return false;
#undef DO_
}

void MsgSetMemData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bs_czl.MsgSetMemData)
  // double score = 1;
  if (this->score() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->score(), output);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:bs_czl.MsgSetMemData)
}

::google::protobuf::uint8* MsgSetMemData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bs_czl.MsgSetMemData)
  // double score = 1;
  if (this->score() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->score(), target);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bs_czl.MsgSetMemData)
  return target;
}

size_t MsgSetMemData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bs_czl.MsgSetMemData)
  size_t total_size = 0;

  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // double score = 1;
  if (this->score() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSetMemData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bs_czl.MsgSetMemData)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgSetMemData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgSetMemData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bs_czl.MsgSetMemData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bs_czl.MsgSetMemData)
    MergeFrom(*source);
  }
}

void MsgSetMemData::MergeFrom(const MsgSetMemData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bs_czl.MsgSetMemData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.score() != 0) {
    set_score(from.score());
  }
}

void MsgSetMemData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bs_czl.MsgSetMemData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSetMemData::CopyFrom(const MsgSetMemData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bs_czl.MsgSetMemData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSetMemData::IsInitialized() const {
  return true;
}

void MsgSetMemData::Swap(MsgSetMemData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgSetMemData::InternalSwap(MsgSetMemData* other) {
  data_.Swap(&other->data_);
  std::swap(score_, other->score_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgSetMemData::GetMetadata() const {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgSetMemData

// double score = 1;
void MsgSetMemData::clear_score() {
  score_ = 0;
}
double MsgSetMemData::score() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgSetMemData.score)
  return score_;
}
void MsgSetMemData::set_score(double value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgSetMemData.score)
}

// bytes data = 2;
void MsgSetMemData::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgSetMemData::data() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgSetMemData.data)
  return data_.GetNoArena();
}
void MsgSetMemData::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgSetMemData.data)
}
#if LANG_CXX11
void MsgSetMemData::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgSetMemData.data)
}
#endif
void MsgSetMemData::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgSetMemData.data)
}
void MsgSetMemData::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgSetMemData.data)
}
::std::string* MsgSetMemData::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgSetMemData.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgSetMemData::release_data() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgSetMemData.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgSetMemData::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgSetMemData.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgSetReq::kKeyIdFieldNumber;
const int MsgSetReq::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgSetReq::MsgSetReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bs_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bs_czl.MsgSetReq)
}
MsgSetReq::MsgSetReq(const MsgSetReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key_id().size() > 0) {
    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
  if (from.has_data()) {
    data_ = new ::bs_czl::MsgSetMemData(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:bs_czl.MsgSetReq)
}

void MsgSetReq::SharedCtor() {
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_ = NULL;
  _cached_size_ = 0;
}

MsgSetReq::~MsgSetReq() {
  // @@protoc_insertion_point(destructor:bs_czl.MsgSetReq)
  SharedDtor();
}

void MsgSetReq::SharedDtor() {
  key_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete data_;
  }
}

void MsgSetReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSetReq::descriptor() {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[3].descriptor;
}

const MsgSetReq& MsgSetReq::default_instance() {
  protobuf_bs_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgSetReq* MsgSetReq::New(::google::protobuf::Arena* arena) const {
  MsgSetReq* n = new MsgSetReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgSetReq::Clear() {
// @@protoc_insertion_point(message_clear_start:bs_czl.MsgSetReq)
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}

bool MsgSetReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bs_czl.MsgSetReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes key_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bs_czl.MsgSetMemData data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bs_czl.MsgSetReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bs_czl.MsgSetReq)
  return false;
#undef DO_
}

void MsgSetReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bs_czl.MsgSetReq)
  // bytes key_id = 1;
  if (this->key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key_id(), output);
  }

  // .bs_czl.MsgSetMemData data = 2;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->data_, output);
  }

  // @@protoc_insertion_point(serialize_end:bs_czl.MsgSetReq)
}

::google::protobuf::uint8* MsgSetReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bs_czl.MsgSetReq)
  // bytes key_id = 1;
  if (this->key_id().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key_id(), target);
  }

  // .bs_czl.MsgSetMemData data = 2;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->data_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bs_czl.MsgSetReq)
  return target;
}

size_t MsgSetReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bs_czl.MsgSetReq)
  size_t total_size = 0;

  // bytes key_id = 1;
  if (this->key_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key_id());
  }

  // .bs_czl.MsgSetMemData data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSetReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bs_czl.MsgSetReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgSetReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgSetReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bs_czl.MsgSetReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bs_czl.MsgSetReq)
    MergeFrom(*source);
  }
}

void MsgSetReq::MergeFrom(const MsgSetReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bs_czl.MsgSetReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.key_id().size() > 0) {

    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
  if (from.has_data()) {
    mutable_data()->::bs_czl::MsgSetMemData::MergeFrom(from.data());
  }
}

void MsgSetReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bs_czl.MsgSetReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSetReq::CopyFrom(const MsgSetReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bs_czl.MsgSetReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSetReq::IsInitialized() const {
  return true;
}

void MsgSetReq::Swap(MsgSetReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgSetReq::InternalSwap(MsgSetReq* other) {
  key_id_.Swap(&other->key_id_);
  std::swap(data_, other->data_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgSetReq::GetMetadata() const {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgSetReq

// bytes key_id = 1;
void MsgSetReq::clear_key_id() {
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgSetReq::key_id() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgSetReq.key_id)
  return key_id_.GetNoArena();
}
void MsgSetReq::set_key_id(const ::std::string& value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgSetReq.key_id)
}
#if LANG_CXX11
void MsgSetReq::set_key_id(::std::string&& value) {
  
  key_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgSetReq.key_id)
}
#endif
void MsgSetReq::set_key_id(const char* value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgSetReq.key_id)
}
void MsgSetReq::set_key_id(const void* value, size_t size) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgSetReq.key_id)
}
::std::string* MsgSetReq::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgSetReq.key_id)
  return key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgSetReq::release_key_id() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgSetReq.key_id)
  
  return key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgSetReq::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgSetReq.key_id)
}

// .bs_czl.MsgSetMemData data = 2;
bool MsgSetReq::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
void MsgSetReq::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
const ::bs_czl::MsgSetMemData& MsgSetReq::data() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgSetReq.data)
  return data_ != NULL ? *data_
                         : *::bs_czl::MsgSetMemData::internal_default_instance();
}
::bs_czl::MsgSetMemData* MsgSetReq::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::bs_czl::MsgSetMemData;
  }
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgSetReq.data)
  return data_;
}
::bs_czl::MsgSetMemData* MsgSetReq::release_data() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgSetReq.data)
  
  ::bs_czl::MsgSetMemData* temp = data_;
  data_ = NULL;
  return temp;
}
void MsgSetReq::set_allocated_data(::bs_czl::MsgSetMemData* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgSetReq.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgSetRsp::kRetFieldNumber;
const int MsgSetRsp::kErrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgSetRsp::MsgSetRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bs_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bs_czl.MsgSetRsp)
}
MsgSetRsp::MsgSetRsp(const MsgSetRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.err().size() > 0) {
    err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:bs_czl.MsgSetRsp)
}

void MsgSetRsp::SharedCtor() {
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

MsgSetRsp::~MsgSetRsp() {
  // @@protoc_insertion_point(destructor:bs_czl.MsgSetRsp)
  SharedDtor();
}

void MsgSetRsp::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgSetRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSetRsp::descriptor() {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[4].descriptor;
}

const MsgSetRsp& MsgSetRsp::default_instance() {
  protobuf_bs_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgSetRsp* MsgSetRsp::New(::google::protobuf::Arena* arena) const {
  MsgSetRsp* n = new MsgSetRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgSetRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:bs_czl.MsgSetRsp)
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
}

bool MsgSetRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bs_czl.MsgSetRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes err = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_err()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bs_czl.MsgSetRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bs_czl.MsgSetRsp)
  return false;
#undef DO_
}

void MsgSetRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bs_czl.MsgSetRsp)
  // int32 ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // bytes err = 2;
  if (this->err().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->err(), output);
  }

  // @@protoc_insertion_point(serialize_end:bs_czl.MsgSetRsp)
}

::google::protobuf::uint8* MsgSetRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bs_czl.MsgSetRsp)
  // int32 ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // bytes err = 2;
  if (this->err().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->err(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bs_czl.MsgSetRsp)
  return target;
}

size_t MsgSetRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bs_czl.MsgSetRsp)
  size_t total_size = 0;

  // bytes err = 2;
  if (this->err().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->err());
  }

  // int32 ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSetRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bs_czl.MsgSetRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgSetRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgSetRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bs_czl.MsgSetRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bs_czl.MsgSetRsp)
    MergeFrom(*source);
  }
}

void MsgSetRsp::MergeFrom(const MsgSetRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bs_czl.MsgSetRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.err().size() > 0) {

    err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void MsgSetRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bs_czl.MsgSetRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSetRsp::CopyFrom(const MsgSetRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bs_czl.MsgSetRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSetRsp::IsInitialized() const {
  return true;
}

void MsgSetRsp::Swap(MsgSetRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgSetRsp::InternalSwap(MsgSetRsp* other) {
  err_.Swap(&other->err_);
  std::swap(ret_, other->ret_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgSetRsp::GetMetadata() const {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgSetRsp

// int32 ret = 1;
void MsgSetRsp::clear_ret() {
  ret_ = 0;
}
::google::protobuf::int32 MsgSetRsp::ret() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgSetRsp.ret)
  return ret_;
}
void MsgSetRsp::set_ret(::google::protobuf::int32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgSetRsp.ret)
}

// bytes err = 2;
void MsgSetRsp::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgSetRsp::err() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgSetRsp.err)
  return err_.GetNoArena();
}
void MsgSetRsp::set_err(const ::std::string& value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgSetRsp.err)
}
#if LANG_CXX11
void MsgSetRsp::set_err(::std::string&& value) {
  
  err_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgSetRsp.err)
}
#endif
void MsgSetRsp::set_err(const char* value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgSetRsp.err)
}
void MsgSetRsp::set_err(const void* value, size_t size) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgSetRsp.err)
}
::std::string* MsgSetRsp::mutable_err() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgSetRsp.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgSetRsp::release_err() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgSetRsp.err)
  
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgSetRsp::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    
  } else {
    
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgSetRsp.err)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgSetBatchReq::kKeyIdFieldNumber;
const int MsgSetBatchReq::kDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgSetBatchReq::MsgSetBatchReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bs_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bs_czl.MsgSetBatchReq)
}
MsgSetBatchReq::MsgSetBatchReq(const MsgSetBatchReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      data_list_(from.data_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key_id().size() > 0) {
    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
  // @@protoc_insertion_point(copy_constructor:bs_czl.MsgSetBatchReq)
}

void MsgSetBatchReq::SharedCtor() {
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MsgSetBatchReq::~MsgSetBatchReq() {
  // @@protoc_insertion_point(destructor:bs_czl.MsgSetBatchReq)
  SharedDtor();
}

void MsgSetBatchReq::SharedDtor() {
  key_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgSetBatchReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSetBatchReq::descriptor() {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[5].descriptor;
}

const MsgSetBatchReq& MsgSetBatchReq::default_instance() {
  protobuf_bs_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgSetBatchReq* MsgSetBatchReq::New(::google::protobuf::Arena* arena) const {
  MsgSetBatchReq* n = new MsgSetBatchReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgSetBatchReq::Clear() {
// @@protoc_insertion_point(message_clear_start:bs_czl.MsgSetBatchReq)
  data_list_.Clear();
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MsgSetBatchReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bs_czl.MsgSetBatchReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes key_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bs_czl.MsgSetMemData data_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data_list()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bs_czl.MsgSetBatchReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bs_czl.MsgSetBatchReq)
  return false;
#undef DO_
}

void MsgSetBatchReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bs_czl.MsgSetBatchReq)
  // bytes key_id = 1;
  if (this->key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key_id(), output);
  }

  // repeated .bs_czl.MsgSetMemData data_list = 2;
  for (unsigned int i = 0, n = this->data_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->data_list(i), output);
  }

  // @@protoc_insertion_point(serialize_end:bs_czl.MsgSetBatchReq)
}

::google::protobuf::uint8* MsgSetBatchReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bs_czl.MsgSetBatchReq)
  // bytes key_id = 1;
  if (this->key_id().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key_id(), target);
  }

  // repeated .bs_czl.MsgSetMemData data_list = 2;
  for (unsigned int i = 0, n = this->data_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->data_list(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bs_czl.MsgSetBatchReq)
  return target;
}

size_t MsgSetBatchReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bs_czl.MsgSetBatchReq)
  size_t total_size = 0;

  // repeated .bs_czl.MsgSetMemData data_list = 2;
  {
    unsigned int count = this->data_list_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data_list(i));
    }
  }

  // bytes key_id = 1;
  if (this->key_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSetBatchReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bs_czl.MsgSetBatchReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgSetBatchReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgSetBatchReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bs_czl.MsgSetBatchReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bs_czl.MsgSetBatchReq)
    MergeFrom(*source);
  }
}

void MsgSetBatchReq::MergeFrom(const MsgSetBatchReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bs_czl.MsgSetBatchReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_list_.MergeFrom(from.data_list_);
  if (from.key_id().size() > 0) {

    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
}

void MsgSetBatchReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bs_czl.MsgSetBatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSetBatchReq::CopyFrom(const MsgSetBatchReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bs_czl.MsgSetBatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSetBatchReq::IsInitialized() const {
  return true;
}

void MsgSetBatchReq::Swap(MsgSetBatchReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgSetBatchReq::InternalSwap(MsgSetBatchReq* other) {
  data_list_.UnsafeArenaSwap(&other->data_list_);
  key_id_.Swap(&other->key_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgSetBatchReq::GetMetadata() const {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgSetBatchReq

// bytes key_id = 1;
void MsgSetBatchReq::clear_key_id() {
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgSetBatchReq::key_id() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgSetBatchReq.key_id)
  return key_id_.GetNoArena();
}
void MsgSetBatchReq::set_key_id(const ::std::string& value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgSetBatchReq.key_id)
}
#if LANG_CXX11
void MsgSetBatchReq::set_key_id(::std::string&& value) {
  
  key_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgSetBatchReq.key_id)
}
#endif
void MsgSetBatchReq::set_key_id(const char* value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgSetBatchReq.key_id)
}
void MsgSetBatchReq::set_key_id(const void* value, size_t size) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgSetBatchReq.key_id)
}
::std::string* MsgSetBatchReq::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgSetBatchReq.key_id)
  return key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgSetBatchReq::release_key_id() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgSetBatchReq.key_id)
  
  return key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgSetBatchReq::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgSetBatchReq.key_id)
}

// repeated .bs_czl.MsgSetMemData data_list = 2;
int MsgSetBatchReq::data_list_size() const {
  return data_list_.size();
}
void MsgSetBatchReq::clear_data_list() {
  data_list_.Clear();
}
const ::bs_czl::MsgSetMemData& MsgSetBatchReq::data_list(int index) const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgSetBatchReq.data_list)
  return data_list_.Get(index);
}
::bs_czl::MsgSetMemData* MsgSetBatchReq::mutable_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgSetBatchReq.data_list)
  return data_list_.Mutable(index);
}
::bs_czl::MsgSetMemData* MsgSetBatchReq::add_data_list() {
  // @@protoc_insertion_point(field_add:bs_czl.MsgSetBatchReq.data_list)
  return data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::bs_czl::MsgSetMemData >*
MsgSetBatchReq::mutable_data_list() {
  // @@protoc_insertion_point(field_mutable_list:bs_czl.MsgSetBatchReq.data_list)
  return &data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::bs_czl::MsgSetMemData >&
MsgSetBatchReq::data_list() const {
  // @@protoc_insertion_point(field_list:bs_czl.MsgSetBatchReq.data_list)
  return data_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgSetBatchRsp::kRetFieldNumber;
const int MsgSetBatchRsp::kErrFieldNumber;
const int MsgSetBatchRsp::kSuccNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgSetBatchRsp::MsgSetBatchRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bs_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bs_czl.MsgSetBatchRsp)
}
MsgSetBatchRsp::MsgSetBatchRsp(const MsgSetBatchRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.err().size() > 0) {
    err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
  }
  ::memcpy(&ret_, &from.ret_,
    reinterpret_cast<char*>(&succ_num_) -
    reinterpret_cast<char*>(&ret_) + sizeof(succ_num_));
  // @@protoc_insertion_point(copy_constructor:bs_czl.MsgSetBatchRsp)
}

void MsgSetBatchRsp::SharedCtor() {
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ret_, 0, reinterpret_cast<char*>(&succ_num_) -
    reinterpret_cast<char*>(&ret_) + sizeof(succ_num_));
  _cached_size_ = 0;
}

MsgSetBatchRsp::~MsgSetBatchRsp() {
  // @@protoc_insertion_point(destructor:bs_czl.MsgSetBatchRsp)
  SharedDtor();
}

void MsgSetBatchRsp::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgSetBatchRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgSetBatchRsp::descriptor() {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[6].descriptor;
}

const MsgSetBatchRsp& MsgSetBatchRsp::default_instance() {
  protobuf_bs_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgSetBatchRsp* MsgSetBatchRsp::New(::google::protobuf::Arena* arena) const {
  MsgSetBatchRsp* n = new MsgSetBatchRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgSetBatchRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:bs_czl.MsgSetBatchRsp)
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ret_, 0, reinterpret_cast<char*>(&succ_num_) -
    reinterpret_cast<char*>(&ret_) + sizeof(succ_num_));
}

bool MsgSetBatchRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bs_czl.MsgSetBatchRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes err = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_err()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 succ_num = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &succ_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bs_czl.MsgSetBatchRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bs_czl.MsgSetBatchRsp)
  return false;
#undef DO_
}

void MsgSetBatchRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bs_czl.MsgSetBatchRsp)
  // int32 ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // bytes err = 2;
  if (this->err().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->err(), output);
  }

  // int32 succ_num = 3;
  if (this->succ_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->succ_num(), output);
  }

  // @@protoc_insertion_point(serialize_end:bs_czl.MsgSetBatchRsp)
}

::google::protobuf::uint8* MsgSetBatchRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bs_czl.MsgSetBatchRsp)
  // int32 ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // bytes err = 2;
  if (this->err().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->err(), target);
  }

  // int32 succ_num = 3;
  if (this->succ_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->succ_num(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bs_czl.MsgSetBatchRsp)
  return target;
}

size_t MsgSetBatchRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bs_czl.MsgSetBatchRsp)
  size_t total_size = 0;

  // bytes err = 2;
  if (this->err().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->err());
  }

  // int32 ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }

  // int32 succ_num = 3;
  if (this->succ_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->succ_num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgSetBatchRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bs_czl.MsgSetBatchRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgSetBatchRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgSetBatchRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bs_czl.MsgSetBatchRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bs_czl.MsgSetBatchRsp)
    MergeFrom(*source);
  }
}

void MsgSetBatchRsp::MergeFrom(const MsgSetBatchRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bs_czl.MsgSetBatchRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.err().size() > 0) {

    err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
  if (from.succ_num() != 0) {
    set_succ_num(from.succ_num());
  }
}

void MsgSetBatchRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bs_czl.MsgSetBatchRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgSetBatchRsp::CopyFrom(const MsgSetBatchRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bs_czl.MsgSetBatchRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSetBatchRsp::IsInitialized() const {
  return true;
}

void MsgSetBatchRsp::Swap(MsgSetBatchRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgSetBatchRsp::InternalSwap(MsgSetBatchRsp* other) {
  err_.Swap(&other->err_);
  std::swap(ret_, other->ret_);
  std::swap(succ_num_, other->succ_num_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgSetBatchRsp::GetMetadata() const {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgSetBatchRsp

// int32 ret = 1;
void MsgSetBatchRsp::clear_ret() {
  ret_ = 0;
}
::google::protobuf::int32 MsgSetBatchRsp::ret() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgSetBatchRsp.ret)
  return ret_;
}
void MsgSetBatchRsp::set_ret(::google::protobuf::int32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgSetBatchRsp.ret)
}

// bytes err = 2;
void MsgSetBatchRsp::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgSetBatchRsp::err() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgSetBatchRsp.err)
  return err_.GetNoArena();
}
void MsgSetBatchRsp::set_err(const ::std::string& value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgSetBatchRsp.err)
}
#if LANG_CXX11
void MsgSetBatchRsp::set_err(::std::string&& value) {
  
  err_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgSetBatchRsp.err)
}
#endif
void MsgSetBatchRsp::set_err(const char* value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgSetBatchRsp.err)
}
void MsgSetBatchRsp::set_err(const void* value, size_t size) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgSetBatchRsp.err)
}
::std::string* MsgSetBatchRsp::mutable_err() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgSetBatchRsp.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgSetBatchRsp::release_err() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgSetBatchRsp.err)
  
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgSetBatchRsp::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    
  } else {
    
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgSetBatchRsp.err)
}

// int32 succ_num = 3;
void MsgSetBatchRsp::clear_succ_num() {
  succ_num_ = 0;
}
::google::protobuf::int32 MsgSetBatchRsp::succ_num() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgSetBatchRsp.succ_num)
  return succ_num_;
}
void MsgSetBatchRsp::set_succ_num(::google::protobuf::int32 value) {
  
  succ_num_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgSetBatchRsp.succ_num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgGetScoreReq::kKeyIdFieldNumber;
const int MsgGetScoreReq::kMemInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgGetScoreReq::MsgGetScoreReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bs_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bs_czl.MsgGetScoreReq)
}
MsgGetScoreReq::MsgGetScoreReq(const MsgGetScoreReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key_id().size() > 0) {
    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
  mem_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mem_info().size() > 0) {
    mem_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mem_info_);
  }
  // @@protoc_insertion_point(copy_constructor:bs_czl.MsgGetScoreReq)
}

void MsgGetScoreReq::SharedCtor() {
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mem_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MsgGetScoreReq::~MsgGetScoreReq() {
  // @@protoc_insertion_point(destructor:bs_czl.MsgGetScoreReq)
  SharedDtor();
}

void MsgGetScoreReq::SharedDtor() {
  key_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mem_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgGetScoreReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgGetScoreReq::descriptor() {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[7].descriptor;
}

const MsgGetScoreReq& MsgGetScoreReq::default_instance() {
  protobuf_bs_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgGetScoreReq* MsgGetScoreReq::New(::google::protobuf::Arena* arena) const {
  MsgGetScoreReq* n = new MsgGetScoreReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgGetScoreReq::Clear() {
// @@protoc_insertion_point(message_clear_start:bs_czl.MsgGetScoreReq)
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mem_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MsgGetScoreReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bs_czl.MsgGetScoreReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes key_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes mem_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mem_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bs_czl.MsgGetScoreReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bs_czl.MsgGetScoreReq)
  return false;
#undef DO_
}

void MsgGetScoreReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bs_czl.MsgGetScoreReq)
  // bytes key_id = 1;
  if (this->key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key_id(), output);
  }

  // bytes mem_info = 2;
  if (this->mem_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->mem_info(), output);
  }

  // @@protoc_insertion_point(serialize_end:bs_czl.MsgGetScoreReq)
}

::google::protobuf::uint8* MsgGetScoreReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bs_czl.MsgGetScoreReq)
  // bytes key_id = 1;
  if (this->key_id().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key_id(), target);
  }

  // bytes mem_info = 2;
  if (this->mem_info().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->mem_info(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bs_czl.MsgGetScoreReq)
  return target;
}

size_t MsgGetScoreReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bs_czl.MsgGetScoreReq)
  size_t total_size = 0;

  // bytes key_id = 1;
  if (this->key_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key_id());
  }

  // bytes mem_info = 2;
  if (this->mem_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->mem_info());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgGetScoreReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bs_czl.MsgGetScoreReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgGetScoreReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgGetScoreReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bs_czl.MsgGetScoreReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bs_czl.MsgGetScoreReq)
    MergeFrom(*source);
  }
}

void MsgGetScoreReq::MergeFrom(const MsgGetScoreReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bs_czl.MsgGetScoreReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.key_id().size() > 0) {

    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
  if (from.mem_info().size() > 0) {

    mem_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mem_info_);
  }
}

void MsgGetScoreReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bs_czl.MsgGetScoreReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgGetScoreReq::CopyFrom(const MsgGetScoreReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bs_czl.MsgGetScoreReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgGetScoreReq::IsInitialized() const {
  return true;
}

void MsgGetScoreReq::Swap(MsgGetScoreReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgGetScoreReq::InternalSwap(MsgGetScoreReq* other) {
  key_id_.Swap(&other->key_id_);
  mem_info_.Swap(&other->mem_info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgGetScoreReq::GetMetadata() const {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgGetScoreReq

// bytes key_id = 1;
void MsgGetScoreReq::clear_key_id() {
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgGetScoreReq::key_id() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgGetScoreReq.key_id)
  return key_id_.GetNoArena();
}
void MsgGetScoreReq::set_key_id(const ::std::string& value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgGetScoreReq.key_id)
}
#if LANG_CXX11
void MsgGetScoreReq::set_key_id(::std::string&& value) {
  
  key_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgGetScoreReq.key_id)
}
#endif
void MsgGetScoreReq::set_key_id(const char* value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgGetScoreReq.key_id)
}
void MsgGetScoreReq::set_key_id(const void* value, size_t size) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgGetScoreReq.key_id)
}
::std::string* MsgGetScoreReq::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgGetScoreReq.key_id)
  return key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgGetScoreReq::release_key_id() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgGetScoreReq.key_id)
  
  return key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgGetScoreReq::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgGetScoreReq.key_id)
}

// bytes mem_info = 2;
void MsgGetScoreReq::clear_mem_info() {
  mem_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgGetScoreReq::mem_info() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgGetScoreReq.mem_info)
  return mem_info_.GetNoArena();
}
void MsgGetScoreReq::set_mem_info(const ::std::string& value) {
  
  mem_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgGetScoreReq.mem_info)
}
#if LANG_CXX11
void MsgGetScoreReq::set_mem_info(::std::string&& value) {
  
  mem_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgGetScoreReq.mem_info)
}
#endif
void MsgGetScoreReq::set_mem_info(const char* value) {
  
  mem_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgGetScoreReq.mem_info)
}
void MsgGetScoreReq::set_mem_info(const void* value, size_t size) {
  
  mem_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgGetScoreReq.mem_info)
}
::std::string* MsgGetScoreReq::mutable_mem_info() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgGetScoreReq.mem_info)
  return mem_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgGetScoreReq::release_mem_info() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgGetScoreReq.mem_info)
  
  return mem_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgGetScoreReq::set_allocated_mem_info(::std::string* mem_info) {
  if (mem_info != NULL) {
    
  } else {
    
  }
  mem_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mem_info);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgGetScoreReq.mem_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgGetScoreRsp::kRetFieldNumber;
const int MsgGetScoreRsp::kErrFieldNumber;
const int MsgGetScoreRsp::kMemDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgGetScoreRsp::MsgGetScoreRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bs_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bs_czl.MsgGetScoreRsp)
}
MsgGetScoreRsp::MsgGetScoreRsp(const MsgGetScoreRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.err().size() > 0) {
    err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
  }
  if (from.has_mem_data()) {
    mem_data_ = new ::bs_czl::MsgSetMemData(*from.mem_data_);
  } else {
    mem_data_ = NULL;
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:bs_czl.MsgGetScoreRsp)
}

void MsgGetScoreRsp::SharedCtor() {
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mem_data_, 0, reinterpret_cast<char*>(&ret_) -
    reinterpret_cast<char*>(&mem_data_) + sizeof(ret_));
  _cached_size_ = 0;
}

MsgGetScoreRsp::~MsgGetScoreRsp() {
  // @@protoc_insertion_point(destructor:bs_czl.MsgGetScoreRsp)
  SharedDtor();
}

void MsgGetScoreRsp::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete mem_data_;
  }
}

void MsgGetScoreRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgGetScoreRsp::descriptor() {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[8].descriptor;
}

const MsgGetScoreRsp& MsgGetScoreRsp::default_instance() {
  protobuf_bs_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgGetScoreRsp* MsgGetScoreRsp::New(::google::protobuf::Arena* arena) const {
  MsgGetScoreRsp* n = new MsgGetScoreRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgGetScoreRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:bs_czl.MsgGetScoreRsp)
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && mem_data_ != NULL) {
    delete mem_data_;
  }
  mem_data_ = NULL;
  ret_ = 0;
}

bool MsgGetScoreRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bs_czl.MsgGetScoreRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes err = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_err()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bs_czl.MsgSetMemData mem_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mem_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bs_czl.MsgGetScoreRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bs_czl.MsgGetScoreRsp)
  return false;
#undef DO_
}

void MsgGetScoreRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bs_czl.MsgGetScoreRsp)
  // int32 ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // bytes err = 2;
  if (this->err().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->err(), output);
  }

  // .bs_czl.MsgSetMemData mem_data = 3;
  if (this->has_mem_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->mem_data_, output);
  }

  // @@protoc_insertion_point(serialize_end:bs_czl.MsgGetScoreRsp)
}

::google::protobuf::uint8* MsgGetScoreRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bs_czl.MsgGetScoreRsp)
  // int32 ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // bytes err = 2;
  if (this->err().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->err(), target);
  }

  // .bs_czl.MsgSetMemData mem_data = 3;
  if (this->has_mem_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->mem_data_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bs_czl.MsgGetScoreRsp)
  return target;
}

size_t MsgGetScoreRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bs_czl.MsgGetScoreRsp)
  size_t total_size = 0;

  // bytes err = 2;
  if (this->err().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->err());
  }

  // .bs_czl.MsgSetMemData mem_data = 3;
  if (this->has_mem_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->mem_data_);
  }

  // int32 ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgGetScoreRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bs_czl.MsgGetScoreRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgGetScoreRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgGetScoreRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bs_czl.MsgGetScoreRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bs_czl.MsgGetScoreRsp)
    MergeFrom(*source);
  }
}

void MsgGetScoreRsp::MergeFrom(const MsgGetScoreRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bs_czl.MsgGetScoreRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.err().size() > 0) {

    err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
  }
  if (from.has_mem_data()) {
    mutable_mem_data()->::bs_czl::MsgSetMemData::MergeFrom(from.mem_data());
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void MsgGetScoreRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bs_czl.MsgGetScoreRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgGetScoreRsp::CopyFrom(const MsgGetScoreRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bs_czl.MsgGetScoreRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgGetScoreRsp::IsInitialized() const {
  return true;
}

void MsgGetScoreRsp::Swap(MsgGetScoreRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgGetScoreRsp::InternalSwap(MsgGetScoreRsp* other) {
  err_.Swap(&other->err_);
  std::swap(mem_data_, other->mem_data_);
  std::swap(ret_, other->ret_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgGetScoreRsp::GetMetadata() const {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgGetScoreRsp

// int32 ret = 1;
void MsgGetScoreRsp::clear_ret() {
  ret_ = 0;
}
::google::protobuf::int32 MsgGetScoreRsp::ret() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgGetScoreRsp.ret)
  return ret_;
}
void MsgGetScoreRsp::set_ret(::google::protobuf::int32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgGetScoreRsp.ret)
}

// bytes err = 2;
void MsgGetScoreRsp::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgGetScoreRsp::err() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgGetScoreRsp.err)
  return err_.GetNoArena();
}
void MsgGetScoreRsp::set_err(const ::std::string& value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgGetScoreRsp.err)
}
#if LANG_CXX11
void MsgGetScoreRsp::set_err(::std::string&& value) {
  
  err_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgGetScoreRsp.err)
}
#endif
void MsgGetScoreRsp::set_err(const char* value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgGetScoreRsp.err)
}
void MsgGetScoreRsp::set_err(const void* value, size_t size) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgGetScoreRsp.err)
}
::std::string* MsgGetScoreRsp::mutable_err() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgGetScoreRsp.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgGetScoreRsp::release_err() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgGetScoreRsp.err)
  
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgGetScoreRsp::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    
  } else {
    
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgGetScoreRsp.err)
}

// .bs_czl.MsgSetMemData mem_data = 3;
bool MsgGetScoreRsp::has_mem_data() const {
  return this != internal_default_instance() && mem_data_ != NULL;
}
void MsgGetScoreRsp::clear_mem_data() {
  if (GetArenaNoVirtual() == NULL && mem_data_ != NULL) delete mem_data_;
  mem_data_ = NULL;
}
const ::bs_czl::MsgSetMemData& MsgGetScoreRsp::mem_data() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgGetScoreRsp.mem_data)
  return mem_data_ != NULL ? *mem_data_
                         : *::bs_czl::MsgSetMemData::internal_default_instance();
}
::bs_czl::MsgSetMemData* MsgGetScoreRsp::mutable_mem_data() {
  
  if (mem_data_ == NULL) {
    mem_data_ = new ::bs_czl::MsgSetMemData;
  }
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgGetScoreRsp.mem_data)
  return mem_data_;
}
::bs_czl::MsgSetMemData* MsgGetScoreRsp::release_mem_data() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgGetScoreRsp.mem_data)
  
  ::bs_czl::MsgSetMemData* temp = mem_data_;
  mem_data_ = NULL;
  return temp;
}
void MsgGetScoreRsp::set_allocated_mem_data(::bs_czl::MsgSetMemData* mem_data) {
  delete mem_data_;
  mem_data_ = mem_data;
  if (mem_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgGetScoreRsp.mem_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgGetScoreBatchReq::kKeyIdFieldNumber;
const int MsgGetScoreBatchReq::kMemDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgGetScoreBatchReq::MsgGetScoreBatchReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bs_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bs_czl.MsgGetScoreBatchReq)
}
MsgGetScoreBatchReq::MsgGetScoreBatchReq(const MsgGetScoreBatchReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mem_data_list_(from.mem_data_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key_id().size() > 0) {
    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
  // @@protoc_insertion_point(copy_constructor:bs_czl.MsgGetScoreBatchReq)
}

void MsgGetScoreBatchReq::SharedCtor() {
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MsgGetScoreBatchReq::~MsgGetScoreBatchReq() {
  // @@protoc_insertion_point(destructor:bs_czl.MsgGetScoreBatchReq)
  SharedDtor();
}

void MsgGetScoreBatchReq::SharedDtor() {
  key_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgGetScoreBatchReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgGetScoreBatchReq::descriptor() {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[9].descriptor;
}

const MsgGetScoreBatchReq& MsgGetScoreBatchReq::default_instance() {
  protobuf_bs_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgGetScoreBatchReq* MsgGetScoreBatchReq::New(::google::protobuf::Arena* arena) const {
  MsgGetScoreBatchReq* n = new MsgGetScoreBatchReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgGetScoreBatchReq::Clear() {
// @@protoc_insertion_point(message_clear_start:bs_czl.MsgGetScoreBatchReq)
  mem_data_list_.Clear();
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MsgGetScoreBatchReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bs_czl.MsgGetScoreBatchReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes key_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes mem_data_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_mem_data_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bs_czl.MsgGetScoreBatchReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bs_czl.MsgGetScoreBatchReq)
  return false;
#undef DO_
}

void MsgGetScoreBatchReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bs_czl.MsgGetScoreBatchReq)
  // bytes key_id = 1;
  if (this->key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key_id(), output);
  }

  // repeated bytes mem_data_list = 2;
  for (int i = 0, n = this->mem_data_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->mem_data_list(i), output);
  }

  // @@protoc_insertion_point(serialize_end:bs_czl.MsgGetScoreBatchReq)
}

::google::protobuf::uint8* MsgGetScoreBatchReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bs_czl.MsgGetScoreBatchReq)
  // bytes key_id = 1;
  if (this->key_id().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key_id(), target);
  }

  // repeated bytes mem_data_list = 2;
  for (int i = 0, n = this->mem_data_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->mem_data_list(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bs_czl.MsgGetScoreBatchReq)
  return target;
}

size_t MsgGetScoreBatchReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bs_czl.MsgGetScoreBatchReq)
  size_t total_size = 0;

  // repeated bytes mem_data_list = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->mem_data_list_size());
  for (int i = 0, n = this->mem_data_list_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->mem_data_list(i));
  }

  // bytes key_id = 1;
  if (this->key_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgGetScoreBatchReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bs_czl.MsgGetScoreBatchReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgGetScoreBatchReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgGetScoreBatchReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bs_czl.MsgGetScoreBatchReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bs_czl.MsgGetScoreBatchReq)
    MergeFrom(*source);
  }
}

void MsgGetScoreBatchReq::MergeFrom(const MsgGetScoreBatchReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bs_czl.MsgGetScoreBatchReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mem_data_list_.MergeFrom(from.mem_data_list_);
  if (from.key_id().size() > 0) {

    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
}

void MsgGetScoreBatchReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bs_czl.MsgGetScoreBatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgGetScoreBatchReq::CopyFrom(const MsgGetScoreBatchReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bs_czl.MsgGetScoreBatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgGetScoreBatchReq::IsInitialized() const {
  return true;
}

void MsgGetScoreBatchReq::Swap(MsgGetScoreBatchReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgGetScoreBatchReq::InternalSwap(MsgGetScoreBatchReq* other) {
  mem_data_list_.UnsafeArenaSwap(&other->mem_data_list_);
  key_id_.Swap(&other->key_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgGetScoreBatchReq::GetMetadata() const {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgGetScoreBatchReq

// bytes key_id = 1;
void MsgGetScoreBatchReq::clear_key_id() {
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgGetScoreBatchReq::key_id() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgGetScoreBatchReq.key_id)
  return key_id_.GetNoArena();
}
void MsgGetScoreBatchReq::set_key_id(const ::std::string& value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgGetScoreBatchReq.key_id)
}
#if LANG_CXX11
void MsgGetScoreBatchReq::set_key_id(::std::string&& value) {
  
  key_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgGetScoreBatchReq.key_id)
}
#endif
void MsgGetScoreBatchReq::set_key_id(const char* value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgGetScoreBatchReq.key_id)
}
void MsgGetScoreBatchReq::set_key_id(const void* value, size_t size) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgGetScoreBatchReq.key_id)
}
::std::string* MsgGetScoreBatchReq::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgGetScoreBatchReq.key_id)
  return key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgGetScoreBatchReq::release_key_id() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgGetScoreBatchReq.key_id)
  
  return key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgGetScoreBatchReq::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgGetScoreBatchReq.key_id)
}

// repeated bytes mem_data_list = 2;
int MsgGetScoreBatchReq::mem_data_list_size() const {
  return mem_data_list_.size();
}
void MsgGetScoreBatchReq::clear_mem_data_list() {
  mem_data_list_.Clear();
}
const ::std::string& MsgGetScoreBatchReq::mem_data_list(int index) const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgGetScoreBatchReq.mem_data_list)
  return mem_data_list_.Get(index);
}
::std::string* MsgGetScoreBatchReq::mutable_mem_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgGetScoreBatchReq.mem_data_list)
  return mem_data_list_.Mutable(index);
}
void MsgGetScoreBatchReq::set_mem_data_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:bs_czl.MsgGetScoreBatchReq.mem_data_list)
  mem_data_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void MsgGetScoreBatchReq::set_mem_data_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:bs_czl.MsgGetScoreBatchReq.mem_data_list)
  mem_data_list_.Mutable(index)->assign(std::move(value));
}
#endif
void MsgGetScoreBatchReq::set_mem_data_list(int index, const char* value) {
  mem_data_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgGetScoreBatchReq.mem_data_list)
}
void MsgGetScoreBatchReq::set_mem_data_list(int index, const void* value, size_t size) {
  mem_data_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgGetScoreBatchReq.mem_data_list)
}
::std::string* MsgGetScoreBatchReq::add_mem_data_list() {
  // @@protoc_insertion_point(field_add_mutable:bs_czl.MsgGetScoreBatchReq.mem_data_list)
  return mem_data_list_.Add();
}
void MsgGetScoreBatchReq::add_mem_data_list(const ::std::string& value) {
  mem_data_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:bs_czl.MsgGetScoreBatchReq.mem_data_list)
}
#if LANG_CXX11
void MsgGetScoreBatchReq::add_mem_data_list(::std::string&& value) {
  mem_data_list_.Add()->assign(std::move(value));
  // @@protoc_insertion_point(field_add:bs_czl.MsgGetScoreBatchReq.mem_data_list)
}
#endif
void MsgGetScoreBatchReq::add_mem_data_list(const char* value) {
  mem_data_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:bs_czl.MsgGetScoreBatchReq.mem_data_list)
}
void MsgGetScoreBatchReq::add_mem_data_list(const void* value, size_t size) {
  mem_data_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:bs_czl.MsgGetScoreBatchReq.mem_data_list)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
MsgGetScoreBatchReq::mem_data_list() const {
  // @@protoc_insertion_point(field_list:bs_czl.MsgGetScoreBatchReq.mem_data_list)
  return mem_data_list_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
MsgGetScoreBatchReq::mutable_mem_data_list() {
  // @@protoc_insertion_point(field_mutable_list:bs_czl.MsgGetScoreBatchReq.mem_data_list)
  return &mem_data_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgGetScoreBatchRsp::kRetFieldNumber;
const int MsgGetScoreBatchRsp::kErrFieldNumber;
const int MsgGetScoreBatchRsp::kMemDataListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgGetScoreBatchRsp::MsgGetScoreBatchRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bs_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bs_czl.MsgGetScoreBatchRsp)
}
MsgGetScoreBatchRsp::MsgGetScoreBatchRsp(const MsgGetScoreBatchRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mem_data_list_(from.mem_data_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.err().size() > 0) {
    err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:bs_czl.MsgGetScoreBatchRsp)
}

void MsgGetScoreBatchRsp::SharedCtor() {
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

MsgGetScoreBatchRsp::~MsgGetScoreBatchRsp() {
  // @@protoc_insertion_point(destructor:bs_czl.MsgGetScoreBatchRsp)
  SharedDtor();
}

void MsgGetScoreBatchRsp::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgGetScoreBatchRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgGetScoreBatchRsp::descriptor() {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[10].descriptor;
}

const MsgGetScoreBatchRsp& MsgGetScoreBatchRsp::default_instance() {
  protobuf_bs_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgGetScoreBatchRsp* MsgGetScoreBatchRsp::New(::google::protobuf::Arena* arena) const {
  MsgGetScoreBatchRsp* n = new MsgGetScoreBatchRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgGetScoreBatchRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:bs_czl.MsgGetScoreBatchRsp)
  mem_data_list_.Clear();
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
}

bool MsgGetScoreBatchRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bs_czl.MsgGetScoreBatchRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes err = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_err()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bs_czl.MsgSetMemData mem_data_list = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_mem_data_list()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bs_czl.MsgGetScoreBatchRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bs_czl.MsgGetScoreBatchRsp)
  return false;
#undef DO_
}

void MsgGetScoreBatchRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bs_czl.MsgGetScoreBatchRsp)
  // int32 ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // bytes err = 2;
  if (this->err().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->err(), output);
  }

  // repeated .bs_czl.MsgSetMemData mem_data_list = 3;
  for (unsigned int i = 0, n = this->mem_data_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->mem_data_list(i), output);
  }

  // @@protoc_insertion_point(serialize_end:bs_czl.MsgGetScoreBatchRsp)
}

::google::protobuf::uint8* MsgGetScoreBatchRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bs_czl.MsgGetScoreBatchRsp)
  // int32 ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // bytes err = 2;
  if (this->err().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->err(), target);
  }

  // repeated .bs_czl.MsgSetMemData mem_data_list = 3;
  for (unsigned int i = 0, n = this->mem_data_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->mem_data_list(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bs_czl.MsgGetScoreBatchRsp)
  return target;
}

size_t MsgGetScoreBatchRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bs_czl.MsgGetScoreBatchRsp)
  size_t total_size = 0;

  // repeated .bs_czl.MsgSetMemData mem_data_list = 3;
  {
    unsigned int count = this->mem_data_list_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->mem_data_list(i));
    }
  }

  // bytes err = 2;
  if (this->err().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->err());
  }

  // int32 ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgGetScoreBatchRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bs_czl.MsgGetScoreBatchRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgGetScoreBatchRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgGetScoreBatchRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bs_czl.MsgGetScoreBatchRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bs_czl.MsgGetScoreBatchRsp)
    MergeFrom(*source);
  }
}

void MsgGetScoreBatchRsp::MergeFrom(const MsgGetScoreBatchRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bs_czl.MsgGetScoreBatchRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mem_data_list_.MergeFrom(from.mem_data_list_);
  if (from.err().size() > 0) {

    err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void MsgGetScoreBatchRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bs_czl.MsgGetScoreBatchRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgGetScoreBatchRsp::CopyFrom(const MsgGetScoreBatchRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bs_czl.MsgGetScoreBatchRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgGetScoreBatchRsp::IsInitialized() const {
  return true;
}

void MsgGetScoreBatchRsp::Swap(MsgGetScoreBatchRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgGetScoreBatchRsp::InternalSwap(MsgGetScoreBatchRsp* other) {
  mem_data_list_.UnsafeArenaSwap(&other->mem_data_list_);
  err_.Swap(&other->err_);
  std::swap(ret_, other->ret_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgGetScoreBatchRsp::GetMetadata() const {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[10];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgGetScoreBatchRsp

// int32 ret = 1;
void MsgGetScoreBatchRsp::clear_ret() {
  ret_ = 0;
}
::google::protobuf::int32 MsgGetScoreBatchRsp::ret() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgGetScoreBatchRsp.ret)
  return ret_;
}
void MsgGetScoreBatchRsp::set_ret(::google::protobuf::int32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgGetScoreBatchRsp.ret)
}

// bytes err = 2;
void MsgGetScoreBatchRsp::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgGetScoreBatchRsp::err() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgGetScoreBatchRsp.err)
  return err_.GetNoArena();
}
void MsgGetScoreBatchRsp::set_err(const ::std::string& value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgGetScoreBatchRsp.err)
}
#if LANG_CXX11
void MsgGetScoreBatchRsp::set_err(::std::string&& value) {
  
  err_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgGetScoreBatchRsp.err)
}
#endif
void MsgGetScoreBatchRsp::set_err(const char* value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgGetScoreBatchRsp.err)
}
void MsgGetScoreBatchRsp::set_err(const void* value, size_t size) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgGetScoreBatchRsp.err)
}
::std::string* MsgGetScoreBatchRsp::mutable_err() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgGetScoreBatchRsp.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgGetScoreBatchRsp::release_err() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgGetScoreBatchRsp.err)
  
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgGetScoreBatchRsp::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    
  } else {
    
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgGetScoreBatchRsp.err)
}

// repeated .bs_czl.MsgSetMemData mem_data_list = 3;
int MsgGetScoreBatchRsp::mem_data_list_size() const {
  return mem_data_list_.size();
}
void MsgGetScoreBatchRsp::clear_mem_data_list() {
  mem_data_list_.Clear();
}
const ::bs_czl::MsgSetMemData& MsgGetScoreBatchRsp::mem_data_list(int index) const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgGetScoreBatchRsp.mem_data_list)
  return mem_data_list_.Get(index);
}
::bs_czl::MsgSetMemData* MsgGetScoreBatchRsp::mutable_mem_data_list(int index) {
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgGetScoreBatchRsp.mem_data_list)
  return mem_data_list_.Mutable(index);
}
::bs_czl::MsgSetMemData* MsgGetScoreBatchRsp::add_mem_data_list() {
  // @@protoc_insertion_point(field_add:bs_czl.MsgGetScoreBatchRsp.mem_data_list)
  return mem_data_list_.Add();
}
::google::protobuf::RepeatedPtrField< ::bs_czl::MsgSetMemData >*
MsgGetScoreBatchRsp::mutable_mem_data_list() {
  // @@protoc_insertion_point(field_mutable_list:bs_czl.MsgGetScoreBatchRsp.mem_data_list)
  return &mem_data_list_;
}
const ::google::protobuf::RepeatedPtrField< ::bs_czl::MsgSetMemData >&
MsgGetScoreBatchRsp::mem_data_list() const {
  // @@protoc_insertion_point(field_list:bs_czl.MsgGetScoreBatchRsp.mem_data_list)
  return mem_data_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgRankInfo::kRankFieldNumber;
const int MsgRankInfo::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgRankInfo::MsgRankInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bs_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bs_czl.MsgRankInfo)
}
MsgRankInfo::MsgRankInfo(const MsgRankInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::bs_czl::MsgSetMemData(*from.data_);
  } else {
    data_ = NULL;
  }
  rank_ = from.rank_;
  // @@protoc_insertion_point(copy_constructor:bs_czl.MsgRankInfo)
}

void MsgRankInfo::SharedCtor() {
  ::memset(&data_, 0, reinterpret_cast<char*>(&rank_) -
    reinterpret_cast<char*>(&data_) + sizeof(rank_));
  _cached_size_ = 0;
}

MsgRankInfo::~MsgRankInfo() {
  // @@protoc_insertion_point(destructor:bs_czl.MsgRankInfo)
  SharedDtor();
}

void MsgRankInfo::SharedDtor() {
  if (this != internal_default_instance()) {
    delete data_;
  }
}

void MsgRankInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgRankInfo::descriptor() {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[11].descriptor;
}

const MsgRankInfo& MsgRankInfo::default_instance() {
  protobuf_bs_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgRankInfo* MsgRankInfo::New(::google::protobuf::Arena* arena) const {
  MsgRankInfo* n = new MsgRankInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgRankInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:bs_czl.MsgRankInfo)
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  rank_ = GOOGLE_ULONGLONG(0);
}

bool MsgRankInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bs_czl.MsgRankInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 rank = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bs_czl.MsgSetMemData data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bs_czl.MsgRankInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bs_czl.MsgRankInfo)
  return false;
#undef DO_
}

void MsgRankInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bs_czl.MsgRankInfo)
  // uint64 rank = 1;
  if (this->rank() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->rank(), output);
  }

  // .bs_czl.MsgSetMemData data = 2;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->data_, output);
  }

  // @@protoc_insertion_point(serialize_end:bs_czl.MsgRankInfo)
}

::google::protobuf::uint8* MsgRankInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bs_czl.MsgRankInfo)
  // uint64 rank = 1;
  if (this->rank() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->rank(), target);
  }

  // .bs_czl.MsgSetMemData data = 2;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->data_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bs_czl.MsgRankInfo)
  return target;
}

size_t MsgRankInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bs_czl.MsgRankInfo)
  size_t total_size = 0;

  // .bs_czl.MsgSetMemData data = 2;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  // uint64 rank = 1;
  if (this->rank() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->rank());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgRankInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bs_czl.MsgRankInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgRankInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgRankInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bs_czl.MsgRankInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bs_czl.MsgRankInfo)
    MergeFrom(*source);
  }
}

void MsgRankInfo::MergeFrom(const MsgRankInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bs_czl.MsgRankInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    mutable_data()->::bs_czl::MsgSetMemData::MergeFrom(from.data());
  }
  if (from.rank() != 0) {
    set_rank(from.rank());
  }
}

void MsgRankInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bs_czl.MsgRankInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgRankInfo::CopyFrom(const MsgRankInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bs_czl.MsgRankInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRankInfo::IsInitialized() const {
  return true;
}

void MsgRankInfo::Swap(MsgRankInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgRankInfo::InternalSwap(MsgRankInfo* other) {
  std::swap(data_, other->data_);
  std::swap(rank_, other->rank_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgRankInfo::GetMetadata() const {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[11];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgRankInfo

// uint64 rank = 1;
void MsgRankInfo::clear_rank() {
  rank_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 MsgRankInfo::rank() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRankInfo.rank)
  return rank_;
}
void MsgRankInfo::set_rank(::google::protobuf::uint64 value) {
  
  rank_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgRankInfo.rank)
}

// .bs_czl.MsgSetMemData data = 2;
bool MsgRankInfo::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
void MsgRankInfo::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
const ::bs_czl::MsgSetMemData& MsgRankInfo::data() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRankInfo.data)
  return data_ != NULL ? *data_
                         : *::bs_czl::MsgSetMemData::internal_default_instance();
}
::bs_czl::MsgSetMemData* MsgRankInfo::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::bs_czl::MsgSetMemData;
  }
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRankInfo.data)
  return data_;
}
::bs_czl::MsgSetMemData* MsgRankInfo::release_data() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgRankInfo.data)
  
  ::bs_czl::MsgSetMemData* temp = data_;
  data_ = NULL;
  return temp;
}
void MsgRankInfo::set_allocated_data(::bs_czl::MsgSetMemData* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgRankInfo.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgRankQueryReq::kKeyIdFieldNumber;
const int MsgRankQueryReq::kMemInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgRankQueryReq::MsgRankQueryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bs_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bs_czl.MsgRankQueryReq)
}
MsgRankQueryReq::MsgRankQueryReq(const MsgRankQueryReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key_id().size() > 0) {
    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
  mem_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mem_info().size() > 0) {
    mem_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mem_info_);
  }
  // @@protoc_insertion_point(copy_constructor:bs_czl.MsgRankQueryReq)
}

void MsgRankQueryReq::SharedCtor() {
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mem_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MsgRankQueryReq::~MsgRankQueryReq() {
  // @@protoc_insertion_point(destructor:bs_czl.MsgRankQueryReq)
  SharedDtor();
}

void MsgRankQueryReq::SharedDtor() {
  key_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mem_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgRankQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgRankQueryReq::descriptor() {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[12].descriptor;
}

const MsgRankQueryReq& MsgRankQueryReq::default_instance() {
  protobuf_bs_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgRankQueryReq* MsgRankQueryReq::New(::google::protobuf::Arena* arena) const {
  MsgRankQueryReq* n = new MsgRankQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgRankQueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:bs_czl.MsgRankQueryReq)
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mem_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MsgRankQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bs_czl.MsgRankQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes key_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes mem_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mem_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bs_czl.MsgRankQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bs_czl.MsgRankQueryReq)
  return false;
#undef DO_
}

void MsgRankQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bs_czl.MsgRankQueryReq)
  // bytes key_id = 1;
  if (this->key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key_id(), output);
  }

  // bytes mem_info = 2;
  if (this->mem_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->mem_info(), output);
  }

  // @@protoc_insertion_point(serialize_end:bs_czl.MsgRankQueryReq)
}

::google::protobuf::uint8* MsgRankQueryReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bs_czl.MsgRankQueryReq)
  // bytes key_id = 1;
  if (this->key_id().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key_id(), target);
  }

  // bytes mem_info = 2;
  if (this->mem_info().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->mem_info(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bs_czl.MsgRankQueryReq)
  return target;
}

size_t MsgRankQueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bs_czl.MsgRankQueryReq)
  size_t total_size = 0;

  // bytes key_id = 1;
  if (this->key_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key_id());
  }

  // bytes mem_info = 2;
  if (this->mem_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->mem_info());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgRankQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bs_czl.MsgRankQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgRankQueryReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgRankQueryReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bs_czl.MsgRankQueryReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bs_czl.MsgRankQueryReq)
    MergeFrom(*source);
  }
}

void MsgRankQueryReq::MergeFrom(const MsgRankQueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bs_czl.MsgRankQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.key_id().size() > 0) {

    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
  if (from.mem_info().size() > 0) {

    mem_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mem_info_);
  }
}

void MsgRankQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bs_czl.MsgRankQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgRankQueryReq::CopyFrom(const MsgRankQueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bs_czl.MsgRankQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRankQueryReq::IsInitialized() const {
  return true;
}

void MsgRankQueryReq::Swap(MsgRankQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgRankQueryReq::InternalSwap(MsgRankQueryReq* other) {
  key_id_.Swap(&other->key_id_);
  mem_info_.Swap(&other->mem_info_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgRankQueryReq::GetMetadata() const {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[12];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgRankQueryReq

// bytes key_id = 1;
void MsgRankQueryReq::clear_key_id() {
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgRankQueryReq::key_id() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRankQueryReq.key_id)
  return key_id_.GetNoArena();
}
void MsgRankQueryReq::set_key_id(const ::std::string& value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgRankQueryReq.key_id)
}
#if LANG_CXX11
void MsgRankQueryReq::set_key_id(::std::string&& value) {
  
  key_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgRankQueryReq.key_id)
}
#endif
void MsgRankQueryReq::set_key_id(const char* value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgRankQueryReq.key_id)
}
void MsgRankQueryReq::set_key_id(const void* value, size_t size) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgRankQueryReq.key_id)
}
::std::string* MsgRankQueryReq::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRankQueryReq.key_id)
  return key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgRankQueryReq::release_key_id() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgRankQueryReq.key_id)
  
  return key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgRankQueryReq::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgRankQueryReq.key_id)
}

// bytes mem_info = 2;
void MsgRankQueryReq::clear_mem_info() {
  mem_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgRankQueryReq::mem_info() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRankQueryReq.mem_info)
  return mem_info_.GetNoArena();
}
void MsgRankQueryReq::set_mem_info(const ::std::string& value) {
  
  mem_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgRankQueryReq.mem_info)
}
#if LANG_CXX11
void MsgRankQueryReq::set_mem_info(::std::string&& value) {
  
  mem_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgRankQueryReq.mem_info)
}
#endif
void MsgRankQueryReq::set_mem_info(const char* value) {
  
  mem_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgRankQueryReq.mem_info)
}
void MsgRankQueryReq::set_mem_info(const void* value, size_t size) {
  
  mem_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgRankQueryReq.mem_info)
}
::std::string* MsgRankQueryReq::mutable_mem_info() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRankQueryReq.mem_info)
  return mem_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgRankQueryReq::release_mem_info() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgRankQueryReq.mem_info)
  
  return mem_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgRankQueryReq::set_allocated_mem_info(::std::string* mem_info) {
  if (mem_info != NULL) {
    
  } else {
    
  }
  mem_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mem_info);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgRankQueryReq.mem_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgRankQueryRsp::kRetFieldNumber;
const int MsgRankQueryRsp::kErrFieldNumber;
const int MsgRankQueryRsp::kRankInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgRankQueryRsp::MsgRankQueryRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bs_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bs_czl.MsgRankQueryRsp)
}
MsgRankQueryRsp::MsgRankQueryRsp(const MsgRankQueryRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.err().size() > 0) {
    err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
  }
  if (from.has_rank_info()) {
    rank_info_ = new ::bs_czl::MsgRankInfo(*from.rank_info_);
  } else {
    rank_info_ = NULL;
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:bs_czl.MsgRankQueryRsp)
}

void MsgRankQueryRsp::SharedCtor() {
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rank_info_, 0, reinterpret_cast<char*>(&ret_) -
    reinterpret_cast<char*>(&rank_info_) + sizeof(ret_));
  _cached_size_ = 0;
}

MsgRankQueryRsp::~MsgRankQueryRsp() {
  // @@protoc_insertion_point(destructor:bs_czl.MsgRankQueryRsp)
  SharedDtor();
}

void MsgRankQueryRsp::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete rank_info_;
  }
}

void MsgRankQueryRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgRankQueryRsp::descriptor() {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[13].descriptor;
}

const MsgRankQueryRsp& MsgRankQueryRsp::default_instance() {
  protobuf_bs_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgRankQueryRsp* MsgRankQueryRsp::New(::google::protobuf::Arena* arena) const {
  MsgRankQueryRsp* n = new MsgRankQueryRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgRankQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:bs_czl.MsgRankQueryRsp)
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && rank_info_ != NULL) {
    delete rank_info_;
  }
  rank_info_ = NULL;
  ret_ = 0;
}

bool MsgRankQueryRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bs_czl.MsgRankQueryRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes err = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_err()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bs_czl.MsgRankInfo rank_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rank_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bs_czl.MsgRankQueryRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bs_czl.MsgRankQueryRsp)
  return false;
#undef DO_
}

void MsgRankQueryRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bs_czl.MsgRankQueryRsp)
  // int32 ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // bytes err = 2;
  if (this->err().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->err(), output);
  }

  // .bs_czl.MsgRankInfo rank_info = 3;
  if (this->has_rank_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->rank_info_, output);
  }

  // @@protoc_insertion_point(serialize_end:bs_czl.MsgRankQueryRsp)
}

::google::protobuf::uint8* MsgRankQueryRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bs_czl.MsgRankQueryRsp)
  // int32 ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // bytes err = 2;
  if (this->err().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->err(), target);
  }

  // .bs_czl.MsgRankInfo rank_info = 3;
  if (this->has_rank_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->rank_info_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bs_czl.MsgRankQueryRsp)
  return target;
}

size_t MsgRankQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bs_czl.MsgRankQueryRsp)
  size_t total_size = 0;

  // bytes err = 2;
  if (this->err().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->err());
  }

  // .bs_czl.MsgRankInfo rank_info = 3;
  if (this->has_rank_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->rank_info_);
  }

  // int32 ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgRankQueryRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bs_czl.MsgRankQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgRankQueryRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgRankQueryRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bs_czl.MsgRankQueryRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bs_czl.MsgRankQueryRsp)
    MergeFrom(*source);
  }
}

void MsgRankQueryRsp::MergeFrom(const MsgRankQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bs_czl.MsgRankQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.err().size() > 0) {

    err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
  }
  if (from.has_rank_info()) {
    mutable_rank_info()->::bs_czl::MsgRankInfo::MergeFrom(from.rank_info());
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void MsgRankQueryRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bs_czl.MsgRankQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgRankQueryRsp::CopyFrom(const MsgRankQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bs_czl.MsgRankQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRankQueryRsp::IsInitialized() const {
  return true;
}

void MsgRankQueryRsp::Swap(MsgRankQueryRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgRankQueryRsp::InternalSwap(MsgRankQueryRsp* other) {
  err_.Swap(&other->err_);
  std::swap(rank_info_, other->rank_info_);
  std::swap(ret_, other->ret_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgRankQueryRsp::GetMetadata() const {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[13];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgRankQueryRsp

// int32 ret = 1;
void MsgRankQueryRsp::clear_ret() {
  ret_ = 0;
}
::google::protobuf::int32 MsgRankQueryRsp::ret() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRankQueryRsp.ret)
  return ret_;
}
void MsgRankQueryRsp::set_ret(::google::protobuf::int32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgRankQueryRsp.ret)
}

// bytes err = 2;
void MsgRankQueryRsp::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgRankQueryRsp::err() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRankQueryRsp.err)
  return err_.GetNoArena();
}
void MsgRankQueryRsp::set_err(const ::std::string& value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgRankQueryRsp.err)
}
#if LANG_CXX11
void MsgRankQueryRsp::set_err(::std::string&& value) {
  
  err_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgRankQueryRsp.err)
}
#endif
void MsgRankQueryRsp::set_err(const char* value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgRankQueryRsp.err)
}
void MsgRankQueryRsp::set_err(const void* value, size_t size) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgRankQueryRsp.err)
}
::std::string* MsgRankQueryRsp::mutable_err() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRankQueryRsp.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgRankQueryRsp::release_err() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgRankQueryRsp.err)
  
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgRankQueryRsp::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    
  } else {
    
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgRankQueryRsp.err)
}

// .bs_czl.MsgRankInfo rank_info = 3;
bool MsgRankQueryRsp::has_rank_info() const {
  return this != internal_default_instance() && rank_info_ != NULL;
}
void MsgRankQueryRsp::clear_rank_info() {
  if (GetArenaNoVirtual() == NULL && rank_info_ != NULL) delete rank_info_;
  rank_info_ = NULL;
}
const ::bs_czl::MsgRankInfo& MsgRankQueryRsp::rank_info() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRankQueryRsp.rank_info)
  return rank_info_ != NULL ? *rank_info_
                         : *::bs_czl::MsgRankInfo::internal_default_instance();
}
::bs_czl::MsgRankInfo* MsgRankQueryRsp::mutable_rank_info() {
  
  if (rank_info_ == NULL) {
    rank_info_ = new ::bs_czl::MsgRankInfo;
  }
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRankQueryRsp.rank_info)
  return rank_info_;
}
::bs_czl::MsgRankInfo* MsgRankQueryRsp::release_rank_info() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgRankQueryRsp.rank_info)
  
  ::bs_czl::MsgRankInfo* temp = rank_info_;
  rank_info_ = NULL;
  return temp;
}
void MsgRankQueryRsp::set_allocated_rank_info(::bs_czl::MsgRankInfo* rank_info) {
  delete rank_info_;
  rank_info_ = rank_info;
  if (rank_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgRankQueryRsp.rank_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgRankBatchQueryReq::kKeyIdFieldNumber;
const int MsgRankBatchQueryReq::kMemInfoListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgRankBatchQueryReq::MsgRankBatchQueryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bs_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bs_czl.MsgRankBatchQueryReq)
}
MsgRankBatchQueryReq::MsgRankBatchQueryReq(const MsgRankBatchQueryReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mem_info_list_(from.mem_info_list_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key_id().size() > 0) {
    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
  // @@protoc_insertion_point(copy_constructor:bs_czl.MsgRankBatchQueryReq)
}

void MsgRankBatchQueryReq::SharedCtor() {
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MsgRankBatchQueryReq::~MsgRankBatchQueryReq() {
  // @@protoc_insertion_point(destructor:bs_czl.MsgRankBatchQueryReq)
  SharedDtor();
}

void MsgRankBatchQueryReq::SharedDtor() {
  key_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgRankBatchQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgRankBatchQueryReq::descriptor() {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[14].descriptor;
}

const MsgRankBatchQueryReq& MsgRankBatchQueryReq::default_instance() {
  protobuf_bs_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgRankBatchQueryReq* MsgRankBatchQueryReq::New(::google::protobuf::Arena* arena) const {
  MsgRankBatchQueryReq* n = new MsgRankBatchQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgRankBatchQueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:bs_czl.MsgRankBatchQueryReq)
  mem_info_list_.Clear();
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MsgRankBatchQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bs_czl.MsgRankBatchQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes key_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes mem_info_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_mem_info_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bs_czl.MsgRankBatchQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bs_czl.MsgRankBatchQueryReq)
  return false;
#undef DO_
}

void MsgRankBatchQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bs_czl.MsgRankBatchQueryReq)
  // bytes key_id = 1;
  if (this->key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key_id(), output);
  }

  // repeated bytes mem_info_list = 2;
  for (int i = 0, n = this->mem_info_list_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->mem_info_list(i), output);
  }

  // @@protoc_insertion_point(serialize_end:bs_czl.MsgRankBatchQueryReq)
}

::google::protobuf::uint8* MsgRankBatchQueryReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bs_czl.MsgRankBatchQueryReq)
  // bytes key_id = 1;
  if (this->key_id().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key_id(), target);
  }

  // repeated bytes mem_info_list = 2;
  for (int i = 0, n = this->mem_info_list_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->mem_info_list(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bs_czl.MsgRankBatchQueryReq)
  return target;
}

size_t MsgRankBatchQueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bs_czl.MsgRankBatchQueryReq)
  size_t total_size = 0;

  // repeated bytes mem_info_list = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->mem_info_list_size());
  for (int i = 0, n = this->mem_info_list_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->mem_info_list(i));
  }

  // bytes key_id = 1;
  if (this->key_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgRankBatchQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bs_czl.MsgRankBatchQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgRankBatchQueryReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgRankBatchQueryReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bs_czl.MsgRankBatchQueryReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bs_czl.MsgRankBatchQueryReq)
    MergeFrom(*source);
  }
}

void MsgRankBatchQueryReq::MergeFrom(const MsgRankBatchQueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bs_czl.MsgRankBatchQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mem_info_list_.MergeFrom(from.mem_info_list_);
  if (from.key_id().size() > 0) {

    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
}

void MsgRankBatchQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bs_czl.MsgRankBatchQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgRankBatchQueryReq::CopyFrom(const MsgRankBatchQueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bs_czl.MsgRankBatchQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRankBatchQueryReq::IsInitialized() const {
  return true;
}

void MsgRankBatchQueryReq::Swap(MsgRankBatchQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgRankBatchQueryReq::InternalSwap(MsgRankBatchQueryReq* other) {
  mem_info_list_.UnsafeArenaSwap(&other->mem_info_list_);
  key_id_.Swap(&other->key_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgRankBatchQueryReq::GetMetadata() const {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[14];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgRankBatchQueryReq

// bytes key_id = 1;
void MsgRankBatchQueryReq::clear_key_id() {
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgRankBatchQueryReq::key_id() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRankBatchQueryReq.key_id)
  return key_id_.GetNoArena();
}
void MsgRankBatchQueryReq::set_key_id(const ::std::string& value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgRankBatchQueryReq.key_id)
}
#if LANG_CXX11
void MsgRankBatchQueryReq::set_key_id(::std::string&& value) {
  
  key_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgRankBatchQueryReq.key_id)
}
#endif
void MsgRankBatchQueryReq::set_key_id(const char* value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgRankBatchQueryReq.key_id)
}
void MsgRankBatchQueryReq::set_key_id(const void* value, size_t size) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgRankBatchQueryReq.key_id)
}
::std::string* MsgRankBatchQueryReq::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRankBatchQueryReq.key_id)
  return key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgRankBatchQueryReq::release_key_id() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgRankBatchQueryReq.key_id)
  
  return key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgRankBatchQueryReq::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgRankBatchQueryReq.key_id)
}

// repeated bytes mem_info_list = 2;
int MsgRankBatchQueryReq::mem_info_list_size() const {
  return mem_info_list_.size();
}
void MsgRankBatchQueryReq::clear_mem_info_list() {
  mem_info_list_.Clear();
}
const ::std::string& MsgRankBatchQueryReq::mem_info_list(int index) const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRankBatchQueryReq.mem_info_list)
  return mem_info_list_.Get(index);
}
::std::string* MsgRankBatchQueryReq::mutable_mem_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRankBatchQueryReq.mem_info_list)
  return mem_info_list_.Mutable(index);
}
void MsgRankBatchQueryReq::set_mem_info_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:bs_czl.MsgRankBatchQueryReq.mem_info_list)
  mem_info_list_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void MsgRankBatchQueryReq::set_mem_info_list(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:bs_czl.MsgRankBatchQueryReq.mem_info_list)
  mem_info_list_.Mutable(index)->assign(std::move(value));
}
#endif
void MsgRankBatchQueryReq::set_mem_info_list(int index, const char* value) {
  mem_info_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgRankBatchQueryReq.mem_info_list)
}
void MsgRankBatchQueryReq::set_mem_info_list(int index, const void* value, size_t size) {
  mem_info_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgRankBatchQueryReq.mem_info_list)
}
::std::string* MsgRankBatchQueryReq::add_mem_info_list() {
  // @@protoc_insertion_point(field_add_mutable:bs_czl.MsgRankBatchQueryReq.mem_info_list)
  return mem_info_list_.Add();
}
void MsgRankBatchQueryReq::add_mem_info_list(const ::std::string& value) {
  mem_info_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:bs_czl.MsgRankBatchQueryReq.mem_info_list)
}
#if LANG_CXX11
void MsgRankBatchQueryReq::add_mem_info_list(::std::string&& value) {
  mem_info_list_.Add()->assign(std::move(value));
  // @@protoc_insertion_point(field_add:bs_czl.MsgRankBatchQueryReq.mem_info_list)
}
#endif
void MsgRankBatchQueryReq::add_mem_info_list(const char* value) {
  mem_info_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:bs_czl.MsgRankBatchQueryReq.mem_info_list)
}
void MsgRankBatchQueryReq::add_mem_info_list(const void* value, size_t size) {
  mem_info_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:bs_czl.MsgRankBatchQueryReq.mem_info_list)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
MsgRankBatchQueryReq::mem_info_list() const {
  // @@protoc_insertion_point(field_list:bs_czl.MsgRankBatchQueryReq.mem_info_list)
  return mem_info_list_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
MsgRankBatchQueryReq::mutable_mem_info_list() {
  // @@protoc_insertion_point(field_mutable_list:bs_czl.MsgRankBatchQueryReq.mem_info_list)
  return &mem_info_list_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgRankBatchQueryRsp::kRetFieldNumber;
const int MsgRankBatchQueryRsp::kErrFieldNumber;
const int MsgRankBatchQueryRsp::kRankInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgRankBatchQueryRsp::MsgRankBatchQueryRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bs_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bs_czl.MsgRankBatchQueryRsp)
}
MsgRankBatchQueryRsp::MsgRankBatchQueryRsp(const MsgRankBatchQueryRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rank_info_(from.rank_info_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.err().size() > 0) {
    err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:bs_czl.MsgRankBatchQueryRsp)
}

void MsgRankBatchQueryRsp::SharedCtor() {
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

MsgRankBatchQueryRsp::~MsgRankBatchQueryRsp() {
  // @@protoc_insertion_point(destructor:bs_czl.MsgRankBatchQueryRsp)
  SharedDtor();
}

void MsgRankBatchQueryRsp::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgRankBatchQueryRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgRankBatchQueryRsp::descriptor() {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[15].descriptor;
}

const MsgRankBatchQueryRsp& MsgRankBatchQueryRsp::default_instance() {
  protobuf_bs_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgRankBatchQueryRsp* MsgRankBatchQueryRsp::New(::google::protobuf::Arena* arena) const {
  MsgRankBatchQueryRsp* n = new MsgRankBatchQueryRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgRankBatchQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:bs_czl.MsgRankBatchQueryRsp)
  rank_info_.Clear();
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
}

bool MsgRankBatchQueryRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bs_czl.MsgRankBatchQueryRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes err = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_err()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bs_czl.MsgRankInfo rank_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_rank_info()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bs_czl.MsgRankBatchQueryRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bs_czl.MsgRankBatchQueryRsp)
  return false;
#undef DO_
}

void MsgRankBatchQueryRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bs_czl.MsgRankBatchQueryRsp)
  // int32 ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // bytes err = 2;
  if (this->err().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->err(), output);
  }

  // repeated .bs_czl.MsgRankInfo rank_info = 3;
  for (unsigned int i = 0, n = this->rank_info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rank_info(i), output);
  }

  // @@protoc_insertion_point(serialize_end:bs_czl.MsgRankBatchQueryRsp)
}

::google::protobuf::uint8* MsgRankBatchQueryRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bs_czl.MsgRankBatchQueryRsp)
  // int32 ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // bytes err = 2;
  if (this->err().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->err(), target);
  }

  // repeated .bs_czl.MsgRankInfo rank_info = 3;
  for (unsigned int i = 0, n = this->rank_info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->rank_info(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bs_czl.MsgRankBatchQueryRsp)
  return target;
}

size_t MsgRankBatchQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bs_czl.MsgRankBatchQueryRsp)
  size_t total_size = 0;

  // repeated .bs_czl.MsgRankInfo rank_info = 3;
  {
    unsigned int count = this->rank_info_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rank_info(i));
    }
  }

  // bytes err = 2;
  if (this->err().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->err());
  }

  // int32 ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgRankBatchQueryRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bs_czl.MsgRankBatchQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgRankBatchQueryRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgRankBatchQueryRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bs_czl.MsgRankBatchQueryRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bs_czl.MsgRankBatchQueryRsp)
    MergeFrom(*source);
  }
}

void MsgRankBatchQueryRsp::MergeFrom(const MsgRankBatchQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bs_czl.MsgRankBatchQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rank_info_.MergeFrom(from.rank_info_);
  if (from.err().size() > 0) {

    err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void MsgRankBatchQueryRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bs_czl.MsgRankBatchQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgRankBatchQueryRsp::CopyFrom(const MsgRankBatchQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bs_czl.MsgRankBatchQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRankBatchQueryRsp::IsInitialized() const {
  return true;
}

void MsgRankBatchQueryRsp::Swap(MsgRankBatchQueryRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgRankBatchQueryRsp::InternalSwap(MsgRankBatchQueryRsp* other) {
  rank_info_.UnsafeArenaSwap(&other->rank_info_);
  err_.Swap(&other->err_);
  std::swap(ret_, other->ret_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgRankBatchQueryRsp::GetMetadata() const {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[15];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgRankBatchQueryRsp

// int32 ret = 1;
void MsgRankBatchQueryRsp::clear_ret() {
  ret_ = 0;
}
::google::protobuf::int32 MsgRankBatchQueryRsp::ret() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRankBatchQueryRsp.ret)
  return ret_;
}
void MsgRankBatchQueryRsp::set_ret(::google::protobuf::int32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgRankBatchQueryRsp.ret)
}

// bytes err = 2;
void MsgRankBatchQueryRsp::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgRankBatchQueryRsp::err() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRankBatchQueryRsp.err)
  return err_.GetNoArena();
}
void MsgRankBatchQueryRsp::set_err(const ::std::string& value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgRankBatchQueryRsp.err)
}
#if LANG_CXX11
void MsgRankBatchQueryRsp::set_err(::std::string&& value) {
  
  err_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgRankBatchQueryRsp.err)
}
#endif
void MsgRankBatchQueryRsp::set_err(const char* value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgRankBatchQueryRsp.err)
}
void MsgRankBatchQueryRsp::set_err(const void* value, size_t size) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgRankBatchQueryRsp.err)
}
::std::string* MsgRankBatchQueryRsp::mutable_err() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRankBatchQueryRsp.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgRankBatchQueryRsp::release_err() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgRankBatchQueryRsp.err)
  
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgRankBatchQueryRsp::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    
  } else {
    
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgRankBatchQueryRsp.err)
}

// repeated .bs_czl.MsgRankInfo rank_info = 3;
int MsgRankBatchQueryRsp::rank_info_size() const {
  return rank_info_.size();
}
void MsgRankBatchQueryRsp::clear_rank_info() {
  rank_info_.Clear();
}
const ::bs_czl::MsgRankInfo& MsgRankBatchQueryRsp::rank_info(int index) const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRankBatchQueryRsp.rank_info)
  return rank_info_.Get(index);
}
::bs_czl::MsgRankInfo* MsgRankBatchQueryRsp::mutable_rank_info(int index) {
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRankBatchQueryRsp.rank_info)
  return rank_info_.Mutable(index);
}
::bs_czl::MsgRankInfo* MsgRankBatchQueryRsp::add_rank_info() {
  // @@protoc_insertion_point(field_add:bs_czl.MsgRankBatchQueryRsp.rank_info)
  return rank_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::bs_czl::MsgRankInfo >*
MsgRankBatchQueryRsp::mutable_rank_info() {
  // @@protoc_insertion_point(field_mutable_list:bs_czl.MsgRankBatchQueryRsp.rank_info)
  return &rank_info_;
}
const ::google::protobuf::RepeatedPtrField< ::bs_czl::MsgRankInfo >&
MsgRankBatchQueryRsp::rank_info() const {
  // @@protoc_insertion_point(field_list:bs_czl.MsgRankBatchQueryRsp.rank_info)
  return rank_info_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Range::kMinFieldNumber;
const int Range::kMaxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Range::Range()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bs_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bs_czl.Range)
}
Range::Range(const Range& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&min_, &from.min_,
    reinterpret_cast<char*>(&max_) -
    reinterpret_cast<char*>(&min_) + sizeof(max_));
  // @@protoc_insertion_point(copy_constructor:bs_czl.Range)
}

void Range::SharedCtor() {
  ::memset(&min_, 0, reinterpret_cast<char*>(&max_) -
    reinterpret_cast<char*>(&min_) + sizeof(max_));
  _cached_size_ = 0;
}

Range::~Range() {
  // @@protoc_insertion_point(destructor:bs_czl.Range)
  SharedDtor();
}

void Range::SharedDtor() {
}

void Range::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Range::descriptor() {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[16].descriptor;
}

const Range& Range::default_instance() {
  protobuf_bs_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

Range* Range::New(::google::protobuf::Arena* arena) const {
  Range* n = new Range;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Range::Clear() {
// @@protoc_insertion_point(message_clear_start:bs_czl.Range)
  ::memset(&min_, 0, reinterpret_cast<char*>(&max_) -
    reinterpret_cast<char*>(&min_) + sizeof(max_));
}

bool Range::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bs_czl.Range)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 min = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &min_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 max = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bs_czl.Range)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bs_czl.Range)
  return false;
#undef DO_
}

void Range::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bs_czl.Range)
  // uint64 min = 1;
  if (this->min() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->min(), output);
  }

  // uint64 max = 2;
  if (this->max() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->max(), output);
  }

  // @@protoc_insertion_point(serialize_end:bs_czl.Range)
}

::google::protobuf::uint8* Range::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bs_czl.Range)
  // uint64 min = 1;
  if (this->min() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->min(), target);
  }

  // uint64 max = 2;
  if (this->max() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->max(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bs_czl.Range)
  return target;
}

size_t Range::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bs_czl.Range)
  size_t total_size = 0;

  // uint64 min = 1;
  if (this->min() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->min());
  }

  // uint64 max = 2;
  if (this->max() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->max());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Range::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bs_czl.Range)
  GOOGLE_DCHECK_NE(&from, this);
  const Range* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Range>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bs_czl.Range)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bs_czl.Range)
    MergeFrom(*source);
  }
}

void Range::MergeFrom(const Range& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bs_czl.Range)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.min() != 0) {
    set_min(from.min());
  }
  if (from.max() != 0) {
    set_max(from.max());
  }
}

void Range::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bs_czl.Range)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Range::CopyFrom(const Range& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bs_czl.Range)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Range::IsInitialized() const {
  return true;
}

void Range::Swap(Range* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Range::InternalSwap(Range* other) {
  std::swap(min_, other->min_);
  std::swap(max_, other->max_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Range::GetMetadata() const {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[16];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Range

// uint64 min = 1;
void Range::clear_min() {
  min_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 Range::min() const {
  // @@protoc_insertion_point(field_get:bs_czl.Range.min)
  return min_;
}
void Range::set_min(::google::protobuf::uint64 value) {
  
  min_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.Range.min)
}

// uint64 max = 2;
void Range::clear_max() {
  max_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 Range::max() const {
  // @@protoc_insertion_point(field_get:bs_czl.Range.max)
  return max_;
}
void Range::set_max(::google::protobuf::uint64 value) {
  
  max_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.Range.max)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgRangeQueryReq::kKeyIdFieldNumber;
const int MsgRangeQueryReq::kRangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgRangeQueryReq::MsgRangeQueryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bs_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bs_czl.MsgRangeQueryReq)
}
MsgRangeQueryReq::MsgRangeQueryReq(const MsgRangeQueryReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key_id().size() > 0) {
    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
  if (from.has_range()) {
    range_ = new ::bs_czl::Range(*from.range_);
  } else {
    range_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:bs_czl.MsgRangeQueryReq)
}

void MsgRangeQueryReq::SharedCtor() {
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  range_ = NULL;
  _cached_size_ = 0;
}

MsgRangeQueryReq::~MsgRangeQueryReq() {
  // @@protoc_insertion_point(destructor:bs_czl.MsgRangeQueryReq)
  SharedDtor();
}

void MsgRangeQueryReq::SharedDtor() {
  key_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete range_;
  }
}

void MsgRangeQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgRangeQueryReq::descriptor() {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[17].descriptor;
}

const MsgRangeQueryReq& MsgRangeQueryReq::default_instance() {
  protobuf_bs_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgRangeQueryReq* MsgRangeQueryReq::New(::google::protobuf::Arena* arena) const {
  MsgRangeQueryReq* n = new MsgRangeQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgRangeQueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:bs_czl.MsgRangeQueryReq)
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && range_ != NULL) {
    delete range_;
  }
  range_ = NULL;
}

bool MsgRangeQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bs_czl.MsgRangeQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes key_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bs_czl.Range range = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bs_czl.MsgRangeQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bs_czl.MsgRangeQueryReq)
  return false;
#undef DO_
}

void MsgRangeQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bs_czl.MsgRangeQueryReq)
  // bytes key_id = 1;
  if (this->key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key_id(), output);
  }

  // .bs_czl.Range range = 2;
  if (this->has_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->range_, output);
  }

  // @@protoc_insertion_point(serialize_end:bs_czl.MsgRangeQueryReq)
}

::google::protobuf::uint8* MsgRangeQueryReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bs_czl.MsgRangeQueryReq)
  // bytes key_id = 1;
  if (this->key_id().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key_id(), target);
  }

  // .bs_czl.Range range = 2;
  if (this->has_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->range_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bs_czl.MsgRangeQueryReq)
  return target;
}

size_t MsgRangeQueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bs_czl.MsgRangeQueryReq)
  size_t total_size = 0;

  // bytes key_id = 1;
  if (this->key_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key_id());
  }

  // .bs_czl.Range range = 2;
  if (this->has_range()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->range_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgRangeQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bs_czl.MsgRangeQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgRangeQueryReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgRangeQueryReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bs_czl.MsgRangeQueryReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bs_czl.MsgRangeQueryReq)
    MergeFrom(*source);
  }
}

void MsgRangeQueryReq::MergeFrom(const MsgRangeQueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bs_czl.MsgRangeQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.key_id().size() > 0) {

    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
  if (from.has_range()) {
    mutable_range()->::bs_czl::Range::MergeFrom(from.range());
  }
}

void MsgRangeQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bs_czl.MsgRangeQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgRangeQueryReq::CopyFrom(const MsgRangeQueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bs_czl.MsgRangeQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRangeQueryReq::IsInitialized() const {
  return true;
}

void MsgRangeQueryReq::Swap(MsgRangeQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgRangeQueryReq::InternalSwap(MsgRangeQueryReq* other) {
  key_id_.Swap(&other->key_id_);
  std::swap(range_, other->range_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgRangeQueryReq::GetMetadata() const {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[17];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgRangeQueryReq

// bytes key_id = 1;
void MsgRangeQueryReq::clear_key_id() {
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgRangeQueryReq::key_id() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRangeQueryReq.key_id)
  return key_id_.GetNoArena();
}
void MsgRangeQueryReq::set_key_id(const ::std::string& value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgRangeQueryReq.key_id)
}
#if LANG_CXX11
void MsgRangeQueryReq::set_key_id(::std::string&& value) {
  
  key_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgRangeQueryReq.key_id)
}
#endif
void MsgRangeQueryReq::set_key_id(const char* value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgRangeQueryReq.key_id)
}
void MsgRangeQueryReq::set_key_id(const void* value, size_t size) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgRangeQueryReq.key_id)
}
::std::string* MsgRangeQueryReq::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRangeQueryReq.key_id)
  return key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgRangeQueryReq::release_key_id() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgRangeQueryReq.key_id)
  
  return key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgRangeQueryReq::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgRangeQueryReq.key_id)
}

// .bs_czl.Range range = 2;
bool MsgRangeQueryReq::has_range() const {
  return this != internal_default_instance() && range_ != NULL;
}
void MsgRangeQueryReq::clear_range() {
  if (GetArenaNoVirtual() == NULL && range_ != NULL) delete range_;
  range_ = NULL;
}
const ::bs_czl::Range& MsgRangeQueryReq::range() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRangeQueryReq.range)
  return range_ != NULL ? *range_
                         : *::bs_czl::Range::internal_default_instance();
}
::bs_czl::Range* MsgRangeQueryReq::mutable_range() {
  
  if (range_ == NULL) {
    range_ = new ::bs_czl::Range;
  }
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRangeQueryReq.range)
  return range_;
}
::bs_czl::Range* MsgRangeQueryReq::release_range() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgRangeQueryReq.range)
  
  ::bs_czl::Range* temp = range_;
  range_ = NULL;
  return temp;
}
void MsgRangeQueryReq::set_allocated_range(::bs_czl::Range* range) {
  delete range_;
  range_ = range;
  if (range) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgRangeQueryReq.range)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgRangeQueryRsp::kRetFieldNumber;
const int MsgRangeQueryRsp::kErrFieldNumber;
const int MsgRangeQueryRsp::kRankInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgRangeQueryRsp::MsgRangeQueryRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bs_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bs_czl.MsgRangeQueryRsp)
}
MsgRangeQueryRsp::MsgRangeQueryRsp(const MsgRangeQueryRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rank_info_(from.rank_info_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.err().size() > 0) {
    err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:bs_czl.MsgRangeQueryRsp)
}

void MsgRangeQueryRsp::SharedCtor() {
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

MsgRangeQueryRsp::~MsgRangeQueryRsp() {
  // @@protoc_insertion_point(destructor:bs_czl.MsgRangeQueryRsp)
  SharedDtor();
}

void MsgRangeQueryRsp::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgRangeQueryRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgRangeQueryRsp::descriptor() {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[18].descriptor;
}

const MsgRangeQueryRsp& MsgRangeQueryRsp::default_instance() {
  protobuf_bs_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgRangeQueryRsp* MsgRangeQueryRsp::New(::google::protobuf::Arena* arena) const {
  MsgRangeQueryRsp* n = new MsgRangeQueryRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgRangeQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:bs_czl.MsgRangeQueryRsp)
  rank_info_.Clear();
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
}

bool MsgRangeQueryRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bs_czl.MsgRangeQueryRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes err = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_err()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bs_czl.MsgRankInfo rank_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_rank_info()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bs_czl.MsgRangeQueryRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bs_czl.MsgRangeQueryRsp)
  return false;
#undef DO_
}

void MsgRangeQueryRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bs_czl.MsgRangeQueryRsp)
  // int32 ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // bytes err = 2;
  if (this->err().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->err(), output);
  }

  // repeated .bs_czl.MsgRankInfo rank_info = 3;
  for (unsigned int i = 0, n = this->rank_info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rank_info(i), output);
  }

  // @@protoc_insertion_point(serialize_end:bs_czl.MsgRangeQueryRsp)
}

::google::protobuf::uint8* MsgRangeQueryRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bs_czl.MsgRangeQueryRsp)
  // int32 ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // bytes err = 2;
  if (this->err().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->err(), target);
  }

  // repeated .bs_czl.MsgRankInfo rank_info = 3;
  for (unsigned int i = 0, n = this->rank_info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->rank_info(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bs_czl.MsgRangeQueryRsp)
  return target;
}

size_t MsgRangeQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bs_czl.MsgRangeQueryRsp)
  size_t total_size = 0;

  // repeated .bs_czl.MsgRankInfo rank_info = 3;
  {
    unsigned int count = this->rank_info_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rank_info(i));
    }
  }

  // bytes err = 2;
  if (this->err().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->err());
  }

  // int32 ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgRangeQueryRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bs_czl.MsgRangeQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgRangeQueryRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgRangeQueryRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bs_czl.MsgRangeQueryRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bs_czl.MsgRangeQueryRsp)
    MergeFrom(*source);
  }
}

void MsgRangeQueryRsp::MergeFrom(const MsgRangeQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bs_czl.MsgRangeQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rank_info_.MergeFrom(from.rank_info_);
  if (from.err().size() > 0) {

    err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void MsgRangeQueryRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bs_czl.MsgRangeQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgRangeQueryRsp::CopyFrom(const MsgRangeQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bs_czl.MsgRangeQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRangeQueryRsp::IsInitialized() const {
  return true;
}

void MsgRangeQueryRsp::Swap(MsgRangeQueryRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgRangeQueryRsp::InternalSwap(MsgRangeQueryRsp* other) {
  rank_info_.UnsafeArenaSwap(&other->rank_info_);
  err_.Swap(&other->err_);
  std::swap(ret_, other->ret_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgRangeQueryRsp::GetMetadata() const {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[18];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgRangeQueryRsp

// int32 ret = 1;
void MsgRangeQueryRsp::clear_ret() {
  ret_ = 0;
}
::google::protobuf::int32 MsgRangeQueryRsp::ret() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRangeQueryRsp.ret)
  return ret_;
}
void MsgRangeQueryRsp::set_ret(::google::protobuf::int32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgRangeQueryRsp.ret)
}

// bytes err = 2;
void MsgRangeQueryRsp::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgRangeQueryRsp::err() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRangeQueryRsp.err)
  return err_.GetNoArena();
}
void MsgRangeQueryRsp::set_err(const ::std::string& value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgRangeQueryRsp.err)
}
#if LANG_CXX11
void MsgRangeQueryRsp::set_err(::std::string&& value) {
  
  err_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgRangeQueryRsp.err)
}
#endif
void MsgRangeQueryRsp::set_err(const char* value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgRangeQueryRsp.err)
}
void MsgRangeQueryRsp::set_err(const void* value, size_t size) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgRangeQueryRsp.err)
}
::std::string* MsgRangeQueryRsp::mutable_err() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRangeQueryRsp.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgRangeQueryRsp::release_err() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgRangeQueryRsp.err)
  
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgRangeQueryRsp::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    
  } else {
    
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgRangeQueryRsp.err)
}

// repeated .bs_czl.MsgRankInfo rank_info = 3;
int MsgRangeQueryRsp::rank_info_size() const {
  return rank_info_.size();
}
void MsgRangeQueryRsp::clear_rank_info() {
  rank_info_.Clear();
}
const ::bs_czl::MsgRankInfo& MsgRangeQueryRsp::rank_info(int index) const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRangeQueryRsp.rank_info)
  return rank_info_.Get(index);
}
::bs_czl::MsgRankInfo* MsgRangeQueryRsp::mutable_rank_info(int index) {
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRangeQueryRsp.rank_info)
  return rank_info_.Mutable(index);
}
::bs_czl::MsgRankInfo* MsgRangeQueryRsp::add_rank_info() {
  // @@protoc_insertion_point(field_add:bs_czl.MsgRangeQueryRsp.rank_info)
  return rank_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::bs_czl::MsgRankInfo >*
MsgRangeQueryRsp::mutable_rank_info() {
  // @@protoc_insertion_point(field_mutable_list:bs_czl.MsgRangeQueryRsp.rank_info)
  return &rank_info_;
}
const ::google::protobuf::RepeatedPtrField< ::bs_czl::MsgRankInfo >&
MsgRangeQueryRsp::rank_info() const {
  // @@protoc_insertion_point(field_list:bs_czl.MsgRangeQueryRsp.rank_info)
  return rank_info_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgRangeByScoreQueryReq::kKeyIdFieldNumber;
const int MsgRangeByScoreQueryReq::kRangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgRangeByScoreQueryReq::MsgRangeByScoreQueryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bs_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bs_czl.MsgRangeByScoreQueryReq)
}
MsgRangeByScoreQueryReq::MsgRangeByScoreQueryReq(const MsgRangeByScoreQueryReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key_id().size() > 0) {
    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
  if (from.has_range()) {
    range_ = new ::bs_czl::Range(*from.range_);
  } else {
    range_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:bs_czl.MsgRangeByScoreQueryReq)
}

void MsgRangeByScoreQueryReq::SharedCtor() {
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  range_ = NULL;
  _cached_size_ = 0;
}

MsgRangeByScoreQueryReq::~MsgRangeByScoreQueryReq() {
  // @@protoc_insertion_point(destructor:bs_czl.MsgRangeByScoreQueryReq)
  SharedDtor();
}

void MsgRangeByScoreQueryReq::SharedDtor() {
  key_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete range_;
  }
}

void MsgRangeByScoreQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgRangeByScoreQueryReq::descriptor() {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[19].descriptor;
}

const MsgRangeByScoreQueryReq& MsgRangeByScoreQueryReq::default_instance() {
  protobuf_bs_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgRangeByScoreQueryReq* MsgRangeByScoreQueryReq::New(::google::protobuf::Arena* arena) const {
  MsgRangeByScoreQueryReq* n = new MsgRangeByScoreQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgRangeByScoreQueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:bs_czl.MsgRangeByScoreQueryReq)
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && range_ != NULL) {
    delete range_;
  }
  range_ = NULL;
}

bool MsgRangeByScoreQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bs_czl.MsgRangeByScoreQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes key_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bs_czl.Range range = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_range()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bs_czl.MsgRangeByScoreQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bs_czl.MsgRangeByScoreQueryReq)
  return false;
#undef DO_
}

void MsgRangeByScoreQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bs_czl.MsgRangeByScoreQueryReq)
  // bytes key_id = 1;
  if (this->key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key_id(), output);
  }

  // .bs_czl.Range range = 2;
  if (this->has_range()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->range_, output);
  }

  // @@protoc_insertion_point(serialize_end:bs_czl.MsgRangeByScoreQueryReq)
}

::google::protobuf::uint8* MsgRangeByScoreQueryReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bs_czl.MsgRangeByScoreQueryReq)
  // bytes key_id = 1;
  if (this->key_id().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key_id(), target);
  }

  // .bs_czl.Range range = 2;
  if (this->has_range()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->range_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bs_czl.MsgRangeByScoreQueryReq)
  return target;
}

size_t MsgRangeByScoreQueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bs_czl.MsgRangeByScoreQueryReq)
  size_t total_size = 0;

  // bytes key_id = 1;
  if (this->key_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key_id());
  }

  // .bs_czl.Range range = 2;
  if (this->has_range()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->range_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgRangeByScoreQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bs_czl.MsgRangeByScoreQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgRangeByScoreQueryReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgRangeByScoreQueryReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bs_czl.MsgRangeByScoreQueryReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bs_czl.MsgRangeByScoreQueryReq)
    MergeFrom(*source);
  }
}

void MsgRangeByScoreQueryReq::MergeFrom(const MsgRangeByScoreQueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bs_czl.MsgRangeByScoreQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.key_id().size() > 0) {

    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
  if (from.has_range()) {
    mutable_range()->::bs_czl::Range::MergeFrom(from.range());
  }
}

void MsgRangeByScoreQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bs_czl.MsgRangeByScoreQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgRangeByScoreQueryReq::CopyFrom(const MsgRangeByScoreQueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bs_czl.MsgRangeByScoreQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRangeByScoreQueryReq::IsInitialized() const {
  return true;
}

void MsgRangeByScoreQueryReq::Swap(MsgRangeByScoreQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgRangeByScoreQueryReq::InternalSwap(MsgRangeByScoreQueryReq* other) {
  key_id_.Swap(&other->key_id_);
  std::swap(range_, other->range_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgRangeByScoreQueryReq::GetMetadata() const {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[19];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgRangeByScoreQueryReq

// bytes key_id = 1;
void MsgRangeByScoreQueryReq::clear_key_id() {
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgRangeByScoreQueryReq::key_id() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRangeByScoreQueryReq.key_id)
  return key_id_.GetNoArena();
}
void MsgRangeByScoreQueryReq::set_key_id(const ::std::string& value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgRangeByScoreQueryReq.key_id)
}
#if LANG_CXX11
void MsgRangeByScoreQueryReq::set_key_id(::std::string&& value) {
  
  key_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgRangeByScoreQueryReq.key_id)
}
#endif
void MsgRangeByScoreQueryReq::set_key_id(const char* value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgRangeByScoreQueryReq.key_id)
}
void MsgRangeByScoreQueryReq::set_key_id(const void* value, size_t size) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgRangeByScoreQueryReq.key_id)
}
::std::string* MsgRangeByScoreQueryReq::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRangeByScoreQueryReq.key_id)
  return key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgRangeByScoreQueryReq::release_key_id() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgRangeByScoreQueryReq.key_id)
  
  return key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgRangeByScoreQueryReq::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgRangeByScoreQueryReq.key_id)
}

// .bs_czl.Range range = 2;
bool MsgRangeByScoreQueryReq::has_range() const {
  return this != internal_default_instance() && range_ != NULL;
}
void MsgRangeByScoreQueryReq::clear_range() {
  if (GetArenaNoVirtual() == NULL && range_ != NULL) delete range_;
  range_ = NULL;
}
const ::bs_czl::Range& MsgRangeByScoreQueryReq::range() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRangeByScoreQueryReq.range)
  return range_ != NULL ? *range_
                         : *::bs_czl::Range::internal_default_instance();
}
::bs_czl::Range* MsgRangeByScoreQueryReq::mutable_range() {
  
  if (range_ == NULL) {
    range_ = new ::bs_czl::Range;
  }
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRangeByScoreQueryReq.range)
  return range_;
}
::bs_czl::Range* MsgRangeByScoreQueryReq::release_range() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgRangeByScoreQueryReq.range)
  
  ::bs_czl::Range* temp = range_;
  range_ = NULL;
  return temp;
}
void MsgRangeByScoreQueryReq::set_allocated_range(::bs_czl::Range* range) {
  delete range_;
  range_ = range;
  if (range) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgRangeByScoreQueryReq.range)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgRangeByScoreQueryRsp::kRetFieldNumber;
const int MsgRangeByScoreQueryRsp::kErrFieldNumber;
const int MsgRangeByScoreQueryRsp::kRankInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgRangeByScoreQueryRsp::MsgRangeByScoreQueryRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bs_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bs_czl.MsgRangeByScoreQueryRsp)
}
MsgRangeByScoreQueryRsp::MsgRangeByScoreQueryRsp(const MsgRangeByScoreQueryRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rank_info_(from.rank_info_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.err().size() > 0) {
    err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:bs_czl.MsgRangeByScoreQueryRsp)
}

void MsgRangeByScoreQueryRsp::SharedCtor() {
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
  _cached_size_ = 0;
}

MsgRangeByScoreQueryRsp::~MsgRangeByScoreQueryRsp() {
  // @@protoc_insertion_point(destructor:bs_czl.MsgRangeByScoreQueryRsp)
  SharedDtor();
}

void MsgRangeByScoreQueryRsp::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgRangeByScoreQueryRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgRangeByScoreQueryRsp::descriptor() {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[20].descriptor;
}

const MsgRangeByScoreQueryRsp& MsgRangeByScoreQueryRsp::default_instance() {
  protobuf_bs_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgRangeByScoreQueryRsp* MsgRangeByScoreQueryRsp::New(::google::protobuf::Arena* arena) const {
  MsgRangeByScoreQueryRsp* n = new MsgRangeByScoreQueryRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgRangeByScoreQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:bs_czl.MsgRangeByScoreQueryRsp)
  rank_info_.Clear();
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ret_ = 0;
}

bool MsgRangeByScoreQueryRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bs_czl.MsgRangeByScoreQueryRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes err = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_err()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .bs_czl.MsgRankInfo rank_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_rank_info()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bs_czl.MsgRangeByScoreQueryRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bs_czl.MsgRangeByScoreQueryRsp)
  return false;
#undef DO_
}

void MsgRangeByScoreQueryRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bs_czl.MsgRangeByScoreQueryRsp)
  // int32 ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // bytes err = 2;
  if (this->err().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->err(), output);
  }

  // repeated .bs_czl.MsgRankInfo rank_info = 3;
  for (unsigned int i = 0, n = this->rank_info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rank_info(i), output);
  }

  // @@protoc_insertion_point(serialize_end:bs_czl.MsgRangeByScoreQueryRsp)
}

::google::protobuf::uint8* MsgRangeByScoreQueryRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bs_czl.MsgRangeByScoreQueryRsp)
  // int32 ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // bytes err = 2;
  if (this->err().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->err(), target);
  }

  // repeated .bs_czl.MsgRankInfo rank_info = 3;
  for (unsigned int i = 0, n = this->rank_info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->rank_info(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bs_czl.MsgRangeByScoreQueryRsp)
  return target;
}

size_t MsgRangeByScoreQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bs_czl.MsgRangeByScoreQueryRsp)
  size_t total_size = 0;

  // repeated .bs_czl.MsgRankInfo rank_info = 3;
  {
    unsigned int count = this->rank_info_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rank_info(i));
    }
  }

  // bytes err = 2;
  if (this->err().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->err());
  }

  // int32 ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgRangeByScoreQueryRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bs_czl.MsgRangeByScoreQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgRangeByScoreQueryRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgRangeByScoreQueryRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bs_czl.MsgRangeByScoreQueryRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bs_czl.MsgRangeByScoreQueryRsp)
    MergeFrom(*source);
  }
}

void MsgRangeByScoreQueryRsp::MergeFrom(const MsgRangeByScoreQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bs_czl.MsgRangeByScoreQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rank_info_.MergeFrom(from.rank_info_);
  if (from.err().size() > 0) {

    err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void MsgRangeByScoreQueryRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bs_czl.MsgRangeByScoreQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgRangeByScoreQueryRsp::CopyFrom(const MsgRangeByScoreQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bs_czl.MsgRangeByScoreQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRangeByScoreQueryRsp::IsInitialized() const {
  return true;
}

void MsgRangeByScoreQueryRsp::Swap(MsgRangeByScoreQueryRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgRangeByScoreQueryRsp::InternalSwap(MsgRangeByScoreQueryRsp* other) {
  rank_info_.UnsafeArenaSwap(&other->rank_info_);
  err_.Swap(&other->err_);
  std::swap(ret_, other->ret_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgRangeByScoreQueryRsp::GetMetadata() const {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[20];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgRangeByScoreQueryRsp

// int32 ret = 1;
void MsgRangeByScoreQueryRsp::clear_ret() {
  ret_ = 0;
}
::google::protobuf::int32 MsgRangeByScoreQueryRsp::ret() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRangeByScoreQueryRsp.ret)
  return ret_;
}
void MsgRangeByScoreQueryRsp::set_ret(::google::protobuf::int32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgRangeByScoreQueryRsp.ret)
}

// bytes err = 2;
void MsgRangeByScoreQueryRsp::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgRangeByScoreQueryRsp::err() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRangeByScoreQueryRsp.err)
  return err_.GetNoArena();
}
void MsgRangeByScoreQueryRsp::set_err(const ::std::string& value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgRangeByScoreQueryRsp.err)
}
#if LANG_CXX11
void MsgRangeByScoreQueryRsp::set_err(::std::string&& value) {
  
  err_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgRangeByScoreQueryRsp.err)
}
#endif
void MsgRangeByScoreQueryRsp::set_err(const char* value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgRangeByScoreQueryRsp.err)
}
void MsgRangeByScoreQueryRsp::set_err(const void* value, size_t size) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgRangeByScoreQueryRsp.err)
}
::std::string* MsgRangeByScoreQueryRsp::mutable_err() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRangeByScoreQueryRsp.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgRangeByScoreQueryRsp::release_err() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgRangeByScoreQueryRsp.err)
  
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgRangeByScoreQueryRsp::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    
  } else {
    
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgRangeByScoreQueryRsp.err)
}

// repeated .bs_czl.MsgRankInfo rank_info = 3;
int MsgRangeByScoreQueryRsp::rank_info_size() const {
  return rank_info_.size();
}
void MsgRangeByScoreQueryRsp::clear_rank_info() {
  rank_info_.Clear();
}
const ::bs_czl::MsgRankInfo& MsgRangeByScoreQueryRsp::rank_info(int index) const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgRangeByScoreQueryRsp.rank_info)
  return rank_info_.Get(index);
}
::bs_czl::MsgRankInfo* MsgRangeByScoreQueryRsp::mutable_rank_info(int index) {
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgRangeByScoreQueryRsp.rank_info)
  return rank_info_.Mutable(index);
}
::bs_czl::MsgRankInfo* MsgRangeByScoreQueryRsp::add_rank_info() {
  // @@protoc_insertion_point(field_add:bs_czl.MsgRangeByScoreQueryRsp.rank_info)
  return rank_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::bs_czl::MsgRankInfo >*
MsgRangeByScoreQueryRsp::mutable_rank_info() {
  // @@protoc_insertion_point(field_mutable_list:bs_czl.MsgRangeByScoreQueryRsp.rank_info)
  return &rank_info_;
}
const ::google::protobuf::RepeatedPtrField< ::bs_czl::MsgRankInfo >&
MsgRangeByScoreQueryRsp::rank_info() const {
  // @@protoc_insertion_point(field_list:bs_czl.MsgRangeByScoreQueryRsp.rank_info)
  return rank_info_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgTopQueryReq::kKeyIdFieldNumber;
const int MsgTopQueryReq::kTopFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgTopQueryReq::MsgTopQueryReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bs_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bs_czl.MsgTopQueryReq)
}
MsgTopQueryReq::MsgTopQueryReq(const MsgTopQueryReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key_id().size() > 0) {
    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
  top_ = from.top_;
  // @@protoc_insertion_point(copy_constructor:bs_czl.MsgTopQueryReq)
}

void MsgTopQueryReq::SharedCtor() {
  key_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  top_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

MsgTopQueryReq::~MsgTopQueryReq() {
  // @@protoc_insertion_point(destructor:bs_czl.MsgTopQueryReq)
  SharedDtor();
}

void MsgTopQueryReq::SharedDtor() {
  key_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgTopQueryReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgTopQueryReq::descriptor() {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[21].descriptor;
}

const MsgTopQueryReq& MsgTopQueryReq::default_instance() {
  protobuf_bs_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgTopQueryReq* MsgTopQueryReq::New(::google::protobuf::Arena* arena) const {
  MsgTopQueryReq* n = new MsgTopQueryReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgTopQueryReq::Clear() {
// @@protoc_insertion_point(message_clear_start:bs_czl.MsgTopQueryReq)
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  top_ = GOOGLE_ULONGLONG(0);
}

bool MsgTopQueryReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bs_czl.MsgTopQueryReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes key_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 top = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &top_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bs_czl.MsgTopQueryReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bs_czl.MsgTopQueryReq)
  return false;
#undef DO_
}

void MsgTopQueryReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bs_czl.MsgTopQueryReq)
  // bytes key_id = 1;
  if (this->key_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->key_id(), output);
  }

  // uint64 top = 2;
  if (this->top() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->top(), output);
  }

  // @@protoc_insertion_point(serialize_end:bs_czl.MsgTopQueryReq)
}

::google::protobuf::uint8* MsgTopQueryReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bs_czl.MsgTopQueryReq)
  // bytes key_id = 1;
  if (this->key_id().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->key_id(), target);
  }

  // uint64 top = 2;
  if (this->top() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->top(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bs_czl.MsgTopQueryReq)
  return target;
}

size_t MsgTopQueryReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bs_czl.MsgTopQueryReq)
  size_t total_size = 0;

  // bytes key_id = 1;
  if (this->key_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->key_id());
  }

  // uint64 top = 2;
  if (this->top() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->top());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgTopQueryReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bs_czl.MsgTopQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgTopQueryReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgTopQueryReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bs_czl.MsgTopQueryReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bs_czl.MsgTopQueryReq)
    MergeFrom(*source);
  }
}

void MsgTopQueryReq::MergeFrom(const MsgTopQueryReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bs_czl.MsgTopQueryReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.key_id().size() > 0) {

    key_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_id_);
  }
  if (from.top() != 0) {
    set_top(from.top());
  }
}

void MsgTopQueryReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bs_czl.MsgTopQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgTopQueryReq::CopyFrom(const MsgTopQueryReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bs_czl.MsgTopQueryReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgTopQueryReq::IsInitialized() const {
  return true;
}

void MsgTopQueryReq::Swap(MsgTopQueryReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgTopQueryReq::InternalSwap(MsgTopQueryReq* other) {
  key_id_.Swap(&other->key_id_);
  std::swap(top_, other->top_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgTopQueryReq::GetMetadata() const {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[21];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgTopQueryReq

// bytes key_id = 1;
void MsgTopQueryReq::clear_key_id() {
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgTopQueryReq::key_id() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgTopQueryReq.key_id)
  return key_id_.GetNoArena();
}
void MsgTopQueryReq::set_key_id(const ::std::string& value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgTopQueryReq.key_id)
}
#if LANG_CXX11
void MsgTopQueryReq::set_key_id(::std::string&& value) {
  
  key_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgTopQueryReq.key_id)
}
#endif
void MsgTopQueryReq::set_key_id(const char* value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgTopQueryReq.key_id)
}
void MsgTopQueryReq::set_key_id(const void* value, size_t size) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgTopQueryReq.key_id)
}
::std::string* MsgTopQueryReq::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgTopQueryReq.key_id)
  return key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgTopQueryReq::release_key_id() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgTopQueryReq.key_id)
  
  return key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgTopQueryReq::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgTopQueryReq.key_id)
}

// uint64 top = 2;
void MsgTopQueryReq::clear_top() {
  top_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 MsgTopQueryReq::top() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgTopQueryReq.top)
  return top_;
}
void MsgTopQueryReq::set_top(::google::protobuf::uint64 value) {
  
  top_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgTopQueryReq.top)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgTopQueryRsp::kRetFieldNumber;
const int MsgTopQueryRsp::kErrFieldNumber;
const int MsgTopQueryRsp::kMemDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgTopQueryRsp::MsgTopQueryRsp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bs_5fmsg_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:bs_czl.MsgTopQueryRsp)
}
MsgTopQueryRsp::MsgTopQueryRsp(const MsgTopQueryRsp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.err().size() > 0) {
    err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
  }
  if (from.has_mem_data()) {
    mem_data_ = new ::bs_czl::MsgSetMemData(*from.mem_data_);
  } else {
    mem_data_ = NULL;
  }
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:bs_czl.MsgTopQueryRsp)
}

void MsgTopQueryRsp::SharedCtor() {
  err_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mem_data_, 0, reinterpret_cast<char*>(&ret_) -
    reinterpret_cast<char*>(&mem_data_) + sizeof(ret_));
  _cached_size_ = 0;
}

MsgTopQueryRsp::~MsgTopQueryRsp() {
  // @@protoc_insertion_point(destructor:bs_czl.MsgTopQueryRsp)
  SharedDtor();
}

void MsgTopQueryRsp::SharedDtor() {
  err_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete mem_data_;
  }
}

void MsgTopQueryRsp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MsgTopQueryRsp::descriptor() {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[22].descriptor;
}

const MsgTopQueryRsp& MsgTopQueryRsp::default_instance() {
  protobuf_bs_5fmsg_2eproto::InitDefaults();
  return *internal_default_instance();
}

MsgTopQueryRsp* MsgTopQueryRsp::New(::google::protobuf::Arena* arena) const {
  MsgTopQueryRsp* n = new MsgTopQueryRsp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MsgTopQueryRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:bs_czl.MsgTopQueryRsp)
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && mem_data_ != NULL) {
    delete mem_data_;
  }
  mem_data_ = NULL;
  ret_ = 0;
}

bool MsgTopQueryRsp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bs_czl.MsgTopQueryRsp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ret = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes err = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_err()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bs_czl.MsgSetMemData mem_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mem_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bs_czl.MsgTopQueryRsp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bs_czl.MsgTopQueryRsp)
  return false;
#undef DO_
}

void MsgTopQueryRsp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bs_czl.MsgTopQueryRsp)
  // int32 ret = 1;
  if (this->ret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  // bytes err = 2;
  if (this->err().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->err(), output);
  }

  // .bs_czl.MsgSetMemData mem_data = 3;
  if (this->has_mem_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->mem_data_, output);
  }

  // @@protoc_insertion_point(serialize_end:bs_czl.MsgTopQueryRsp)
}

::google::protobuf::uint8* MsgTopQueryRsp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:bs_czl.MsgTopQueryRsp)
  // int32 ret = 1;
  if (this->ret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  // bytes err = 2;
  if (this->err().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->err(), target);
  }

  // .bs_czl.MsgSetMemData mem_data = 3;
  if (this->has_mem_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->mem_data_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:bs_czl.MsgTopQueryRsp)
  return target;
}

size_t MsgTopQueryRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bs_czl.MsgTopQueryRsp)
  size_t total_size = 0;

  // bytes err = 2;
  if (this->err().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->err());
  }

  // .bs_czl.MsgSetMemData mem_data = 3;
  if (this->has_mem_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->mem_data_);
  }

  // int32 ret = 1;
  if (this->ret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MsgTopQueryRsp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bs_czl.MsgTopQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgTopQueryRsp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgTopQueryRsp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bs_czl.MsgTopQueryRsp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bs_czl.MsgTopQueryRsp)
    MergeFrom(*source);
  }
}

void MsgTopQueryRsp::MergeFrom(const MsgTopQueryRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bs_czl.MsgTopQueryRsp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.err().size() > 0) {

    err_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.err_);
  }
  if (from.has_mem_data()) {
    mutable_mem_data()->::bs_czl::MsgSetMemData::MergeFrom(from.mem_data());
  }
  if (from.ret() != 0) {
    set_ret(from.ret());
  }
}

void MsgTopQueryRsp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bs_czl.MsgTopQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgTopQueryRsp::CopyFrom(const MsgTopQueryRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bs_czl.MsgTopQueryRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgTopQueryRsp::IsInitialized() const {
  return true;
}

void MsgTopQueryRsp::Swap(MsgTopQueryRsp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgTopQueryRsp::InternalSwap(MsgTopQueryRsp* other) {
  err_.Swap(&other->err_);
  std::swap(mem_data_, other->mem_data_);
  std::swap(ret_, other->ret_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MsgTopQueryRsp::GetMetadata() const {
  protobuf_bs_5fmsg_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bs_5fmsg_2eproto::file_level_metadata[22];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgTopQueryRsp

// int32 ret = 1;
void MsgTopQueryRsp::clear_ret() {
  ret_ = 0;
}
::google::protobuf::int32 MsgTopQueryRsp::ret() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgTopQueryRsp.ret)
  return ret_;
}
void MsgTopQueryRsp::set_ret(::google::protobuf::int32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgTopQueryRsp.ret)
}

// bytes err = 2;
void MsgTopQueryRsp::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MsgTopQueryRsp::err() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgTopQueryRsp.err)
  return err_.GetNoArena();
}
void MsgTopQueryRsp::set_err(const ::std::string& value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgTopQueryRsp.err)
}
#if LANG_CXX11
void MsgTopQueryRsp::set_err(::std::string&& value) {
  
  err_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgTopQueryRsp.err)
}
#endif
void MsgTopQueryRsp::set_err(const char* value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgTopQueryRsp.err)
}
void MsgTopQueryRsp::set_err(const void* value, size_t size) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgTopQueryRsp.err)
}
::std::string* MsgTopQueryRsp::mutable_err() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgTopQueryRsp.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MsgTopQueryRsp::release_err() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgTopQueryRsp.err)
  
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MsgTopQueryRsp::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    
  } else {
    
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgTopQueryRsp.err)
}

// .bs_czl.MsgSetMemData mem_data = 3;
bool MsgTopQueryRsp::has_mem_data() const {
  return this != internal_default_instance() && mem_data_ != NULL;
}
void MsgTopQueryRsp::clear_mem_data() {
  if (GetArenaNoVirtual() == NULL && mem_data_ != NULL) delete mem_data_;
  mem_data_ = NULL;
}
const ::bs_czl::MsgSetMemData& MsgTopQueryRsp::mem_data() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgTopQueryRsp.mem_data)
  return mem_data_ != NULL ? *mem_data_
                         : *::bs_czl::MsgSetMemData::internal_default_instance();
}
::bs_czl::MsgSetMemData* MsgTopQueryRsp::mutable_mem_data() {
  
  if (mem_data_ == NULL) {
    mem_data_ = new ::bs_czl::MsgSetMemData;
  }
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgTopQueryRsp.mem_data)
  return mem_data_;
}
::bs_czl::MsgSetMemData* MsgTopQueryRsp::release_mem_data() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgTopQueryRsp.mem_data)
  
  ::bs_czl::MsgSetMemData* temp = mem_data_;
  mem_data_ = NULL;
  return temp;
}
void MsgTopQueryRsp::set_allocated_mem_data(::bs_czl::MsgSetMemData* mem_data) {
  delete mem_data_;
  mem_data_ = mem_data;
  if (mem_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgTopQueryRsp.mem_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace bs_czl

// @@protoc_insertion_point(global_scope)
