// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bs_cmd.proto

#ifndef PROTOBUF_bs_5fcmd_2eproto__INCLUDED
#define PROTOBUF_bs_5fcmd_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace bs_czl {
class BS_CMD;
class BS_CMDDefaultTypeInternal;
extern BS_CMDDefaultTypeInternal _BS_CMD_default_instance_;
}  // namespace bs_czl

namespace bs_czl {

namespace protobuf_bs_5fcmd_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_bs_5fcmd_2eproto

enum BS_CMD_ProtoclID {
  BS_CMD_ProtoclID_MSG_INI = 0,
  BS_CMD_ProtoclID_MSG_SET_REQ = 4097,
  BS_CMD_ProtoclID_MSG_SET_RSP = 4098,
  BS_CMD_ProtoclID_MSG_SET_BATCH_REQ = 4099,
  BS_CMD_ProtoclID_MSG_SET_BATCH_RSP = 4100,
  BS_CMD_ProtoclID_MSG_GET_SCORE_REQ = 4101,
  BS_CMD_ProtoclID_MSG_GET_SCORE_RSP = 4102,
  BS_CMD_ProtoclID_MSG_GET_SCORE_BATCH_REQ = 4103,
  BS_CMD_ProtoclID_MSG_GET_SCORE_BATCH_RSP = 4104,
  BS_CMD_ProtoclID_MSG_RANK_QUERY_REQ = 4105,
  BS_CMD_ProtoclID_MSG_RANK_QUERY_RSP = 4112,
  BS_CMD_ProtoclID_MSG_RANK_BATCH_QUERY_REQ = 4113,
  BS_CMD_ProtoclID_MSG_RANK_BATCH_QUERY_RSP = 4114,
  BS_CMD_ProtoclID_MSG_RANGE_QUERY_REQ = 4115,
  BS_CMD_ProtoclID_MSG_RANGE_QUERY_RSP = 4116,
  BS_CMD_ProtoclID_MSG_RANGEBYSCORE_QUERY_REQ = 4117,
  BS_CMD_ProtoclID_MSG_RANGEBYSCORE_QUERY_RSP = 4118,
  BS_CMD_ProtoclID_MSG_TOP_QUERY_REQ = 4119,
  BS_CMD_ProtoclID_MSG_TOP_QUERY_RSP = 4120,
  BS_CMD_ProtoclID_BS_CMD_ProtoclID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  BS_CMD_ProtoclID_BS_CMD_ProtoclID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool BS_CMD_ProtoclID_IsValid(int value);
const BS_CMD_ProtoclID BS_CMD_ProtoclID_ProtoclID_MIN = BS_CMD_ProtoclID_MSG_INI;
const BS_CMD_ProtoclID BS_CMD_ProtoclID_ProtoclID_MAX = BS_CMD_ProtoclID_MSG_TOP_QUERY_RSP;
const int BS_CMD_ProtoclID_ProtoclID_ARRAYSIZE = BS_CMD_ProtoclID_ProtoclID_MAX + 1;

const ::google::protobuf::EnumDescriptor* BS_CMD_ProtoclID_descriptor();
inline const ::std::string& BS_CMD_ProtoclID_Name(BS_CMD_ProtoclID value) {
  return ::google::protobuf::internal::NameOfEnum(
    BS_CMD_ProtoclID_descriptor(), value);
}
inline bool BS_CMD_ProtoclID_Parse(
    const ::std::string& name, BS_CMD_ProtoclID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BS_CMD_ProtoclID>(
    BS_CMD_ProtoclID_descriptor(), name, value);
}
// ===================================================================

class BS_CMD : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bs_czl.BS_CMD) */ {
 public:
  BS_CMD();
  virtual ~BS_CMD();

  BS_CMD(const BS_CMD& from);

  inline BS_CMD& operator=(const BS_CMD& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BS_CMD& default_instance();

  static inline const BS_CMD* internal_default_instance() {
    return reinterpret_cast<const BS_CMD*>(
               &_BS_CMD_default_instance_);
  }

  void Swap(BS_CMD* other);

  // implements Message ----------------------------------------------

  inline BS_CMD* New() const PROTOBUF_FINAL { return New(NULL); }

  BS_CMD* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BS_CMD& from);
  void MergeFrom(const BS_CMD& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BS_CMD* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef BS_CMD_ProtoclID ProtoclID;
  static const ProtoclID MSG_INI =
    BS_CMD_ProtoclID_MSG_INI;
  static const ProtoclID MSG_SET_REQ =
    BS_CMD_ProtoclID_MSG_SET_REQ;
  static const ProtoclID MSG_SET_RSP =
    BS_CMD_ProtoclID_MSG_SET_RSP;
  static const ProtoclID MSG_SET_BATCH_REQ =
    BS_CMD_ProtoclID_MSG_SET_BATCH_REQ;
  static const ProtoclID MSG_SET_BATCH_RSP =
    BS_CMD_ProtoclID_MSG_SET_BATCH_RSP;
  static const ProtoclID MSG_GET_SCORE_REQ =
    BS_CMD_ProtoclID_MSG_GET_SCORE_REQ;
  static const ProtoclID MSG_GET_SCORE_RSP =
    BS_CMD_ProtoclID_MSG_GET_SCORE_RSP;
  static const ProtoclID MSG_GET_SCORE_BATCH_REQ =
    BS_CMD_ProtoclID_MSG_GET_SCORE_BATCH_REQ;
  static const ProtoclID MSG_GET_SCORE_BATCH_RSP =
    BS_CMD_ProtoclID_MSG_GET_SCORE_BATCH_RSP;
  static const ProtoclID MSG_RANK_QUERY_REQ =
    BS_CMD_ProtoclID_MSG_RANK_QUERY_REQ;
  static const ProtoclID MSG_RANK_QUERY_RSP =
    BS_CMD_ProtoclID_MSG_RANK_QUERY_RSP;
  static const ProtoclID MSG_RANK_BATCH_QUERY_REQ =
    BS_CMD_ProtoclID_MSG_RANK_BATCH_QUERY_REQ;
  static const ProtoclID MSG_RANK_BATCH_QUERY_RSP =
    BS_CMD_ProtoclID_MSG_RANK_BATCH_QUERY_RSP;
  static const ProtoclID MSG_RANGE_QUERY_REQ =
    BS_CMD_ProtoclID_MSG_RANGE_QUERY_REQ;
  static const ProtoclID MSG_RANGE_QUERY_RSP =
    BS_CMD_ProtoclID_MSG_RANGE_QUERY_RSP;
  static const ProtoclID MSG_RANGEBYSCORE_QUERY_REQ =
    BS_CMD_ProtoclID_MSG_RANGEBYSCORE_QUERY_REQ;
  static const ProtoclID MSG_RANGEBYSCORE_QUERY_RSP =
    BS_CMD_ProtoclID_MSG_RANGEBYSCORE_QUERY_RSP;
  static const ProtoclID MSG_TOP_QUERY_REQ =
    BS_CMD_ProtoclID_MSG_TOP_QUERY_REQ;
  static const ProtoclID MSG_TOP_QUERY_RSP =
    BS_CMD_ProtoclID_MSG_TOP_QUERY_RSP;
  static inline bool ProtoclID_IsValid(int value) {
    return BS_CMD_ProtoclID_IsValid(value);
  }
  static const ProtoclID ProtoclID_MIN =
    BS_CMD_ProtoclID_ProtoclID_MIN;
  static const ProtoclID ProtoclID_MAX =
    BS_CMD_ProtoclID_ProtoclID_MAX;
  static const int ProtoclID_ARRAYSIZE =
    BS_CMD_ProtoclID_ProtoclID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ProtoclID_descriptor() {
    return BS_CMD_ProtoclID_descriptor();
  }
  static inline const ::std::string& ProtoclID_Name(ProtoclID value) {
    return BS_CMD_ProtoclID_Name(value);
  }
  static inline bool ProtoclID_Parse(const ::std::string& name,
      ProtoclID* value) {
    return BS_CMD_ProtoclID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:bs_czl.BS_CMD)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_bs_5fcmd_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// BS_CMD

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace bs_czl

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::bs_czl::BS_CMD_ProtoclID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::bs_czl::BS_CMD_ProtoclID>() {
  return ::bs_czl::BS_CMD_ProtoclID_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_bs_5fcmd_2eproto__INCLUDED
