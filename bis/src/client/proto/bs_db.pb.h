// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bs_db.proto

#ifndef PROTOBUF_bs_5fdb_2eproto__INCLUDED
#define PROTOBUF_bs_5fdb_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace bs_czl {
class MsgDb;
class MsgDbDefaultTypeInternal;
extern MsgDbDefaultTypeInternal _MsgDb_default_instance_;
class MsgDbKey;
class MsgDbKeyDefaultTypeInternal;
extern MsgDbKeyDefaultTypeInternal _MsgDbKey_default_instance_;
class MsgDbTable;
class MsgDbTableDefaultTypeInternal;
extern MsgDbTableDefaultTypeInternal _MsgDbTable_default_instance_;
class MsgDbVersion;
class MsgDbVersionDefaultTypeInternal;
extern MsgDbVersionDefaultTypeInternal _MsgDbVersion_default_instance_;
class MsgLenType;
class MsgLenTypeDefaultTypeInternal;
extern MsgLenTypeDefaultTypeInternal _MsgLenType_default_instance_;
class MsgNodeType;
class MsgNodeTypeDefaultTypeInternal;
extern MsgNodeTypeDefaultTypeInternal _MsgNodeType_default_instance_;
}  // namespace bs_czl

namespace bs_czl {

namespace protobuf_bs_5fdb_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_bs_5fdb_2eproto

enum MsgNodeType_Type {
  MsgNodeType_Type_VERSION = 0,
  MsgNodeType_Type_DB = 1,
  MsgNodeType_Type_TABLE = 2,
  MsgNodeType_Type_KEY = 3,
  MsgNodeType_Type_MsgNodeType_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MsgNodeType_Type_MsgNodeType_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MsgNodeType_Type_IsValid(int value);
const MsgNodeType_Type MsgNodeType_Type_Type_MIN = MsgNodeType_Type_VERSION;
const MsgNodeType_Type MsgNodeType_Type_Type_MAX = MsgNodeType_Type_KEY;
const int MsgNodeType_Type_Type_ARRAYSIZE = MsgNodeType_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgNodeType_Type_descriptor();
inline const ::std::string& MsgNodeType_Type_Name(MsgNodeType_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgNodeType_Type_descriptor(), value);
}
inline bool MsgNodeType_Type_Parse(
    const ::std::string& name, MsgNodeType_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgNodeType_Type>(
    MsgNodeType_Type_descriptor(), name, value);
}
enum MsgLenType_Type {
  MsgLenType_Type_BS_6BIT = 0,
  MsgLenType_Type_BS_14BIT = 1,
  MsgLenType_Type_BS_32BIT = 2,
  MsgLenType_Type_MsgLenType_Type_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MsgLenType_Type_MsgLenType_Type_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MsgLenType_Type_IsValid(int value);
const MsgLenType_Type MsgLenType_Type_Type_MIN = MsgLenType_Type_BS_6BIT;
const MsgLenType_Type MsgLenType_Type_Type_MAX = MsgLenType_Type_BS_32BIT;
const int MsgLenType_Type_Type_ARRAYSIZE = MsgLenType_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgLenType_Type_descriptor();
inline const ::std::string& MsgLenType_Type_Name(MsgLenType_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgLenType_Type_descriptor(), value);
}
inline bool MsgLenType_Type_Parse(
    const ::std::string& name, MsgLenType_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgLenType_Type>(
    MsgLenType_Type_descriptor(), name, value);
}
// ===================================================================

class MsgNodeType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bs_czl.MsgNodeType) */ {
 public:
  MsgNodeType();
  virtual ~MsgNodeType();

  MsgNodeType(const MsgNodeType& from);

  inline MsgNodeType& operator=(const MsgNodeType& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgNodeType& default_instance();

  static inline const MsgNodeType* internal_default_instance() {
    return reinterpret_cast<const MsgNodeType*>(
               &_MsgNodeType_default_instance_);
  }

  void Swap(MsgNodeType* other);

  // implements Message ----------------------------------------------

  inline MsgNodeType* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgNodeType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgNodeType& from);
  void MergeFrom(const MsgNodeType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgNodeType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MsgNodeType_Type Type;
  static const Type VERSION =
    MsgNodeType_Type_VERSION;
  static const Type DB =
    MsgNodeType_Type_DB;
  static const Type TABLE =
    MsgNodeType_Type_TABLE;
  static const Type KEY =
    MsgNodeType_Type_KEY;
  static inline bool Type_IsValid(int value) {
    return MsgNodeType_Type_IsValid(value);
  }
  static const Type Type_MIN =
    MsgNodeType_Type_Type_MIN;
  static const Type Type_MAX =
    MsgNodeType_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    MsgNodeType_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return MsgNodeType_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return MsgNodeType_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return MsgNodeType_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:bs_czl.MsgNodeType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_bs_5fdb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgLenType : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bs_czl.MsgLenType) */ {
 public:
  MsgLenType();
  virtual ~MsgLenType();

  MsgLenType(const MsgLenType& from);

  inline MsgLenType& operator=(const MsgLenType& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLenType& default_instance();

  static inline const MsgLenType* internal_default_instance() {
    return reinterpret_cast<const MsgLenType*>(
               &_MsgLenType_default_instance_);
  }

  void Swap(MsgLenType* other);

  // implements Message ----------------------------------------------

  inline MsgLenType* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgLenType* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgLenType& from);
  void MergeFrom(const MsgLenType& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgLenType* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MsgLenType_Type Type;
  static const Type BS_6BIT =
    MsgLenType_Type_BS_6BIT;
  static const Type BS_14BIT =
    MsgLenType_Type_BS_14BIT;
  static const Type BS_32BIT =
    MsgLenType_Type_BS_32BIT;
  static inline bool Type_IsValid(int value) {
    return MsgLenType_Type_IsValid(value);
  }
  static const Type Type_MIN =
    MsgLenType_Type_Type_MIN;
  static const Type Type_MAX =
    MsgLenType_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    MsgLenType_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return MsgLenType_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return MsgLenType_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return MsgLenType_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:bs_czl.MsgLenType)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct protobuf_bs_5fdb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgDbVersion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bs_czl.MsgDbVersion) */ {
 public:
  MsgDbVersion();
  virtual ~MsgDbVersion();

  MsgDbVersion(const MsgDbVersion& from);

  inline MsgDbVersion& operator=(const MsgDbVersion& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDbVersion& default_instance();

  static inline const MsgDbVersion* internal_default_instance() {
    return reinterpret_cast<const MsgDbVersion*>(
               &_MsgDbVersion_default_instance_);
  }

  void Swap(MsgDbVersion* other);

  // implements Message ----------------------------------------------

  inline MsgDbVersion* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgDbVersion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgDbVersion& from);
  void MergeFrom(const MsgDbVersion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgDbVersion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const void* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // bytes auth = 2;
  void clear_auth();
  static const int kAuthFieldNumber = 2;
  const ::std::string& auth() const;
  void set_auth(const ::std::string& value);
  #if LANG_CXX11
  void set_auth(::std::string&& value);
  #endif
  void set_auth(const char* value);
  void set_auth(const void* value, size_t size);
  ::std::string* mutable_auth();
  ::std::string* release_auth();
  void set_allocated_auth(::std::string* auth);

  // @@protoc_insertion_point(class_scope:bs_czl.MsgDbVersion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr auth_;
  mutable int _cached_size_;
  friend struct protobuf_bs_5fdb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgDb : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bs_czl.MsgDb) */ {
 public:
  MsgDb();
  virtual ~MsgDb();

  MsgDb(const MsgDb& from);

  inline MsgDb& operator=(const MsgDb& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDb& default_instance();

  static inline const MsgDb* internal_default_instance() {
    return reinterpret_cast<const MsgDb*>(
               &_MsgDb_default_instance_);
  }

  void Swap(MsgDb* other);

  // implements Message ----------------------------------------------

  inline MsgDb* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgDb* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgDb& from);
  void MergeFrom(const MsgDb& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgDb* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 num = 1;
  void clear_num();
  static const int kNumFieldNumber = 1;
  ::google::protobuf::uint64 num() const;
  void set_num(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bs_czl.MsgDb)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 num_;
  mutable int _cached_size_;
  friend struct protobuf_bs_5fdb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgDbTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bs_czl.MsgDbTable) */ {
 public:
  MsgDbTable();
  virtual ~MsgDbTable();

  MsgDbTable(const MsgDbTable& from);

  inline MsgDbTable& operator=(const MsgDbTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDbTable& default_instance();

  static inline const MsgDbTable* internal_default_instance() {
    return reinterpret_cast<const MsgDbTable*>(
               &_MsgDbTable_default_instance_);
  }

  void Swap(MsgDbTable* other);

  // implements Message ----------------------------------------------

  inline MsgDbTable* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgDbTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgDbTable& from);
  void MergeFrom(const MsgDbTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgDbTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes key_id = 1;
  void clear_key_id();
  static const int kKeyIdFieldNumber = 1;
  const ::std::string& key_id() const;
  void set_key_id(const ::std::string& value);
  #if LANG_CXX11
  void set_key_id(::std::string&& value);
  #endif
  void set_key_id(const char* value);
  void set_key_id(const void* value, size_t size);
  ::std::string* mutable_key_id();
  ::std::string* release_key_id();
  void set_allocated_key_id(::std::string* key_id);

  // uint64 length = 2;
  void clear_length();
  static const int kLengthFieldNumber = 2;
  ::google::protobuf::uint64 length() const;
  void set_length(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:bs_czl.MsgDbTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_id_;
  ::google::protobuf::uint64 length_;
  mutable int _cached_size_;
  friend struct protobuf_bs_5fdb_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgDbKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bs_czl.MsgDbKey) */ {
 public:
  MsgDbKey();
  virtual ~MsgDbKey();

  MsgDbKey(const MsgDbKey& from);

  inline MsgDbKey& operator=(const MsgDbKey& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDbKey& default_instance();

  static inline const MsgDbKey* internal_default_instance() {
    return reinterpret_cast<const MsgDbKey*>(
               &_MsgDbKey_default_instance_);
  }

  void Swap(MsgDbKey* other);

  // implements Message ----------------------------------------------

  inline MsgDbKey* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgDbKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgDbKey& from);
  void MergeFrom(const MsgDbKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgDbKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes key = 1;
  int key_size() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key(int index) const;
  ::std::string* mutable_key(int index);
  void set_key(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_key(int index, ::std::string&& value);
  #endif
  void set_key(int index, const char* value);
  void set_key(int index, const void* value, size_t size);
  ::std::string* add_key();
  void add_key(const ::std::string& value);
  #if LANG_CXX11
  void add_key(::std::string&& value);
  #endif
  void add_key(const char* value);
  void add_key(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& key() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_key();

  // repeated bytes val = 2;
  int val_size() const;
  void clear_val();
  static const int kValFieldNumber = 2;
  const ::std::string& val(int index) const;
  ::std::string* mutable_val(int index);
  void set_val(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_val(int index, ::std::string&& value);
  #endif
  void set_val(int index, const char* value);
  void set_val(int index, const void* value, size_t size);
  ::std::string* add_val();
  void add_val(const ::std::string& value);
  #if LANG_CXX11
  void add_val(::std::string&& value);
  #endif
  void add_val(const char* value);
  void add_val(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& val() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_val();

  // @@protoc_insertion_point(class_scope:bs_czl.MsgDbKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> key_;
  ::google::protobuf::RepeatedPtrField< ::std::string> val_;
  mutable int _cached_size_;
  friend struct protobuf_bs_5fdb_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MsgNodeType

// -------------------------------------------------------------------

// MsgLenType

// -------------------------------------------------------------------

// MsgDbVersion

// bytes version = 1;
inline void MsgDbVersion::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgDbVersion::version() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgDbVersion.version)
  return version_.GetNoArena();
}
inline void MsgDbVersion::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgDbVersion.version)
}
#if LANG_CXX11
inline void MsgDbVersion::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgDbVersion.version)
}
#endif
inline void MsgDbVersion::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgDbVersion.version)
}
inline void MsgDbVersion::set_version(const void* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgDbVersion.version)
}
inline ::std::string* MsgDbVersion::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgDbVersion.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgDbVersion::release_version() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgDbVersion.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgDbVersion::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgDbVersion.version)
}

// bytes auth = 2;
inline void MsgDbVersion::clear_auth() {
  auth_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgDbVersion::auth() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgDbVersion.auth)
  return auth_.GetNoArena();
}
inline void MsgDbVersion::set_auth(const ::std::string& value) {
  
  auth_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgDbVersion.auth)
}
#if LANG_CXX11
inline void MsgDbVersion::set_auth(::std::string&& value) {
  
  auth_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgDbVersion.auth)
}
#endif
inline void MsgDbVersion::set_auth(const char* value) {
  
  auth_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgDbVersion.auth)
}
inline void MsgDbVersion::set_auth(const void* value, size_t size) {
  
  auth_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgDbVersion.auth)
}
inline ::std::string* MsgDbVersion::mutable_auth() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgDbVersion.auth)
  return auth_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgDbVersion::release_auth() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgDbVersion.auth)
  
  return auth_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgDbVersion::set_allocated_auth(::std::string* auth) {
  if (auth != NULL) {
    
  } else {
    
  }
  auth_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), auth);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgDbVersion.auth)
}

// -------------------------------------------------------------------

// MsgDb

// uint64 num = 1;
inline void MsgDb::clear_num() {
  num_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgDb::num() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgDb.num)
  return num_;
}
inline void MsgDb::set_num(::google::protobuf::uint64 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgDb.num)
}

// -------------------------------------------------------------------

// MsgDbTable

// bytes key_id = 1;
inline void MsgDbTable::clear_key_id() {
  key_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgDbTable::key_id() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgDbTable.key_id)
  return key_id_.GetNoArena();
}
inline void MsgDbTable::set_key_id(const ::std::string& value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bs_czl.MsgDbTable.key_id)
}
#if LANG_CXX11
inline void MsgDbTable::set_key_id(::std::string&& value) {
  
  key_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bs_czl.MsgDbTable.key_id)
}
#endif
inline void MsgDbTable::set_key_id(const char* value) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgDbTable.key_id)
}
inline void MsgDbTable::set_key_id(const void* value, size_t size) {
  
  key_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgDbTable.key_id)
}
inline ::std::string* MsgDbTable::mutable_key_id() {
  
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgDbTable.key_id)
  return key_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgDbTable::release_key_id() {
  // @@protoc_insertion_point(field_release:bs_czl.MsgDbTable.key_id)
  
  return key_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgDbTable::set_allocated_key_id(::std::string* key_id) {
  if (key_id != NULL) {
    
  } else {
    
  }
  key_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key_id);
  // @@protoc_insertion_point(field_set_allocated:bs_czl.MsgDbTable.key_id)
}

// uint64 length = 2;
inline void MsgDbTable::clear_length() {
  length_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgDbTable::length() const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgDbTable.length)
  return length_;
}
inline void MsgDbTable::set_length(::google::protobuf::uint64 value) {
  
  length_ = value;
  // @@protoc_insertion_point(field_set:bs_czl.MsgDbTable.length)
}

// -------------------------------------------------------------------

// MsgDbKey

// repeated bytes key = 1;
inline int MsgDbKey::key_size() const {
  return key_.size();
}
inline void MsgDbKey::clear_key() {
  key_.Clear();
}
inline const ::std::string& MsgDbKey::key(int index) const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgDbKey.key)
  return key_.Get(index);
}
inline ::std::string* MsgDbKey::mutable_key(int index) {
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgDbKey.key)
  return key_.Mutable(index);
}
inline void MsgDbKey::set_key(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:bs_czl.MsgDbKey.key)
  key_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MsgDbKey::set_key(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:bs_czl.MsgDbKey.key)
  key_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MsgDbKey::set_key(int index, const char* value) {
  key_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgDbKey.key)
}
inline void MsgDbKey::set_key(int index, const void* value, size_t size) {
  key_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgDbKey.key)
}
inline ::std::string* MsgDbKey::add_key() {
  // @@protoc_insertion_point(field_add_mutable:bs_czl.MsgDbKey.key)
  return key_.Add();
}
inline void MsgDbKey::add_key(const ::std::string& value) {
  key_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:bs_czl.MsgDbKey.key)
}
#if LANG_CXX11
inline void MsgDbKey::add_key(::std::string&& value) {
  key_.Add()->assign(std::move(value));
  // @@protoc_insertion_point(field_add:bs_czl.MsgDbKey.key)
}
#endif
inline void MsgDbKey::add_key(const char* value) {
  key_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:bs_czl.MsgDbKey.key)
}
inline void MsgDbKey::add_key(const void* value, size_t size) {
  key_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:bs_czl.MsgDbKey.key)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MsgDbKey::key() const {
  // @@protoc_insertion_point(field_list:bs_czl.MsgDbKey.key)
  return key_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MsgDbKey::mutable_key() {
  // @@protoc_insertion_point(field_mutable_list:bs_czl.MsgDbKey.key)
  return &key_;
}

// repeated bytes val = 2;
inline int MsgDbKey::val_size() const {
  return val_.size();
}
inline void MsgDbKey::clear_val() {
  val_.Clear();
}
inline const ::std::string& MsgDbKey::val(int index) const {
  // @@protoc_insertion_point(field_get:bs_czl.MsgDbKey.val)
  return val_.Get(index);
}
inline ::std::string* MsgDbKey::mutable_val(int index) {
  // @@protoc_insertion_point(field_mutable:bs_czl.MsgDbKey.val)
  return val_.Mutable(index);
}
inline void MsgDbKey::set_val(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:bs_czl.MsgDbKey.val)
  val_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MsgDbKey::set_val(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:bs_czl.MsgDbKey.val)
  val_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MsgDbKey::set_val(int index, const char* value) {
  val_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:bs_czl.MsgDbKey.val)
}
inline void MsgDbKey::set_val(int index, const void* value, size_t size) {
  val_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:bs_czl.MsgDbKey.val)
}
inline ::std::string* MsgDbKey::add_val() {
  // @@protoc_insertion_point(field_add_mutable:bs_czl.MsgDbKey.val)
  return val_.Add();
}
inline void MsgDbKey::add_val(const ::std::string& value) {
  val_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:bs_czl.MsgDbKey.val)
}
#if LANG_CXX11
inline void MsgDbKey::add_val(::std::string&& value) {
  val_.Add()->assign(std::move(value));
  // @@protoc_insertion_point(field_add:bs_czl.MsgDbKey.val)
}
#endif
inline void MsgDbKey::add_val(const char* value) {
  val_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:bs_czl.MsgDbKey.val)
}
inline void MsgDbKey::add_val(const void* value, size_t size) {
  val_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:bs_czl.MsgDbKey.val)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MsgDbKey::val() const {
  // @@protoc_insertion_point(field_list:bs_czl.MsgDbKey.val)
  return val_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MsgDbKey::mutable_val() {
  // @@protoc_insertion_point(field_mutable_list:bs_czl.MsgDbKey.val)
  return &val_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace bs_czl

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::bs_czl::MsgNodeType_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::bs_czl::MsgNodeType_Type>() {
  return ::bs_czl::MsgNodeType_Type_descriptor();
}
template <> struct is_proto_enum< ::bs_czl::MsgLenType_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::bs_czl::MsgLenType_Type>() {
  return ::bs_czl::MsgLenType_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_bs_5fdb_2eproto__INCLUDED
